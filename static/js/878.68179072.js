"use strict";
(self.webpackChunksyncswap = self.webpackChunksyncswap || []).push([[878], {
    39528: function(e, t, r) {
        r.d(t, {
            Gn: function() {
                return w
            },
            HU: function() {
                return d
            }
        });
        var n = r(29439)
          , s = r(74165)
          , i = r(15671)
          , a = r(43144)
          , o = r(93433)
          , c = r(4942)
          , u = r(66797)
          , l = r(68041)
          , p = r(29219)
          , h = r(86092)
          , f = "".concat("wc", "@").concat(2, ":").concat("ethereum_provider", ":")
          , d = ["eth_sendTransaction", "personal_sign"]
          , v = ["chainChanged", "accountsChanged"]
          , g = r(85491);
        function m(e) {
            return Number(e[0].split(":")[1])
        }
        function y(e) {
            return "0x".concat(e.toString(16))
        }
        function b(e) {
            var t = e.chains
              , r = e.optionalChains
              , n = e.methods
              , s = e.optionalMethods
              , i = e.events
              , a = e.optionalEvents
              , u = e.rpcMap;
            if (!(0,
            p.qt)(t))
                throw new Error("Invalid chains");
            var l = t
              , h = n || d
              , f = i || v
              , g = {
                chains: l,
                methods: h,
                events: f,
                rpcMap: (0,
                c.Z)({}, m(l), u[m(l)])
            }
              , y = null === i || void 0 === i ? void 0 : i.filter((function(e) {
                return !v.includes(e)
            }
            ))
              , b = null === n || void 0 === n ? void 0 : n.filter((function(e) {
                return !d.includes(e)
            }
            ));
            if (!r && !a && !s && !(null === y || void 0 === y ? void 0 : y.length) && !(null === b || void 0 === b ? void 0 : b.length))
                return {
                    required: g
                };
            var k = (null === y || void 0 === y ? void 0 : y.length) && (null === b || void 0 === b ? void 0 : b.length) || !r;
            return {
                required: g,
                optional: {
                    chains: (0,
                    o.Z)(new Set(k ? l.concat(r || []) : r)),
                    methods: (0,
                    o.Z)(new Set(h.concat(s || []))),
                    events: (0,
                    o.Z)(new Set(f.concat(a || []))),
                    rpcMap: u
                }
            }
        }
        var k = function() {
            function e() {
                var t = this;
                (0,
                i.Z)(this, e),
                this.events = new l.EventEmitter,
                this.namespace = "eip155",
                this.accounts = [],
                this.chainId = 1,
                this.STORAGE_KEY = f,
                this.on = function(e, r) {
                    return t.events.on(e, r),
                    t
                }
                ,
                this.once = function(e, r) {
                    return t.events.once(e, r),
                    t
                }
                ,
                this.removeListener = function(e, r) {
                    return t.events.removeListener(e, r),
                    t
                }
                ,
                this.off = function(e, r) {
                    return t.events.off(e, r),
                    t
                }
                ,
                this.parseAccount = function(e) {
                    return t.isCompatibleChainId(e) ? t.parseAccountId(e).address : e
                }
                ,
                this.signer = {},
                this.rpc = {}
            }
            return (0,
            a.Z)(e, [{
                key: "request",
                value: function(e) {
                    return (0,
                    u.__awaiter)(this, void 0, void 0, (0,
                    s.Z)().mark((function t() {
                        var r, n, i, a = this;
                        return (0,
                        s.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    if (r = this.rpc.methods.includes(e.method),
                                    n = function() {
                                        return a.signer.request(e, a.formatChainId(a.chainId))
                                    }
                                    ,
                                    r) {
                                        t.next = 4;
                                        break
                                    }
                                    return t.abrupt("return", n());
                                case 4:
                                    return t.prev = 4,
                                    g._.showApprovalModal(e),
                                    t.next = 8,
                                    n();
                                case 8:
                                    return i = t.sent,
                                    g._.closeModal("animateSuccess"),
                                    t.abrupt("return", i);
                                case 13:
                                    throw t.prev = 13,
                                    t.t0 = t.catch(4),
                                    g._.closeModal(),
                                    t.t0;
                                case 17:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this, [[4, 13]])
                    }
                    )))
                }
            }, {
                key: "sendAsync",
                value: function(e, t) {
                    this.signer.sendAsync(e, t, this.formatChainId(this.chainId))
                }
            }, {
                key: "connected",
                get: function() {
                    return !!this.signer.client && this.signer.client.core.relayer.connected
                }
            }, {
                key: "connecting",
                get: function() {
                    return !!this.signer.client && this.signer.client.core.relayer.connecting
                }
            }, {
                key: "enable",
                value: function() {
                    return (0,
                    u.__awaiter)(this, void 0, void 0, (0,
                    s.Z)().mark((function e() {
                        var t;
                        return (0,
                        s.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (this.session) {
                                        e.next = 3;
                                        break
                                    }
                                    return e.next = 3,
                                    this.connect();
                                case 3:
                                    return e.next = 5,
                                    this.request({
                                        method: "eth_requestAccounts"
                                    });
                                case 5:
                                    return t = e.sent,
                                    e.abrupt("return", t);
                                case 7:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )))
                }
            }, {
                key: "connect",
                value: function(e) {
                    return (0,
                    u.__awaiter)(this, void 0, void 0, (0,
                    s.Z)().mark((function t() {
                        var r, n, i, a, o, l = this;
                        return (0,
                        s.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    if (this.signer.client) {
                                        t.next = 2;
                                        break
                                    }
                                    throw new Error("Provider not initialized. Call init() first");
                                case 2:
                                    return this.loadConnectOpts(e),
                                    r = b(this.rpc),
                                    n = r.required,
                                    i = r.optional,
                                    t.prev = 4,
                                    t.next = 7,
                                    new Promise((function(t, r) {
                                        return (0,
                                        u.__awaiter)(l, void 0, void 0, (0,
                                        s.Z)().mark((function a() {
                                            return (0,
                                            s.Z)().wrap((function(s) {
                                                for (; ; )
                                                    switch (s.prev = s.next) {
                                                    case 0:
                                                        return this.rpc.showQrModal,
                                                        s.next = 3,
                                                        this.signer.connect(Object.assign(Object.assign({
                                                            namespaces: (0,
                                                            c.Z)({}, this.namespace, n)
                                                        }, i && {
                                                            optionalNamespaces: (0,
                                                            c.Z)({}, this.namespace, i)
                                                        }), {
                                                            pairingTopic: null === e || void 0 === e ? void 0 : e.pairingTopic
                                                        })).then((function(e) {
                                                            t(e)
                                                        }
                                                        )).catch((function(e) {
                                                            r(new Error(e.message))
                                                        }
                                                        ));
                                                    case 3:
                                                    case "end":
                                                        return s.stop()
                                                    }
                                            }
                                            ), a, this)
                                        }
                                        )))
                                    }
                                    ));
                                case 7:
                                    if (a = t.sent) {
                                        t.next = 10;
                                        break
                                    }
                                    return t.abrupt("return");
                                case 10:
                                    this.setChainIds(this.rpc.chains),
                                    o = (0,
                                    p.gu)(a.namespaces, [this.namespace]),
                                    this.setAccounts(o),
                                    this.events.emit("connect", {
                                        chainId: y(this.chainId)
                                    }),
                                    g._.closeModal("animateSuccess"),
                                    t.next = 22;
                                    break;
                                case 17:
                                    throw t.prev = 17,
                                    t.t0 = t.catch(4),
                                    this.signer.logger.error(t.t0),
                                    g._.closeModal(),
                                    t.t0;
                                case 22:
                                    return t.prev = 22,
                                    t.finish(22);
                                case 24:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this, [[4, 17, 22, 24]])
                    }
                    )))
                }
            }, {
                key: "disconnect",
                value: function() {
                    return (0,
                    u.__awaiter)(this, void 0, void 0, (0,
                    s.Z)().mark((function e() {
                        return (0,
                        s.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (!this.session) {
                                        e.next = 3;
                                        break
                                    }
                                    return e.next = 3,
                                    this.signer.disconnect();
                                case 3:
                                    this.reset();
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )))
                }
            }, {
                key: "isWalletConnect",
                get: function() {
                    return !0
                }
            }, {
                key: "session",
                get: function() {
                    return this.signer.session
                }
            }, {
                key: "registerEventListeners",
                value: function() {
                    var e = this;
                    this.signer.on("session_event", (function(t) {
                        var r = t.params.event;
                        "accountsChanged" === r.name ? (e.accounts = e.parseAccounts(r.data),
                        e.events.emit("accountsChanged", e.accounts)) : "chainChanged" === r.name ? e.setChainId(e.formatChainId(r.data)) : e.events.emit(r.name, r.data),
                        e.events.emit("session_event", t)
                    }
                    )),
                    this.signer.on("chainChanged", (function(t) {
                        var r = parseInt(t);
                        e.chainId = r,
                        e.events.emit("chainChanged", y(e.chainId)),
                        e.persist()
                    }
                    )),
                    this.signer.on("session_update", (function(t) {
                        e.events.emit("session_update", t)
                    }
                    )),
                    this.signer.on("session_delete", (function(t) {
                        e.reset(),
                        e.events.emit("session_delete", t),
                        e.events.emit("disconnect", Object.assign(Object.assign({}, (0,
                        p.D6)("USER_DISCONNECTED")), {
                            data: t.topic,
                            name: "USER_DISCONNECTED"
                        }))
                    }
                    )),
                    this.signer.on("display_uri", (function(t) {
                        g._.closeModal(),
                        g._.showConnectionModal(t),
                        e.events.emit("display_uri", t)
                    }
                    ))
                }
            }, {
                key: "setHttpProvider",
                value: function(e) {
                    this.request({
                        method: "wallet_switchEthereumChain",
                        params: [{
                            chainId: e.toString(16)
                        }]
                    })
                }
            }, {
                key: "isCompatibleChainId",
                value: function(e) {
                    return "string" === typeof e && e.startsWith("".concat(this.namespace, ":"))
                }
            }, {
                key: "formatChainId",
                value: function(e) {
                    return "".concat(this.namespace, ":").concat(e)
                }
            }, {
                key: "parseChainId",
                value: function(e) {
                    return Number(e.split(":")[1])
                }
            }, {
                key: "setChainIds",
                value: function(e) {
                    var t = this
                      , r = e.filter((function(e) {
                        return t.isCompatibleChainId(e)
                    }
                    )).map((function(e) {
                        return t.parseChainId(e)
                    }
                    ));
                    r.length && (this.chainId = r[0],
                    this.events.emit("chainChanged", y(this.chainId)),
                    this.persist())
                }
            }, {
                key: "setChainId",
                value: function(e) {
                    if (this.isCompatibleChainId(e)) {
                        var t = this.parseChainId(e);
                        this.chainId = t,
                        this.setHttpProvider(t)
                    }
                }
            }, {
                key: "parseAccountId",
                value: function(e) {
                    var t = e.split(":")
                      , r = (0,
                    n.Z)(t, 3)
                      , s = r[0]
                      , i = r[1]
                      , a = r[2];
                    return {
                        chainId: "".concat(s, ":").concat(i),
                        address: a
                    }
                }
            }, {
                key: "setAccounts",
                value: function(e) {
                    var t = this;
                    this.accounts = e.filter((function(e) {
                        return t.parseChainId(t.parseAccountId(e).chainId) === t.chainId
                    }
                    )).map((function(e) {
                        return t.parseAccountId(e).address
                    }
                    )),
                    this.events.emit("accountsChanged", this.accounts)
                }
            }, {
                key: "getRpcConfig",
                value: function(e) {
                    var t, r, n = this;
                    return {
                        chains: (null === (t = e.chains) || void 0 === t ? void 0 : t.map((function(e) {
                            return n.formatChainId(e)
                        }
                        ))) || ["".concat(this.namespace, ":1")],
                        optionalChains: e.optionalChains ? e.optionalChains.map((function(e) {
                            return n.formatChainId(e)
                        }
                        )) : void 0,
                        methods: (null === e || void 0 === e ? void 0 : e.methods) || d,
                        events: (null === e || void 0 === e ? void 0 : e.events) || v,
                        optionalMethods: (null === e || void 0 === e ? void 0 : e.optionalMethods) || [],
                        optionalEvents: (null === e || void 0 === e ? void 0 : e.optionalEvents) || [],
                        rpcMap: (null === e || void 0 === e ? void 0 : e.rpcMap) || this.buildRpcMap(e.chains.concat(e.optionalChains || []), e.projectId),
                        showQrModal: Boolean(null === e || void 0 === e ? void 0 : e.showQrModal),
                        qrModalOptions: null !== (r = null === e || void 0 === e ? void 0 : e.qrModalOptions) && void 0 !== r ? r : void 0,
                        projectId: e.projectId,
                        metadata: e.metadata
                    }
                }
            }, {
                key: "buildRpcMap",
                value: function(e, t) {
                    var r = this
                      , n = {};
                    return e.forEach((function(e) {
                        n[e] = r.getRpcUrl(e, t)
                    }
                    )),
                    n
                }
            }, {
                key: "initialize",
                value: function(e) {
                    return (0,
                    u.__awaiter)(this, void 0, void 0, (0,
                    s.Z)().mark((function t() {
                        return (0,
                        s.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return this.rpc = this.getRpcConfig(e),
                                    this.chainId = m(this.rpc.chains),
                                    t.next = 4,
                                    h.k.init({
                                        projectId: this.rpc.projectId,
                                        metadata: this.rpc.metadata
                                    });
                                case 4:
                                    return this.signer = t.sent,
                                    this.registerEventListeners(),
                                    t.next = 8,
                                    this.loadPersistedSession();
                                case 8:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this)
                    }
                    )))
                }
            }, {
                key: "loadConnectOpts",
                value: function(e) {
                    var t = this;
                    if (e) {
                        var r = e.chains
                          , n = e.optionalChains
                          , s = e.rpcMap;
                        r && (0,
                        p.qt)(r) && (this.rpc.chains = r.map((function(e) {
                            return t.formatChainId(e)
                        }
                        )),
                        r.forEach((function(e) {
                            t.rpc.rpcMap[e] = (null === s || void 0 === s ? void 0 : s[e]) || t.getRpcUrl(e)
                        }
                        ))),
                        n && (0,
                        p.qt)(n) && (this.rpc.optionalChains = [],
                        this.rpc.optionalChains = null === n || void 0 === n ? void 0 : n.map((function(e) {
                            return t.formatChainId(e)
                        }
                        )),
                        n.forEach((function(e) {
                            t.rpc.rpcMap[e] = (null === s || void 0 === s ? void 0 : s[e]) || t.getRpcUrl(e)
                        }
                        )))
                    }
                }
            }, {
                key: "getRpcUrl",
                value: function(e, t) {
                    var r;
                    return (null === (r = this.rpc.rpcMap) || void 0 === r ? void 0 : r[e]) || "".concat("https://rpc.walletconnect.com/v1/", "?chainId=eip155:").concat(e, "&projectId=").concat(t || this.rpc.projectId)
                }
            }, {
                key: "loadPersistedSession",
                value: function() {
                    return (0,
                    u.__awaiter)(this, void 0, void 0, (0,
                    s.Z)().mark((function e() {
                        var t;
                        return (0,
                        s.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (this.session) {
                                        e.next = 2;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 2:
                                    return e.next = 4,
                                    this.signer.client.core.storage.getItem("".concat(this.STORAGE_KEY, "/chainId"));
                                case 4:
                                    t = e.sent,
                                    this.setChainIds(t ? [this.formatChainId(t)] : this.session.namespaces[this.namespace].accounts),
                                    this.setAccounts(this.session.namespaces[this.namespace].accounts);
                                case 7:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )))
                }
            }, {
                key: "reset",
                value: function() {
                    this.chainId = 1,
                    this.accounts = []
                }
            }, {
                key: "persist",
                value: function() {
                    this.session && this.signer.client.core.storage.setItem("".concat(this.STORAGE_KEY, "/chainId"), this.chainId)
                }
            }, {
                key: "parseAccounts",
                value: function(e) {
                    var t = this;
                    return "string" === typeof e || e instanceof String ? [this.parseAccount(e)] : e.map((function(e) {
                        return t.parseAccount(e)
                    }
                    ))
                }
            }], [{
                key: "init",
                value: function(t) {
                    return (0,
                    u.__awaiter)(this, void 0, void 0, (0,
                    s.Z)().mark((function r() {
                        var n;
                        return (0,
                        s.Z)().wrap((function(r) {
                            for (; ; )
                                switch (r.prev = r.next) {
                                case 0:
                                    return n = new e,
                                    r.next = 3,
                                    n.initialize(t);
                                case 3:
                                    return r.abrupt("return", n);
                                case 4:
                                case "end":
                                    return r.stop()
                                }
                        }
                        ), r)
                    }
                    )))
                }
            }]),
            e
        }()
          , w = k
    },
    15157: function(e, t, r) {
        r.d(t, {
            Sg: function() {
                return f
            },
            zt: function() {
                return d
            }
        });
        var n = r(74165)
          , s = r(15671)
          , i = r(43144)
          , a = r(60136)
          , o = r(29388)
          , c = r(19560)
          , u = r(54812)
          , l = r(2735)
          , p = function(e, t, r, n) {
            return new (r || (r = Promise))((function(s, i) {
                function a(e) {
                    try {
                        c(n.next(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function o(e) {
                    try {
                        c(n.throw(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function c(e) {
                    var t;
                    e.done ? s(e.value) : (t = e.value,
                    t instanceof r ? t : new r((function(e) {
                        e(t)
                    }
                    ))).then(a, o)
                }
                c((n = n.apply(e, t || [])).next())
            }
            ))
        }
          , h = new l.Logger("abstract-provider/5.7.0")
          , f = function(e) {
            (0,
            a.Z)(r, e);
            var t = (0,
            o.Z)(r);
            function r() {
                return (0,
                s.Z)(this, r),
                t.apply(this, arguments)
            }
            return (0,
            i.Z)(r, null, [{
                key: "isForkEvent",
                value: function(e) {
                    return !(!e || !e._isForkEvent)
                }
            }]),
            r
        }(u.Description)
          , d = function() {
            function e() {
                (0,
                s.Z)(this, e),
                h.checkAbstract(this instanceof e ? this.constructor : void 0, e),
                (0,
                u.defineReadOnly)(this, "_isProvider", !0)
            }
            return (0,
            i.Z)(e, [{
                key: "getFeeData",
                value: function() {
                    return p(this, void 0, void 0, (0,
                    n.Z)().mark((function e() {
                        var t, r, s, i, a, o;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    (0,
                                    u.resolveProperties)({
                                        block: this.getBlock("latest"),
                                        gasPrice: this.getGasPrice().catch((function(e) {
                                            return null
                                        }
                                        ))
                                    });
                                case 2:
                                    return t = e.sent,
                                    r = t.block,
                                    s = t.gasPrice,
                                    i = null,
                                    a = null,
                                    o = null,
                                    r && r.baseFeePerGas && (i = r.baseFeePerGas,
                                    o = c.O$.from("1500000000"),
                                    a = r.baseFeePerGas.mul(2).add(o)),
                                    e.abrupt("return", {
                                        lastBaseFeePerGas: i,
                                        maxFeePerGas: a,
                                        maxPriorityFeePerGas: o,
                                        gasPrice: s
                                    });
                                case 8:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )))
                }
            }, {
                key: "addListener",
                value: function(e, t) {
                    return this.on(e, t)
                }
            }, {
                key: "removeListener",
                value: function(e, t) {
                    return this.off(e, t)
                }
            }], [{
                key: "isProvider",
                value: function(e) {
                    return !(!e || !e._isProvider)
                }
            }]),
            e
        }()
    },
    49862: function(e, t, r) {
        r.d(t, {
            i: function() {
                return n
            }
        });
        var n = "providers/5.7.2"
    },
    5341: function(e, t, r) {
        r.d(t, {
            H2: function() {
                return V
            },
            Zk: function() {
                return W
            }
        });
        var n = r(97326)
          , s = r(60136)
          , i = r(29388)
          , a = r(74165)
          , o = r(15671)
          , c = r(43144)
          , u = r(15157)
          , l = r(48853)
          , p = r(44247)
          , h = r(19560)
          , f = r(52009)
          , d = r(44160)
          , v = r(68565)
          , g = r(88133)
          , m = r(54812)
          , y = r(43984)
          , b = r(91953)
          , k = r(28786)
          , w = r(65109)
          , x = r.n(w)
          , E = r(2735)
          , Z = r(49862)
          , _ = r(23134)
          , P = function(e, t, r, n) {
            return new (r || (r = Promise))((function(s, i) {
                function a(e) {
                    try {
                        c(n.next(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function o(e) {
                    try {
                        c(n.throw(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function c(e) {
                    var t;
                    e.done ? s(e.value) : (t = e.value,
                    t instanceof r ? t : new r((function(e) {
                        e(t)
                    }
                    ))).then(a, o)
                }
                c((n = n.apply(e, t || [])).next())
            }
            ))
        }
          , I = new E.Logger(Z.i);
        function N(e) {
            return null == e ? "null" : (32 !== (0,
            f.hexDataLength)(e) && I.throwArgumentError("invalid topic", "topic", e),
            e.toLowerCase())
        }
        function R(e) {
            for (e = e.slice(); e.length > 0 && null == e[e.length - 1]; )
                e.pop();
            return e.map((function(e) {
                if (Array.isArray(e)) {
                    var t = {};
                    e.forEach((function(e) {
                        t[N(e)] = !0
                    }
                    ));
                    var r = Object.keys(t);
                    return r.sort(),
                    r.join("|")
                }
                return N(e)
            }
            )).join("&")
        }
        function S(e) {
            if ("string" === typeof e) {
                if (e = e.toLowerCase(),
                32 === (0,
                f.hexDataLength)(e))
                    return "tx:" + e;
                if (-1 === e.indexOf(":"))
                    return e
            } else {
                if (Array.isArray(e))
                    return "filter:*:" + R(e);
                if (u.Sg.isForkEvent(e))
                    throw I.warn("not implemented"),
                    new Error("not implemented");
                if (e && "object" === typeof e)
                    return "filter:" + (e.address || "*") + ":" + R(e.topics || [])
            }
            throw new Error("invalid event - " + e)
        }
        function T() {
            return (new Date).getTime()
        }
        function O(e) {
            return new Promise((function(t) {
                setTimeout(t, e)
            }
            ))
        }
        var C = ["block", "network", "pending", "poll"]
          , L = function() {
            function e(t, r, n) {
                (0,
                o.Z)(this, e),
                (0,
                m.defineReadOnly)(this, "tag", t),
                (0,
                m.defineReadOnly)(this, "listener", r),
                (0,
                m.defineReadOnly)(this, "once", n),
                this._lastBlockNumber = -2,
                this._inflight = !1
            }
            return (0,
            c.Z)(e, [{
                key: "event",
                get: function() {
                    switch (this.type) {
                    case "tx":
                        return this.hash;
                    case "filter":
                        return this.filter
                    }
                    return this.tag
                }
            }, {
                key: "type",
                get: function() {
                    return this.tag.split(":")[0]
                }
            }, {
                key: "hash",
                get: function() {
                    var e = this.tag.split(":");
                    return "tx" !== e[0] ? null : e[1]
                }
            }, {
                key: "filter",
                get: function() {
                    var e = this.tag.split(":");
                    if ("filter" !== e[0])
                        return null;
                    var t, r = e[1], n = "" === (t = e[2]) ? [] : t.split(/&/g).map((function(e) {
                        if ("" === e)
                            return [];
                        var t = e.split("|").map((function(e) {
                            return "null" === e ? null : e
                        }
                        ));
                        return 1 === t.length ? t[0] : t
                    }
                    )), s = {};
                    return n.length > 0 && (s.topics = n),
                    r && "*" !== r && (s.address = r),
                    s
                }
            }, {
                key: "pollable",
                value: function() {
                    return this.tag.indexOf(":") >= 0 || C.indexOf(this.tag) >= 0
                }
            }]),
            e
        }()
          , A = {
            0: {
                symbol: "btc",
                p2pkh: 0,
                p2sh: 5,
                prefix: "bc"
            },
            2: {
                symbol: "ltc",
                p2pkh: 48,
                p2sh: 50,
                prefix: "ltc"
            },
            3: {
                symbol: "doge",
                p2pkh: 30,
                p2sh: 22
            },
            60: {
                symbol: "eth",
                ilk: "eth"
            },
            61: {
                symbol: "etc",
                ilk: "eth"
            },
            700: {
                symbol: "xdai",
                ilk: "eth"
            }
        };
        function D(e) {
            return (0,
            f.hexZeroPad)(h.O$.from(e).toHexString(), 32)
        }
        function B(e) {
            return p.Base58.encode((0,
            f.concat)([e, (0,
            f.hexDataSlice)((0,
            y.JQ)((0,
            y.JQ)(e)), 0, 4)]))
        }
        var q = new RegExp("^(ipfs)://(.*)$","i")
          , U = [new RegExp("^(https)://(.*)$","i"), new RegExp("^(data):(.*)$","i"), q, new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$","i")];
        function j(e, t) {
            try {
                return (0,
                b.ZN)(M(e, t))
            } catch (r) {}
            return null
        }
        function M(e, t) {
            if ("0x" === e)
                return null;
            var r = h.O$.from((0,
            f.hexDataSlice)(e, t, t + 32)).toNumber()
              , n = h.O$.from((0,
            f.hexDataSlice)(e, r, r + 32)).toNumber();
            return (0,
            f.hexDataSlice)(e, r + 32, r + 32 + n)
        }
        function z(e) {
            return e.match(/^ipfs:\/\/ipfs\//i) ? e = e.substring(12) : e.match(/^ipfs:\/\//i) ? e = e.substring(7) : I.throwArgumentError("unsupported IPFS format", "link", e),
            "https://gateway.ipfs.io/ipfs/".concat(e)
        }
        function H(e) {
            var t = (0,
            f.arrayify)(e);
            if (t.length > 32)
                throw new Error("internal; should not happen");
            var r = new Uint8Array(32);
            return r.set(t, 32 - t.length),
            r
        }
        function K(e) {
            if (e.length % 32 === 0)
                return e;
            var t = new Uint8Array(32 * Math.ceil(e.length / 32));
            return t.set(e),
            t
        }
        function F(e) {
            for (var t = [], r = 0, n = 0; n < e.length; n++)
                t.push(null),
                r += 32;
            for (var s = 0; s < e.length; s++) {
                var i = (0,
                f.arrayify)(e[s]);
                t[s] = H(r),
                t.push(H(i.length)),
                t.push(K(i)),
                r += 32 + 32 * Math.ceil(i.length / 32)
            }
            return (0,
            f.hexConcat)(t)
        }
        var V = function() {
            function e(t, r, n, s) {
                (0,
                o.Z)(this, e),
                (0,
                m.defineReadOnly)(this, "provider", t),
                (0,
                m.defineReadOnly)(this, "name", n),
                (0,
                m.defineReadOnly)(this, "address", t.formatter.address(r)),
                (0,
                m.defineReadOnly)(this, "_resolvedAddress", s)
            }
            return (0,
            c.Z)(e, [{
                key: "supportsWildcard",
                value: function() {
                    var e = this;
                    return this._supportsEip2544 || (this._supportsEip2544 = this.provider.call({
                        to: this.address,
                        data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"
                    }).then((function(e) {
                        return h.O$.from(e).eq(1)
                    }
                    )).catch((function(t) {
                        if (t.code === E.Logger.errors.CALL_EXCEPTION)
                            return !1;
                        throw e._supportsEip2544 = null,
                        t
                    }
                    ))),
                    this._supportsEip2544
                }
            }, {
                key: "_fetch",
                value: function(e, t) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function r() {
                        var n, s, i;
                        return (0,
                        a.Z)().wrap((function(r) {
                            for (; ; )
                                switch (r.prev = r.next) {
                                case 0:
                                    return n = {
                                        to: this.address,
                                        ccipReadEnabled: !0,
                                        data: (0,
                                        f.hexConcat)([e, (0,
                                        v.VM)(this.name), t || "0x"])
                                    },
                                    s = !1,
                                    r.next = 4,
                                    this.supportsWildcard();
                                case 4:
                                    if (!r.sent) {
                                        r.next = 7;
                                        break
                                    }
                                    s = !0,
                                    n.data = (0,
                                    f.hexConcat)(["0x9061b923", F([(0,
                                    v.Kn)(this.name), n.data])]);
                                case 7:
                                    return r.prev = 7,
                                    r.next = 10,
                                    this.provider.call(n);
                                case 10:
                                    return i = r.sent,
                                    (0,
                                    f.arrayify)(i).length % 32 === 4 && I.throwError("resolver threw error", E.Logger.errors.CALL_EXCEPTION, {
                                        transaction: n,
                                        data: i
                                    }),
                                    s && (i = M(i, 0)),
                                    r.abrupt("return", i);
                                case 16:
                                    if (r.prev = 16,
                                    r.t0 = r.catch(7),
                                    r.t0.code !== E.Logger.errors.CALL_EXCEPTION) {
                                        r.next = 20;
                                        break
                                    }
                                    return r.abrupt("return", null);
                                case 20:
                                    throw r.t0;
                                case 21:
                                case "end":
                                    return r.stop()
                                }
                        }
                        ), r, this, [[7, 16]])
                    }
                    )))
                }
            }, {
                key: "_fetchBytes",
                value: function(e, t) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function r() {
                        var n;
                        return (0,
                        a.Z)().wrap((function(r) {
                            for (; ; )
                                switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2,
                                    this._fetch(e, t);
                                case 2:
                                    if (null == (n = r.sent)) {
                                        r.next = 5;
                                        break
                                    }
                                    return r.abrupt("return", M(n, 0));
                                case 5:
                                    return r.abrupt("return", null);
                                case 6:
                                case "end":
                                    return r.stop()
                                }
                        }
                        ), r, this)
                    }
                    )))
                }
            }, {
                key: "_getAddress",
                value: function(e, t) {
                    var r = A[String(e)];
                    if (null == r && I.throwError("unsupported coin type: ".concat(e), E.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "getAddress(".concat(e, ")")
                    }),
                    "eth" === r.ilk)
                        return this.provider.formatter.address(t);
                    var n = (0,
                    f.arrayify)(t);
                    if (null != r.p2pkh) {
                        var s = t.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
                        if (s) {
                            var i = parseInt(s[1], 16);
                            if (s[2].length === 2 * i && i >= 1 && i <= 75)
                                return B((0,
                                f.concat)([[r.p2pkh], "0x" + s[2]]))
                        }
                    }
                    if (null != r.p2sh) {
                        var a = t.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
                        if (a) {
                            var o = parseInt(a[1], 16);
                            if (a[2].length === 2 * o && o >= 1 && o <= 75)
                                return B((0,
                                f.concat)([[r.p2sh], "0x" + a[2]]))
                        }
                    }
                    if (null != r.prefix) {
                        var c = n[1]
                          , u = n[0];
                        if (0 === u ? 20 !== c && 32 !== c && (u = -1) : u = -1,
                        u >= 0 && n.length === 2 + c && c >= 1 && c <= 75) {
                            var l = x().toWords(n.slice(2));
                            return l.unshift(u),
                            x().encode(r.prefix, l)
                        }
                    }
                    return null
                }
            }, {
                key: "getAddress",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r, n, s;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    if (null == e && (e = 60),
                                    60 !== e) {
                                        t.next = 16;
                                        break
                                    }
                                    return t.prev = 2,
                                    t.next = 5,
                                    this._fetch("0x3b3b57de");
                                case 5:
                                    if ("0x" !== (r = t.sent) && r !== d.R) {
                                        t.next = 8;
                                        break
                                    }
                                    return t.abrupt("return", null);
                                case 8:
                                    return t.abrupt("return", this.provider.formatter.callAddress(r));
                                case 11:
                                    if (t.prev = 11,
                                    t.t0 = t.catch(2),
                                    t.t0.code !== E.Logger.errors.CALL_EXCEPTION) {
                                        t.next = 15;
                                        break
                                    }
                                    return t.abrupt("return", null);
                                case 15:
                                    throw t.t0;
                                case 16:
                                    return t.next = 18,
                                    this._fetchBytes("0xf1cb7e06", D(e));
                                case 18:
                                    if (null != (n = t.sent) && "0x" !== n) {
                                        t.next = 21;
                                        break
                                    }
                                    return t.abrupt("return", null);
                                case 21:
                                    return null == (s = this._getAddress(e, n)) && I.throwError("invalid or unsupported coin data", E.Logger.errors.UNSUPPORTED_OPERATION, {
                                        operation: "getAddress(".concat(e, ")"),
                                        coinType: e,
                                        data: n
                                    }),
                                    t.abrupt("return", s);
                                case 24:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this, [[2, 11]])
                    }
                    )))
                }
            }, {
                key: "getAvatar",
                value: function() {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function e() {
                        var t, r, n, s, i, o, c, u, l, p, d, v, g, m, y, b;
                        return (0,
                        a.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return t = [{
                                        type: "name",
                                        content: this.name
                                    }],
                                    e.prev = 1,
                                    e.next = 4,
                                    this.getText("avatar");
                                case 4:
                                    if (null != (r = e.sent)) {
                                        e.next = 7;
                                        break
                                    }
                                    return e.abrupt("return", null);
                                case 7:
                                    n = 0;
                                case 8:
                                    if (!(n < U.length)) {
                                        e.next = 91;
                                        break
                                    }
                                    if (null != (s = r.match(U[n]))) {
                                        e.next = 12;
                                        break
                                    }
                                    return e.abrupt("continue", 88);
                                case 12:
                                    i = s[1].toLowerCase(),
                                    e.t0 = i,
                                    e.next = "https" === e.t0 ? 16 : "data" === e.t0 ? 18 : "ipfs" === e.t0 ? 20 : "erc721" === e.t0 || "erc1155" === e.t0 ? 22 : 88;
                                    break;
                                case 16:
                                    return t.push({
                                        type: "url",
                                        content: r
                                    }),
                                    e.abrupt("return", {
                                        linkage: t,
                                        url: r
                                    });
                                case 18:
                                    return t.push({
                                        type: "data",
                                        content: r
                                    }),
                                    e.abrupt("return", {
                                        linkage: t,
                                        url: r
                                    });
                                case 20:
                                    return t.push({
                                        type: "ipfs",
                                        content: r
                                    }),
                                    e.abrupt("return", {
                                        linkage: t,
                                        url: z(r)
                                    });
                                case 22:
                                    if (o = "erc721" === i ? "0xc87b56dd" : "0x0e89341c",
                                    t.push({
                                        type: i,
                                        content: r
                                    }),
                                    e.t1 = this._resolvedAddress,
                                    e.t1) {
                                        e.next = 29;
                                        break
                                    }
                                    return e.next = 28,
                                    this.getAddress();
                                case 28:
                                    e.t1 = e.sent;
                                case 29:
                                    if (c = e.t1,
                                    2 === (u = (s[2] || "").split("/")).length) {
                                        e.next = 33;
                                        break
                                    }
                                    return e.abrupt("return", null);
                                case 33:
                                    return e.next = 35,
                                    this.provider.formatter.address(u[0]);
                                case 35:
                                    if (l = e.sent,
                                    p = (0,
                                    f.hexZeroPad)(h.O$.from(u[1]).toHexString(), 32),
                                    "erc721" !== i) {
                                        e.next = 48;
                                        break
                                    }
                                    return e.t2 = this.provider.formatter,
                                    e.next = 41,
                                    this.provider.call({
                                        to: l,
                                        data: (0,
                                        f.hexConcat)(["0x6352211e", p])
                                    });
                                case 41:
                                    if (e.t3 = e.sent,
                                    d = e.t2.callAddress.call(e.t2, e.t3),
                                    c === d) {
                                        e.next = 45;
                                        break
                                    }
                                    return e.abrupt("return", null);
                                case 45:
                                    t.push({
                                        type: "owner",
                                        content: d
                                    }),
                                    e.next = 57;
                                    break;
                                case 48:
                                    if ("erc1155" !== i) {
                                        e.next = 57;
                                        break
                                    }
                                    return e.t4 = h.O$,
                                    e.next = 52,
                                    this.provider.call({
                                        to: l,
                                        data: (0,
                                        f.hexConcat)(["0x00fdd58e", (0,
                                        f.hexZeroPad)(c, 32), p])
                                    });
                                case 52:
                                    if (e.t5 = e.sent,
                                    !(v = e.t4.from.call(e.t4, e.t5)).isZero()) {
                                        e.next = 56;
                                        break
                                    }
                                    return e.abrupt("return", null);
                                case 56:
                                    t.push({
                                        type: "balance",
                                        content: v.toString()
                                    });
                                case 57:
                                    return g = {
                                        to: this.provider.formatter.address(u[0]),
                                        data: (0,
                                        f.hexConcat)([o, p])
                                    },
                                    e.t6 = j,
                                    e.next = 61,
                                    this.provider.call(g);
                                case 61:
                                    if (e.t7 = e.sent,
                                    null != (m = (0,
                                    e.t6)(e.t7, 0))) {
                                        e.next = 65;
                                        break
                                    }
                                    return e.abrupt("return", null);
                                case 65:
                                    return t.push({
                                        type: "metadata-url-base",
                                        content: m
                                    }),
                                    "erc1155" === i && (m = m.replace("{id}", p.substring(2)),
                                    t.push({
                                        type: "metadata-url-expanded",
                                        content: m
                                    })),
                                    m.match(/^ipfs:/i) && (m = z(m)),
                                    t.push({
                                        type: "metadata-url",
                                        content: m
                                    }),
                                    e.next = 71,
                                    (0,
                                    k.fetchJson)(m);
                                case 71:
                                    if (y = e.sent) {
                                        e.next = 74;
                                        break
                                    }
                                    return e.abrupt("return", null);
                                case 74:
                                    if (t.push({
                                        type: "metadata",
                                        content: JSON.stringify(y)
                                    }),
                                    "string" === typeof (b = y.image)) {
                                        e.next = 78;
                                        break
                                    }
                                    return e.abrupt("return", null);
                                case 78:
                                    if (!b.match(/^(https:\/\/|data:)/i)) {
                                        e.next = 81;
                                        break
                                    }
                                    e.next = 86;
                                    break;
                                case 81:
                                    if (null != b.match(q)) {
                                        e.next = 84;
                                        break
                                    }
                                    return e.abrupt("return", null);
                                case 84:
                                    t.push({
                                        type: "url-ipfs",
                                        content: b
                                    }),
                                    b = z(b);
                                case 86:
                                    return t.push({
                                        type: "url",
                                        content: b
                                    }),
                                    e.abrupt("return", {
                                        linkage: t,
                                        url: b
                                    });
                                case 88:
                                    n++,
                                    e.next = 8;
                                    break;
                                case 91:
                                    e.next = 95;
                                    break;
                                case 93:
                                    e.prev = 93,
                                    e.t8 = e.catch(1);
                                case 95:
                                    return e.abrupt("return", null);
                                case 96:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[1, 93]])
                    }
                    )))
                }
            }, {
                key: "getContentHash",
                value: function() {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function e() {
                        var t, r, n, s, i, o, c, u, h;
                        return (0,
                        a.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this._fetchBytes("0xbc1c58d1");
                                case 2:
                                    if (null != (t = e.sent) && "0x" !== t) {
                                        e.next = 5;
                                        break
                                    }
                                    return e.abrupt("return", null);
                                case 5:
                                    if (!(r = t.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/))) {
                                        e.next = 10;
                                        break
                                    }
                                    if (n = parseInt(r[3], 16),
                                    r[4].length !== 2 * n) {
                                        e.next = 10;
                                        break
                                    }
                                    return e.abrupt("return", "ipfs://" + p.Base58.encode("0x" + r[1]));
                                case 10:
                                    if (!(s = t.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/))) {
                                        e.next = 15;
                                        break
                                    }
                                    if (i = parseInt(s[3], 16),
                                    s[4].length !== 2 * i) {
                                        e.next = 15;
                                        break
                                    }
                                    return e.abrupt("return", "ipns://" + p.Base58.encode("0x" + s[1]));
                                case 15:
                                    if (!(o = t.match(/^0xe40101fa011b20([0-9a-f]*)$/))) {
                                        e.next = 19;
                                        break
                                    }
                                    if (64 !== o[1].length) {
                                        e.next = 19;
                                        break
                                    }
                                    return e.abrupt("return", "bzz://" + o[1]);
                                case 19:
                                    if (!(c = t.match(/^0x90b2c605([0-9a-f]*)$/))) {
                                        e.next = 25;
                                        break
                                    }
                                    if (68 !== c[1].length) {
                                        e.next = 25;
                                        break
                                    }
                                    return u = {
                                        "=": "",
                                        "+": "-",
                                        "/": "_"
                                    },
                                    h = (0,
                                    l.c)("0x" + c[1]).replace(/[=+\/]/g, (function(e) {
                                        return u[e]
                                    }
                                    )),
                                    e.abrupt("return", "sia://" + h);
                                case 25:
                                    return e.abrupt("return", I.throwError("invalid or unsupported content hash data", E.Logger.errors.UNSUPPORTED_OPERATION, {
                                        operation: "getContentHash()",
                                        data: t
                                    }));
                                case 26:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )))
                }
            }, {
                key: "getText",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r, n;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return r = (0,
                                    b.Y0)(e),
                                    (r = (0,
                                    f.concat)([D(64), D(r.length), r])).length % 32 !== 0 && (r = (0,
                                    f.concat)([r, (0,
                                    f.hexZeroPad)("0x", 32 - e.length % 32)])),
                                    t.next = 5,
                                    this._fetchBytes("0x59d1d43c", (0,
                                    f.hexlify)(r));
                                case 5:
                                    if (null != (n = t.sent) && "0x" !== n) {
                                        t.next = 8;
                                        break
                                    }
                                    return t.abrupt("return", null);
                                case 8:
                                    return t.abrupt("return", (0,
                                    b.ZN)(n));
                                case 9:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this)
                    }
                    )))
                }
            }]),
            e
        }()
          , G = null
          , J = 1
          , W = function(e) {
            (0,
            s.Z)(r, e);
            var t = (0,
            i.Z)(r);
            function r(e) {
                var s;
                if ((0,
                o.Z)(this, r),
                (s = t.call(this))._events = [],
                s._emitted = {
                    block: -2
                },
                s.disableCcipRead = !1,
                s.formatter = (this instanceof r ? this.constructor : void 0).getFormatter(),
                (0,
                m.defineReadOnly)((0,
                n.Z)(s), "anyNetwork", "any" === e),
                s.anyNetwork && (e = s.detectNetwork()),
                e instanceof Promise)
                    s._networkPromise = e,
                    e.catch((function(e) {}
                    )),
                    s._ready().catch((function(e) {}
                    ));
                else {
                    var i = (0,
                    m.getStatic)(this instanceof r ? this.constructor : void 0, "getNetwork")(e);
                    i ? ((0,
                    m.defineReadOnly)((0,
                    n.Z)(s), "_network", i),
                    s.emit("network", i, null)) : I.throwArgumentError("invalid network", "network", e)
                }
                return s._maxInternalBlockNumber = -1024,
                s._lastBlockNumber = -2,
                s._maxFilterBlockRange = 10,
                s._pollingInterval = 4e3,
                s._fastQueryDate = 0,
                s
            }
            return (0,
            c.Z)(r, [{
                key: "_ready",
                value: function() {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function e() {
                        var t;
                        return (0,
                        a.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (null != this._network) {
                                        e.next = 17;
                                        break
                                    }
                                    if (t = null,
                                    !this._networkPromise) {
                                        e.next = 11;
                                        break
                                    }
                                    return e.prev = 3,
                                    e.next = 6,
                                    this._networkPromise;
                                case 6:
                                    t = e.sent,
                                    e.next = 11;
                                    break;
                                case 9:
                                    e.prev = 9,
                                    e.t0 = e.catch(3);
                                case 11:
                                    if (null != t) {
                                        e.next = 15;
                                        break
                                    }
                                    return e.next = 14,
                                    this.detectNetwork();
                                case 14:
                                    t = e.sent;
                                case 15:
                                    t || I.throwError("no network detected", E.Logger.errors.UNKNOWN_ERROR, {}),
                                    null == this._network && (this.anyNetwork ? this._network = t : (0,
                                    m.defineReadOnly)(this, "_network", t),
                                    this.emit("network", t, null));
                                case 17:
                                    return e.abrupt("return", this._network);
                                case 18:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[3, 9]])
                    }
                    )))
                }
            }, {
                key: "ready",
                get: function() {
                    var e = this;
                    return (0,
                    k.poll)((function() {
                        return e._ready().then((function(e) {
                            return e
                        }
                        ), (function(e) {
                            if (e.code !== E.Logger.errors.NETWORK_ERROR || "noNetwork" !== e.event)
                                throw e
                        }
                        ))
                    }
                    ))
                }
            }, {
                key: "ccipReadFetch",
                value: function(e, t, r) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function n() {
                        var s, i, o, c, u, l, p, h, f;
                        return (0,
                        a.Z)().wrap((function(n) {
                            for (; ; )
                                switch (n.prev = n.next) {
                                case 0:
                                    if (!this.disableCcipRead && 0 !== r.length) {
                                        n.next = 2;
                                        break
                                    }
                                    return n.abrupt("return", null);
                                case 2:
                                    s = e.to.toLowerCase(),
                                    i = t.toLowerCase(),
                                    o = [],
                                    c = 0;
                                case 6:
                                    if (!(c < r.length)) {
                                        n.next = 22;
                                        break
                                    }
                                    return u = r[c],
                                    l = u.replace("{sender}", s).replace("{data}", i),
                                    p = u.indexOf("{data}") >= 0 ? null : JSON.stringify({
                                        data: i,
                                        sender: s
                                    }),
                                    n.next = 12,
                                    (0,
                                    k.fetchJson)({
                                        url: l,
                                        errorPassThrough: !0
                                    }, p, (function(e, t) {
                                        return e.status = t.statusCode,
                                        e
                                    }
                                    ));
                                case 12:
                                    if (!(h = n.sent).data) {
                                        n.next = 15;
                                        break
                                    }
                                    return n.abrupt("return", h.data);
                                case 15:
                                    if (f = h.message || "unknown error",
                                    !(h.status >= 400 && h.status < 500)) {
                                        n.next = 18;
                                        break
                                    }
                                    return n.abrupt("return", I.throwError("response not found during CCIP fetch: ".concat(f), E.Logger.errors.SERVER_ERROR, {
                                        url: u,
                                        errorMessage: f
                                    }));
                                case 18:
                                    o.push(f);
                                case 19:
                                    c++,
                                    n.next = 6;
                                    break;
                                case 22:
                                    return n.abrupt("return", I.throwError("error encountered during CCIP fetch: ".concat(o.map((function(e) {
                                        return JSON.stringify(e)
                                    }
                                    )).join(", ")), E.Logger.errors.SERVER_ERROR, {
                                        urls: r,
                                        errorMessages: o
                                    }));
                                case 23:
                                case "end":
                                    return n.stop()
                                }
                        }
                        ), n, this)
                    }
                    )))
                }
            }, {
                key: "_getInternalBlockNumber",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r, n, s, i, o = this;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    this._ready();
                                case 2:
                                    if (!(e > 0)) {
                                        t.next = 20;
                                        break
                                    }
                                case 3:
                                    if (!this._internalBlockNumber) {
                                        t.next = 20;
                                        break
                                    }
                                    return r = this._internalBlockNumber,
                                    t.prev = 5,
                                    t.next = 8,
                                    r;
                                case 8:
                                    if (n = t.sent,
                                    !(T() - n.respTime <= e)) {
                                        t.next = 11;
                                        break
                                    }
                                    return t.abrupt("return", n.blockNumber);
                                case 11:
                                    return t.abrupt("break", 20);
                                case 14:
                                    if (t.prev = 14,
                                    t.t0 = t.catch(5),
                                    this._internalBlockNumber !== r) {
                                        t.next = 18;
                                        break
                                    }
                                    return t.abrupt("break", 20);
                                case 18:
                                    t.next = 3;
                                    break;
                                case 20:
                                    return s = T(),
                                    i = (0,
                                    m.resolveProperties)({
                                        blockNumber: this.perform("getBlockNumber", {}),
                                        networkError: this.getNetwork().then((function(e) {
                                            return null
                                        }
                                        ), (function(e) {
                                            return e
                                        }
                                        ))
                                    }).then((function(e) {
                                        var t = e.blockNumber
                                          , r = e.networkError;
                                        if (r)
                                            throw o._internalBlockNumber === i && (o._internalBlockNumber = null),
                                            r;
                                        var n = T();
                                        return (t = h.O$.from(t).toNumber()) < o._maxInternalBlockNumber && (t = o._maxInternalBlockNumber),
                                        o._maxInternalBlockNumber = t,
                                        o._setFastBlockNumber(t),
                                        {
                                            blockNumber: t,
                                            reqTime: s,
                                            respTime: n
                                        }
                                    }
                                    )),
                                    this._internalBlockNumber = i,
                                    i.catch((function(e) {
                                        o._internalBlockNumber === i && (o._internalBlockNumber = null)
                                    }
                                    )),
                                    t.next = 26,
                                    i;
                                case 26:
                                    return t.abrupt("return", t.sent.blockNumber);
                                case 27:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this, [[5, 14]])
                    }
                    )))
                }
            }, {
                key: "poll",
                value: function() {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function e() {
                        var t, r, n, s, i = this;
                        return (0,
                        a.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return t = J++,
                                    r = [],
                                    n = null,
                                    e.prev = 3,
                                    e.next = 6,
                                    this._getInternalBlockNumber(100 + this.pollingInterval / 2);
                                case 6:
                                    n = e.sent,
                                    e.next = 13;
                                    break;
                                case 9:
                                    return e.prev = 9,
                                    e.t0 = e.catch(3),
                                    this.emit("error", e.t0),
                                    e.abrupt("return");
                                case 13:
                                    if (this._setFastBlockNumber(n),
                                    this.emit("poll", t, n),
                                    n !== this._lastBlockNumber) {
                                        e.next = 18;
                                        break
                                    }
                                    return this.emit("didPoll", t),
                                    e.abrupt("return");
                                case 18:
                                    if (-2 === this._emitted.block && (this._emitted.block = n - 1),
                                    Math.abs(this._emitted.block - n) > 1e3)
                                        I.warn("network block skew detected; skipping block events (emitted=".concat(this._emitted.block, " blockNumber").concat(n, ")")),
                                        this.emit("error", I.makeError("network block skew detected", E.Logger.errors.NETWORK_ERROR, {
                                            blockNumber: n,
                                            event: "blockSkew",
                                            previousBlockNumber: this._emitted.block
                                        })),
                                        this.emit("block", n);
                                    else
                                        for (s = this._emitted.block + 1; s <= n; s++)
                                            this.emit("block", s);
                                    return this._emitted.block !== n && (this._emitted.block = n,
                                    Object.keys(this._emitted).forEach((function(e) {
                                        if ("block" !== e) {
                                            var t = i._emitted[e];
                                            "pending" !== t && n - t > 12 && delete i._emitted[e]
                                        }
                                    }
                                    ))),
                                    -2 === this._lastBlockNumber && (this._lastBlockNumber = n - 1),
                                    this._events.forEach((function(e) {
                                        switch (e.type) {
                                        case "tx":
                                            var t = e.hash
                                              , s = i.getTransactionReceipt(t).then((function(e) {
                                                return e && null != e.blockNumber ? (i._emitted["t:" + t] = e.blockNumber,
                                                i.emit(t, e),
                                                null) : null
                                            }
                                            )).catch((function(e) {
                                                i.emit("error", e)
                                            }
                                            ));
                                            r.push(s);
                                            break;
                                        case "filter":
                                            if (!e._inflight) {
                                                e._inflight = !0,
                                                -2 === e._lastBlockNumber && (e._lastBlockNumber = n - 1);
                                                var a = e.filter;
                                                a.fromBlock = e._lastBlockNumber + 1,
                                                a.toBlock = n;
                                                var o = a.toBlock - i._maxFilterBlockRange;
                                                o > a.fromBlock && (a.fromBlock = o),
                                                a.fromBlock < 0 && (a.fromBlock = 0);
                                                var c = i.getLogs(a).then((function(t) {
                                                    e._inflight = !1,
                                                    0 !== t.length && t.forEach((function(t) {
                                                        t.blockNumber > e._lastBlockNumber && (e._lastBlockNumber = t.blockNumber),
                                                        i._emitted["b:" + t.blockHash] = t.blockNumber,
                                                        i._emitted["t:" + t.transactionHash] = t.blockNumber,
                                                        i.emit(a, t)
                                                    }
                                                    ))
                                                }
                                                )).catch((function(t) {
                                                    i.emit("error", t),
                                                    e._inflight = !1
                                                }
                                                ));
                                                r.push(c)
                                            }
                                        }
                                    }
                                    )),
                                    this._lastBlockNumber = n,
                                    Promise.all(r).then((function() {
                                        i.emit("didPoll", t)
                                    }
                                    )).catch((function(e) {
                                        i.emit("error", e)
                                    }
                                    )),
                                    e.abrupt("return");
                                case 26:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[3, 9]])
                    }
                    )))
                }
            }, {
                key: "resetEventsBlock",
                value: function(e) {
                    this._lastBlockNumber = e - 1,
                    this.polling && this.poll()
                }
            }, {
                key: "network",
                get: function() {
                    return this._network
                }
            }, {
                key: "detectNetwork",
                value: function() {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function e() {
                        return (0,
                        a.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.abrupt("return", I.throwError("provider does not support network detection", E.Logger.errors.UNSUPPORTED_OPERATION, {
                                        operation: "provider.detectNetwork"
                                    }));
                                case 1:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )))
                }
            }, {
                key: "getNetwork",
                value: function() {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function e() {
                        var t, r, n;
                        return (0,
                        a.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this._ready();
                                case 2:
                                    return t = e.sent,
                                    e.next = 5,
                                    this.detectNetwork();
                                case 5:
                                    if (r = e.sent,
                                    t.chainId === r.chainId) {
                                        e.next = 23;
                                        break
                                    }
                                    if (!this.anyNetwork) {
                                        e.next = 20;
                                        break
                                    }
                                    return this._network = r,
                                    this._lastBlockNumber = -2,
                                    this._fastBlockNumber = null,
                                    this._fastBlockNumberPromise = null,
                                    this._fastQueryDate = 0,
                                    this._emitted.block = -2,
                                    this._maxInternalBlockNumber = -1024,
                                    this._internalBlockNumber = null,
                                    this.emit("network", r, t),
                                    e.next = 19,
                                    O(0);
                                case 19:
                                    return e.abrupt("return", this._network);
                                case 20:
                                    throw n = I.makeError("underlying network changed", E.Logger.errors.NETWORK_ERROR, {
                                        event: "changed",
                                        network: t,
                                        detectedNetwork: r
                                    }),
                                    this.emit("error", n),
                                    n;
                                case 23:
                                    return e.abrupt("return", t);
                                case 24:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )))
                }
            }, {
                key: "blockNumber",
                get: function() {
                    var e = this;
                    return this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((function(t) {
                        e._setFastBlockNumber(t)
                    }
                    ), (function(e) {}
                    )),
                    null != this._fastBlockNumber ? this._fastBlockNumber : -1
                }
            }, {
                key: "polling",
                get: function() {
                    return null != this._poller
                },
                set: function(e) {
                    var t = this;
                    e && !this._poller ? (this._poller = setInterval((function() {
                        t.poll()
                    }
                    ), this.pollingInterval),
                    this._bootstrapPoll || (this._bootstrapPoll = setTimeout((function() {
                        t.poll(),
                        t._bootstrapPoll = setTimeout((function() {
                            t._poller || t.poll(),
                            t._bootstrapPoll = null
                        }
                        ), t.pollingInterval)
                    }
                    ), 0))) : !e && this._poller && (clearInterval(this._poller),
                    this._poller = null)
                }
            }, {
                key: "pollingInterval",
                get: function() {
                    return this._pollingInterval
                },
                set: function(e) {
                    var t = this;
                    if ("number" !== typeof e || e <= 0 || parseInt(String(e)) != e)
                        throw new Error("invalid polling interval");
                    this._pollingInterval = e,
                    this._poller && (clearInterval(this._poller),
                    this._poller = setInterval((function() {
                        t.poll()
                    }
                    ), this._pollingInterval))
                }
            }, {
                key: "_getFastBlockNumber",
                value: function() {
                    var e = this
                      , t = T();
                    return t - this._fastQueryDate > 2 * this._pollingInterval && (this._fastQueryDate = t,
                    this._fastBlockNumberPromise = this.getBlockNumber().then((function(t) {
                        return (null == e._fastBlockNumber || t > e._fastBlockNumber) && (e._fastBlockNumber = t),
                        e._fastBlockNumber
                    }
                    ))),
                    this._fastBlockNumberPromise
                }
            }, {
                key: "_setFastBlockNumber",
                value: function(e) {
                    null != this._fastBlockNumber && e < this._fastBlockNumber || (this._fastQueryDate = T(),
                    (null == this._fastBlockNumber || e > this._fastBlockNumber) && (this._fastBlockNumber = e,
                    this._fastBlockNumberPromise = Promise.resolve(e)))
                }
            }, {
                key: "waitForTransaction",
                value: function(e, t, r) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function n() {
                        return (0,
                        a.Z)().wrap((function(n) {
                            for (; ; )
                                switch (n.prev = n.next) {
                                case 0:
                                    return n.abrupt("return", this._waitForTransaction(e, null == t ? 1 : t, r || 0, null));
                                case 1:
                                case "end":
                                    return n.stop()
                                }
                        }
                        ), n, this)
                    }
                    )))
                }
            }, {
                key: "_waitForTransaction",
                value: function(e, t, r, n) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function s() {
                        var i, o = this;
                        return (0,
                        a.Z)().wrap((function(s) {
                            for (; ; )
                                switch (s.prev = s.next) {
                                case 0:
                                    return s.next = 2,
                                    this.getTransactionReceipt(e);
                                case 2:
                                    if (!(((i = s.sent) ? i.confirmations : 0) >= t)) {
                                        s.next = 5;
                                        break
                                    }
                                    return s.abrupt("return", i);
                                case 5:
                                    return s.abrupt("return", new Promise((function(s, i) {
                                        var c = []
                                          , u = !1
                                          , l = function() {
                                            return !!u || (u = !0,
                                            c.forEach((function(e) {
                                                e()
                                            }
                                            )),
                                            !1)
                                        }
                                          , p = function(e) {
                                            e.confirmations < t || l() || s(e)
                                        };
                                        if (o.on(e, p),
                                        c.push((function() {
                                            o.removeListener(e, p)
                                        }
                                        )),
                                        n) {
                                            var h = n.startBlock
                                              , f = null
                                              , d = function r(s) {
                                                return P(o, void 0, void 0, (0,
                                                a.Z)().mark((function o() {
                                                    var c = this;
                                                    return (0,
                                                    a.Z)().wrap((function(o) {
                                                        for (; ; )
                                                            switch (o.prev = o.next) {
                                                            case 0:
                                                                if (!u) {
                                                                    o.next = 2;
                                                                    break
                                                                }
                                                                return o.abrupt("return");
                                                            case 2:
                                                                return o.next = 4,
                                                                O(1e3);
                                                            case 4:
                                                                this.getTransactionCount(n.from).then((function(o) {
                                                                    return P(c, void 0, void 0, (0,
                                                                    a.Z)().mark((function c() {
                                                                        var p, d, v, g, m, y;
                                                                        return (0,
                                                                        a.Z)().wrap((function(a) {
                                                                            for (; ; )
                                                                                switch (a.prev = a.next) {
                                                                                case 0:
                                                                                    if (!u) {
                                                                                        a.next = 2;
                                                                                        break
                                                                                    }
                                                                                    return a.abrupt("return");
                                                                                case 2:
                                                                                    if (!(o <= n.nonce)) {
                                                                                        a.next = 6;
                                                                                        break
                                                                                    }
                                                                                    h = s,
                                                                                    a.next = 41;
                                                                                    break;
                                                                                case 6:
                                                                                    return a.next = 8,
                                                                                    this.getTransaction(e);
                                                                                case 8:
                                                                                    if (!(p = a.sent) || null == p.blockNumber) {
                                                                                        a.next = 11;
                                                                                        break
                                                                                    }
                                                                                    return a.abrupt("return");
                                                                                case 11:
                                                                                    null == f && (f = h - 3) < n.startBlock && (f = n.startBlock);
                                                                                case 12:
                                                                                    if (!(f <= s)) {
                                                                                        a.next = 41;
                                                                                        break
                                                                                    }
                                                                                    if (!u) {
                                                                                        a.next = 15;
                                                                                        break
                                                                                    }
                                                                                    return a.abrupt("return");
                                                                                case 15:
                                                                                    return a.next = 17,
                                                                                    this.getBlockWithTransactions(f);
                                                                                case 17:
                                                                                    d = a.sent,
                                                                                    v = 0;
                                                                                case 19:
                                                                                    if (!(v < d.transactions.length)) {
                                                                                        a.next = 38;
                                                                                        break
                                                                                    }
                                                                                    if ((g = d.transactions[v]).hash !== e) {
                                                                                        a.next = 23;
                                                                                        break
                                                                                    }
                                                                                    return a.abrupt("return");
                                                                                case 23:
                                                                                    if (g.from !== n.from || g.nonce !== n.nonce) {
                                                                                        a.next = 35;
                                                                                        break
                                                                                    }
                                                                                    if (!u) {
                                                                                        a.next = 26;
                                                                                        break
                                                                                    }
                                                                                    return a.abrupt("return");
                                                                                case 26:
                                                                                    return a.next = 28,
                                                                                    this.waitForTransaction(g.hash, t);
                                                                                case 28:
                                                                                    if (m = a.sent,
                                                                                    !l()) {
                                                                                        a.next = 31;
                                                                                        break
                                                                                    }
                                                                                    return a.abrupt("return");
                                                                                case 31:
                                                                                    return y = "replaced",
                                                                                    g.data === n.data && g.to === n.to && g.value.eq(n.value) ? y = "repriced" : "0x" === g.data && g.from === g.to && g.value.isZero() && (y = "cancelled"),
                                                                                    i(I.makeError("transaction was replaced", E.Logger.errors.TRANSACTION_REPLACED, {
                                                                                        cancelled: "replaced" === y || "cancelled" === y,
                                                                                        reason: y,
                                                                                        replacement: this._wrapTransaction(g),
                                                                                        hash: e,
                                                                                        receipt: m
                                                                                    })),
                                                                                    a.abrupt("return");
                                                                                case 35:
                                                                                    v++,
                                                                                    a.next = 19;
                                                                                    break;
                                                                                case 38:
                                                                                    f++,
                                                                                    a.next = 12;
                                                                                    break;
                                                                                case 41:
                                                                                    if (!u) {
                                                                                        a.next = 43;
                                                                                        break
                                                                                    }
                                                                                    return a.abrupt("return");
                                                                                case 43:
                                                                                    this.once("block", r);
                                                                                case 44:
                                                                                case "end":
                                                                                    return a.stop()
                                                                                }
                                                                        }
                                                                        ), c, this)
                                                                    }
                                                                    )))
                                                                }
                                                                ), (function(e) {
                                                                    u || c.once("block", r)
                                                                }
                                                                ));
                                                            case 5:
                                                            case "end":
                                                                return o.stop()
                                                            }
                                                    }
                                                    ), o, this)
                                                }
                                                )))
                                            };
                                            if (u)
                                                return;
                                            o.once("block", d),
                                            c.push((function() {
                                                o.removeListener("block", d)
                                            }
                                            ))
                                        }
                                        if ("number" === typeof r && r > 0) {
                                            var v = setTimeout((function() {
                                                l() || i(I.makeError("timeout exceeded", E.Logger.errors.TIMEOUT, {
                                                    timeout: r
                                                }))
                                            }
                                            ), r);
                                            v.unref && v.unref(),
                                            c.push((function() {
                                                clearTimeout(v)
                                            }
                                            ))
                                        }
                                    }
                                    )));
                                case 6:
                                case "end":
                                    return s.stop()
                                }
                        }
                        ), s, this)
                    }
                    )))
                }
            }, {
                key: "getBlockNumber",
                value: function() {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function e() {
                        return (0,
                        a.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.abrupt("return", this._getInternalBlockNumber(0));
                                case 1:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )))
                }
            }, {
                key: "getGasPrice",
                value: function() {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function e() {
                        var t;
                        return (0,
                        a.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return e.next = 4,
                                    this.perform("getGasPrice", {});
                                case 4:
                                    return t = e.sent,
                                    e.prev = 5,
                                    e.abrupt("return", h.O$.from(t));
                                case 9:
                                    return e.prev = 9,
                                    e.t0 = e.catch(5),
                                    e.abrupt("return", I.throwError("bad result from backend", E.Logger.errors.SERVER_ERROR, {
                                        method: "getGasPrice",
                                        result: t,
                                        error: e.t0
                                    }));
                                case 12:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[5, 9]])
                    }
                    )))
                }
            }, {
                key: "getBalance",
                value: function(e, t) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function r() {
                        var n, s;
                        return (0,
                        a.Z)().wrap((function(r) {
                            for (; ; )
                                switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return r.next = 4,
                                    (0,
                                    m.resolveProperties)({
                                        address: this._getAddress(e),
                                        blockTag: this._getBlockTag(t)
                                    });
                                case 4:
                                    return n = r.sent,
                                    r.next = 7,
                                    this.perform("getBalance", n);
                                case 7:
                                    return s = r.sent,
                                    r.prev = 8,
                                    r.abrupt("return", h.O$.from(s));
                                case 12:
                                    return r.prev = 12,
                                    r.t0 = r.catch(8),
                                    r.abrupt("return", I.throwError("bad result from backend", E.Logger.errors.SERVER_ERROR, {
                                        method: "getBalance",
                                        params: n,
                                        result: s,
                                        error: r.t0
                                    }));
                                case 15:
                                case "end":
                                    return r.stop()
                                }
                        }
                        ), r, this, [[8, 12]])
                    }
                    )))
                }
            }, {
                key: "getTransactionCount",
                value: function(e, t) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function r() {
                        var n, s;
                        return (0,
                        a.Z)().wrap((function(r) {
                            for (; ; )
                                switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return r.next = 4,
                                    (0,
                                    m.resolveProperties)({
                                        address: this._getAddress(e),
                                        blockTag: this._getBlockTag(t)
                                    });
                                case 4:
                                    return n = r.sent,
                                    r.next = 7,
                                    this.perform("getTransactionCount", n);
                                case 7:
                                    return s = r.sent,
                                    r.prev = 8,
                                    r.abrupt("return", h.O$.from(s).toNumber());
                                case 12:
                                    return r.prev = 12,
                                    r.t0 = r.catch(8),
                                    r.abrupt("return", I.throwError("bad result from backend", E.Logger.errors.SERVER_ERROR, {
                                        method: "getTransactionCount",
                                        params: n,
                                        result: s,
                                        error: r.t0
                                    }));
                                case 15:
                                case "end":
                                    return r.stop()
                                }
                        }
                        ), r, this, [[8, 12]])
                    }
                    )))
                }
            }, {
                key: "getCode",
                value: function(e, t) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function r() {
                        var n, s;
                        return (0,
                        a.Z)().wrap((function(r) {
                            for (; ; )
                                switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return r.next = 4,
                                    (0,
                                    m.resolveProperties)({
                                        address: this._getAddress(e),
                                        blockTag: this._getBlockTag(t)
                                    });
                                case 4:
                                    return n = r.sent,
                                    r.next = 7,
                                    this.perform("getCode", n);
                                case 7:
                                    return s = r.sent,
                                    r.prev = 8,
                                    r.abrupt("return", (0,
                                    f.hexlify)(s));
                                case 12:
                                    return r.prev = 12,
                                    r.t0 = r.catch(8),
                                    r.abrupt("return", I.throwError("bad result from backend", E.Logger.errors.SERVER_ERROR, {
                                        method: "getCode",
                                        params: n,
                                        result: s,
                                        error: r.t0
                                    }));
                                case 15:
                                case "end":
                                    return r.stop()
                                }
                        }
                        ), r, this, [[8, 12]])
                    }
                    )))
                }
            }, {
                key: "getStorageAt",
                value: function(e, t, r) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function n() {
                        var s, i;
                        return (0,
                        a.Z)().wrap((function(n) {
                            for (; ; )
                                switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return n.next = 4,
                                    (0,
                                    m.resolveProperties)({
                                        address: this._getAddress(e),
                                        blockTag: this._getBlockTag(r),
                                        position: Promise.resolve(t).then((function(e) {
                                            return (0,
                                            f.hexValue)(e)
                                        }
                                        ))
                                    });
                                case 4:
                                    return s = n.sent,
                                    n.next = 7,
                                    this.perform("getStorageAt", s);
                                case 7:
                                    return i = n.sent,
                                    n.prev = 8,
                                    n.abrupt("return", (0,
                                    f.hexlify)(i));
                                case 12:
                                    return n.prev = 12,
                                    n.t0 = n.catch(8),
                                    n.abrupt("return", I.throwError("bad result from backend", E.Logger.errors.SERVER_ERROR, {
                                        method: "getStorageAt",
                                        params: s,
                                        result: i,
                                        error: n.t0
                                    }));
                                case 15:
                                case "end":
                                    return n.stop()
                                }
                        }
                        ), n, this, [[8, 12]])
                    }
                    )))
                }
            }, {
                key: "_wrapTransaction",
                value: function(e, t, r) {
                    var n = this;
                    if (null != t && 32 !== (0,
                    f.hexDataLength)(t))
                        throw new Error("invalid response - sendTransaction");
                    var s = e;
                    return null != t && e.hash !== t && I.throwError("Transaction hash mismatch from Provider.sendTransaction.", E.Logger.errors.UNKNOWN_ERROR, {
                        expectedHash: e.hash,
                        returnedHash: t
                    }),
                    s.wait = function(t, s) {
                        return P(n, void 0, void 0, (0,
                        a.Z)().mark((function n() {
                            var i, o;
                            return (0,
                            a.Z)().wrap((function(n) {
                                for (; ; )
                                    switch (n.prev = n.next) {
                                    case 0:
                                        return null == t && (t = 1),
                                        null == s && (s = 0),
                                        i = void 0,
                                        0 !== t && null != r && (i = {
                                            data: e.data,
                                            from: e.from,
                                            nonce: e.nonce,
                                            to: e.to,
                                            value: e.value,
                                            startBlock: r
                                        }),
                                        n.next = 6,
                                        this._waitForTransaction(e.hash, t, s, i);
                                    case 6:
                                        if (null != (o = n.sent) || 0 !== t) {
                                            n.next = 9;
                                            break
                                        }
                                        return n.abrupt("return", null);
                                    case 9:
                                        return this._emitted["t:" + e.hash] = o.blockNumber,
                                        0 === o.status && I.throwError("transaction failed", E.Logger.errors.CALL_EXCEPTION, {
                                            transactionHash: e.hash,
                                            transaction: e,
                                            receipt: o
                                        }),
                                        n.abrupt("return", o);
                                    case 12:
                                    case "end":
                                        return n.stop()
                                    }
                            }
                            ), n, this)
                        }
                        )))
                    }
                    ,
                    s
                }
            }, {
                key: "sendTransaction",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r, n, s, i;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return t.next = 4,
                                    Promise.resolve(e).then((function(e) {
                                        return (0,
                                        f.hexlify)(e)
                                    }
                                    ));
                                case 4:
                                    return r = t.sent,
                                    null == (n = this.formatter.transaction(e)).confirmations && (n.confirmations = 0),
                                    t.next = 9,
                                    this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                case 9:
                                    return s = t.sent,
                                    t.prev = 10,
                                    t.next = 13,
                                    this.perform("sendTransaction", {
                                        signedTransaction: r
                                    });
                                case 13:
                                    return i = t.sent,
                                    t.abrupt("return", this._wrapTransaction(n, i, s));
                                case 17:
                                    throw t.prev = 17,
                                    t.t0 = t.catch(10),
                                    t.t0.transaction = n,
                                    t.t0.transactionHash = n.hash,
                                    t.t0;
                                case 22:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this, [[10, 17]])
                    }
                    )))
                }
            }, {
                key: "_getTransactionRequest",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r, n, s = this;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    e;
                                case 2:
                                    return r = t.sent,
                                    n = {},
                                    ["from", "to"].forEach((function(e) {
                                        null != r[e] && (n[e] = Promise.resolve(r[e]).then((function(e) {
                                            return e ? s._getAddress(e) : null
                                        }
                                        )))
                                    }
                                    )),
                                    ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach((function(e) {
                                        null != r[e] && (n[e] = Promise.resolve(r[e]).then((function(e) {
                                            return e ? h.O$.from(e) : null
                                        }
                                        )))
                                    }
                                    )),
                                    ["type"].forEach((function(e) {
                                        null != r[e] && (n[e] = Promise.resolve(r[e]).then((function(e) {
                                            return null != e ? e : null
                                        }
                                        )))
                                    }
                                    )),
                                    r.accessList && (n.accessList = this.formatter.accessList(r.accessList)),
                                    ["data"].forEach((function(e) {
                                        null != r[e] && (n[e] = Promise.resolve(r[e]).then((function(e) {
                                            return e ? (0,
                                            f.hexlify)(e) : null
                                        }
                                        )))
                                    }
                                    )),
                                    t.t0 = this.formatter,
                                    t.next = 12,
                                    (0,
                                    m.resolveProperties)(n);
                                case 12:
                                    return t.t1 = t.sent,
                                    t.abrupt("return", t.t0.transactionRequest.call(t.t0, t.t1));
                                case 14:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this)
                    }
                    )))
                }
            }, {
                key: "_getFilter",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r, n = this;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    e;
                                case 2:
                                    return e = t.sent,
                                    r = {},
                                    null != e.address && (r.address = this._getAddress(e.address)),
                                    ["blockHash", "topics"].forEach((function(t) {
                                        null != e[t] && (r[t] = e[t])
                                    }
                                    )),
                                    ["fromBlock", "toBlock"].forEach((function(t) {
                                        null != e[t] && (r[t] = n._getBlockTag(e[t]))
                                    }
                                    )),
                                    t.t0 = this.formatter,
                                    t.next = 10,
                                    (0,
                                    m.resolveProperties)(r);
                                case 10:
                                    return t.t1 = t.sent,
                                    t.abrupt("return", t.t0.filter.call(t.t0, t.t1));
                                case 12:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this)
                    }
                    )))
                }
            }, {
                key: "_call",
                value: function(e, t, r) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function n() {
                        var s, i, o, c, u, l, p, d, v, g, m, y, b, k, w;
                        return (0,
                        a.Z)().wrap((function(n) {
                            for (; ; )
                                switch (n.prev = n.next) {
                                case 0:
                                    return r >= 10 && I.throwError("CCIP read exceeded maximum redirections", E.Logger.errors.SERVER_ERROR, {
                                        redirects: r,
                                        transaction: e
                                    }),
                                    s = e.to,
                                    n.next = 4,
                                    this.perform("call", {
                                        transaction: e,
                                        blockTag: t
                                    });
                                case 4:
                                    if (i = n.sent,
                                    !(r >= 0 && "latest" === t && null != s && "0x556f1830" === i.substring(0, 10) && (0,
                                    f.hexDataLength)(i) % 32 === 4)) {
                                        n.next = 31;
                                        break
                                    }
                                    for (n.prev = 6,
                                    o = (0,
                                    f.hexDataSlice)(i, 4),
                                    c = (0,
                                    f.hexDataSlice)(o, 0, 32),
                                    h.O$.from(c).eq(s) || I.throwError("CCIP Read sender did not match", E.Logger.errors.CALL_EXCEPTION, {
                                        name: "OffchainLookup",
                                        signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                        transaction: e,
                                        data: i
                                    }),
                                    u = [],
                                    l = h.O$.from((0,
                                    f.hexDataSlice)(o, 32, 64)).toNumber(),
                                    p = h.O$.from((0,
                                    f.hexDataSlice)(o, l, l + 32)).toNumber(),
                                    d = (0,
                                    f.hexDataSlice)(o, l + 32),
                                    v = 0; v < p; v++)
                                        null == (g = j(d, 32 * v)) && I.throwError("CCIP Read contained corrupt URL string", E.Logger.errors.CALL_EXCEPTION, {
                                            name: "OffchainLookup",
                                            signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                            transaction: e,
                                            data: i
                                        }),
                                        u.push(g);
                                    return m = M(o, 64),
                                    h.O$.from((0,
                                    f.hexDataSlice)(o, 100, 128)).isZero() || I.throwError("CCIP Read callback selector included junk", E.Logger.errors.CALL_EXCEPTION, {
                                        name: "OffchainLookup",
                                        signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                        transaction: e,
                                        data: i
                                    }),
                                    y = (0,
                                    f.hexDataSlice)(o, 96, 100),
                                    b = M(o, 128),
                                    n.next = 21,
                                    this.ccipReadFetch(e, m, u);
                                case 21:
                                    return null == (k = n.sent) && I.throwError("CCIP Read disabled or provided no URLs", E.Logger.errors.CALL_EXCEPTION, {
                                        name: "OffchainLookup",
                                        signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                        transaction: e,
                                        data: i
                                    }),
                                    w = {
                                        to: s,
                                        data: (0,
                                        f.hexConcat)([y, F([k, b])])
                                    },
                                    n.abrupt("return", this._call(w, t, r + 1));
                                case 27:
                                    if (n.prev = 27,
                                    n.t0 = n.catch(6),
                                    n.t0.code !== E.Logger.errors.SERVER_ERROR) {
                                        n.next = 31;
                                        break
                                    }
                                    throw n.t0;
                                case 31:
                                    return n.prev = 31,
                                    n.abrupt("return", (0,
                                    f.hexlify)(i));
                                case 35:
                                    return n.prev = 35,
                                    n.t1 = n.catch(31),
                                    n.abrupt("return", I.throwError("bad result from backend", E.Logger.errors.SERVER_ERROR, {
                                        method: "call",
                                        params: {
                                            transaction: e,
                                            blockTag: t
                                        },
                                        result: i,
                                        error: n.t1
                                    }));
                                case 38:
                                case "end":
                                    return n.stop()
                                }
                        }
                        ), n, this, [[6, 27], [31, 35]])
                    }
                    )))
                }
            }, {
                key: "call",
                value: function(e, t) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function r() {
                        var n;
                        return (0,
                        a.Z)().wrap((function(r) {
                            for (; ; )
                                switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return r.next = 4,
                                    (0,
                                    m.resolveProperties)({
                                        transaction: this._getTransactionRequest(e),
                                        blockTag: this._getBlockTag(t),
                                        ccipReadEnabled: Promise.resolve(e.ccipReadEnabled)
                                    });
                                case 4:
                                    return n = r.sent,
                                    r.abrupt("return", this._call(n.transaction, n.blockTag, n.ccipReadEnabled ? 0 : -1));
                                case 6:
                                case "end":
                                    return r.stop()
                                }
                        }
                        ), r, this)
                    }
                    )))
                }
            }, {
                key: "estimateGas",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r, n;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return t.next = 4,
                                    (0,
                                    m.resolveProperties)({
                                        transaction: this._getTransactionRequest(e)
                                    });
                                case 4:
                                    return r = t.sent,
                                    t.next = 7,
                                    this.perform("estimateGas", r);
                                case 7:
                                    return n = t.sent,
                                    t.prev = 8,
                                    t.abrupt("return", h.O$.from(n));
                                case 12:
                                    return t.prev = 12,
                                    t.t0 = t.catch(8),
                                    t.abrupt("return", I.throwError("bad result from backend", E.Logger.errors.SERVER_ERROR, {
                                        method: "estimateGas",
                                        params: r,
                                        result: n,
                                        error: t.t0
                                    }));
                                case 15:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this, [[8, 12]])
                    }
                    )))
                }
            }, {
                key: "_getAddress",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    e;
                                case 2:
                                    return "string" !== typeof (e = t.sent) && I.throwArgumentError("invalid address or ENS name", "name", e),
                                    t.next = 6,
                                    this.resolveName(e);
                                case 6:
                                    return null == (r = t.sent) && I.throwError("ENS name not configured", E.Logger.errors.UNSUPPORTED_OPERATION, {
                                        operation: "resolveName(".concat(JSON.stringify(e), ")")
                                    }),
                                    t.abrupt("return", r);
                                case 9:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this)
                    }
                    )))
                }
            }, {
                key: "_getBlock",
                value: function(e, t) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function r() {
                        var n, s, i = this;
                        return (0,
                        a.Z)().wrap((function(r) {
                            for (; ; )
                                switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return r.next = 4,
                                    e;
                                case 4:
                                    if (e = r.sent,
                                    n = -128,
                                    s = {
                                        includeTransactions: !!t
                                    },
                                    !(0,
                                    f.isHexString)(e, 32)) {
                                        r.next = 11;
                                        break
                                    }
                                    s.blockHash = e,
                                    r.next = 21;
                                    break;
                                case 11:
                                    return r.prev = 11,
                                    r.next = 14,
                                    this._getBlockTag(e);
                                case 14:
                                    s.blockTag = r.sent,
                                    (0,
                                    f.isHexString)(s.blockTag) && (n = parseInt(s.blockTag.substring(2), 16)),
                                    r.next = 21;
                                    break;
                                case 18:
                                    r.prev = 18,
                                    r.t0 = r.catch(11),
                                    I.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", e);
                                case 21:
                                    return r.abrupt("return", (0,
                                    k.poll)((function() {
                                        return P(i, void 0, void 0, (0,
                                        a.Z)().mark((function e() {
                                            var r, i, o, c, u, l, p = this;
                                            return (0,
                                            a.Z)().wrap((function(e) {
                                                for (; ; )
                                                    switch (e.prev = e.next) {
                                                    case 0:
                                                        return e.next = 2,
                                                        this.perform("getBlock", s);
                                                    case 2:
                                                        if (null != (r = e.sent)) {
                                                            e.next = 11;
                                                            break
                                                        }
                                                        if (null == s.blockHash) {
                                                            e.next = 7;
                                                            break
                                                        }
                                                        if (null != this._emitted["b:" + s.blockHash]) {
                                                            e.next = 7;
                                                            break
                                                        }
                                                        return e.abrupt("return", null);
                                                    case 7:
                                                        if (null == s.blockTag) {
                                                            e.next = 10;
                                                            break
                                                        }
                                                        if (!(n > this._emitted.block)) {
                                                            e.next = 10;
                                                            break
                                                        }
                                                        return e.abrupt("return", null);
                                                    case 10:
                                                        return e.abrupt("return", void 0);
                                                    case 11:
                                                        if (!t) {
                                                            e.next = 34;
                                                            break
                                                        }
                                                        i = null,
                                                        o = 0;
                                                    case 14:
                                                        if (!(o < r.transactions.length)) {
                                                            e.next = 31;
                                                            break
                                                        }
                                                        if (null != (c = r.transactions[o]).blockNumber) {
                                                            e.next = 20;
                                                            break
                                                        }
                                                        c.confirmations = 0,
                                                        e.next = 28;
                                                        break;
                                                    case 20:
                                                        if (null != c.confirmations) {
                                                            e.next = 28;
                                                            break
                                                        }
                                                        if (null != i) {
                                                            e.next = 25;
                                                            break
                                                        }
                                                        return e.next = 24,
                                                        this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                                    case 24:
                                                        i = e.sent;
                                                    case 25:
                                                        (u = i - c.blockNumber + 1) <= 0 && (u = 1),
                                                        c.confirmations = u;
                                                    case 28:
                                                        o++,
                                                        e.next = 14;
                                                        break;
                                                    case 31:
                                                        return (l = this.formatter.blockWithTransactions(r)).transactions = l.transactions.map((function(e) {
                                                            return p._wrapTransaction(e)
                                                        }
                                                        )),
                                                        e.abrupt("return", l);
                                                    case 34:
                                                        return e.abrupt("return", this.formatter.block(r));
                                                    case 35:
                                                    case "end":
                                                        return e.stop()
                                                    }
                                            }
                                            ), e, this)
                                        }
                                        )))
                                    }
                                    ), {
                                        oncePoll: this
                                    }));
                                case 22:
                                case "end":
                                    return r.stop()
                                }
                        }
                        ), r, this, [[11, 18]])
                    }
                    )))
                }
            }, {
                key: "getBlock",
                value: function(e) {
                    return this._getBlock(e, !1)
                }
            }, {
                key: "getBlockWithTransactions",
                value: function(e) {
                    return this._getBlock(e, !0)
                }
            }, {
                key: "getTransaction",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r, n = this;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return t.next = 4,
                                    e;
                                case 4:
                                    return e = t.sent,
                                    r = {
                                        transactionHash: this.formatter.hash(e, !0)
                                    },
                                    t.abrupt("return", (0,
                                    k.poll)((function() {
                                        return P(n, void 0, void 0, (0,
                                        a.Z)().mark((function t() {
                                            var n, s, i, o;
                                            return (0,
                                            a.Z)().wrap((function(t) {
                                                for (; ; )
                                                    switch (t.prev = t.next) {
                                                    case 0:
                                                        return t.next = 2,
                                                        this.perform("getTransaction", r);
                                                    case 2:
                                                        if (null != (n = t.sent)) {
                                                            t.next = 7;
                                                            break
                                                        }
                                                        if (null != this._emitted["t:" + e]) {
                                                            t.next = 6;
                                                            break
                                                        }
                                                        return t.abrupt("return", null);
                                                    case 6:
                                                        return t.abrupt("return", void 0);
                                                    case 7:
                                                        if (null != (s = this.formatter.transactionResponse(n)).blockNumber) {
                                                            t.next = 12;
                                                            break
                                                        }
                                                        s.confirmations = 0,
                                                        t.next = 19;
                                                        break;
                                                    case 12:
                                                        if (null != s.confirmations) {
                                                            t.next = 19;
                                                            break
                                                        }
                                                        return t.next = 15,
                                                        this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                                    case 15:
                                                        i = t.sent,
                                                        (o = i - s.blockNumber + 1) <= 0 && (o = 1),
                                                        s.confirmations = o;
                                                    case 19:
                                                        return t.abrupt("return", this._wrapTransaction(s));
                                                    case 20:
                                                    case "end":
                                                        return t.stop()
                                                    }
                                            }
                                            ), t, this)
                                        }
                                        )))
                                    }
                                    ), {
                                        oncePoll: this
                                    }));
                                case 7:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this)
                    }
                    )))
                }
            }, {
                key: "getTransactionReceipt",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r, n = this;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return t.next = 4,
                                    e;
                                case 4:
                                    return e = t.sent,
                                    r = {
                                        transactionHash: this.formatter.hash(e, !0)
                                    },
                                    t.abrupt("return", (0,
                                    k.poll)((function() {
                                        return P(n, void 0, void 0, (0,
                                        a.Z)().mark((function t() {
                                            var n, s, i, o;
                                            return (0,
                                            a.Z)().wrap((function(t) {
                                                for (; ; )
                                                    switch (t.prev = t.next) {
                                                    case 0:
                                                        return t.next = 2,
                                                        this.perform("getTransactionReceipt", r);
                                                    case 2:
                                                        if (null != (n = t.sent)) {
                                                            t.next = 7;
                                                            break
                                                        }
                                                        if (null != this._emitted["t:" + e]) {
                                                            t.next = 6;
                                                            break
                                                        }
                                                        return t.abrupt("return", null);
                                                    case 6:
                                                        return t.abrupt("return", void 0);
                                                    case 7:
                                                        if (null != n.blockHash) {
                                                            t.next = 9;
                                                            break
                                                        }
                                                        return t.abrupt("return", void 0);
                                                    case 9:
                                                        if (null != (s = this.formatter.receipt(n)).blockNumber) {
                                                            t.next = 14;
                                                            break
                                                        }
                                                        s.confirmations = 0,
                                                        t.next = 21;
                                                        break;
                                                    case 14:
                                                        if (null != s.confirmations) {
                                                            t.next = 21;
                                                            break
                                                        }
                                                        return t.next = 17,
                                                        this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                                    case 17:
                                                        i = t.sent,
                                                        (o = i - s.blockNumber + 1) <= 0 && (o = 1),
                                                        s.confirmations = o;
                                                    case 21:
                                                        return t.abrupt("return", s);
                                                    case 22:
                                                    case "end":
                                                        return t.stop()
                                                    }
                                            }
                                            ), t, this)
                                        }
                                        )))
                                    }
                                    ), {
                                        oncePoll: this
                                    }));
                                case 7:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this)
                    }
                    )))
                }
            }, {
                key: "getLogs",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r, n;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return t.next = 4,
                                    (0,
                                    m.resolveProperties)({
                                        filter: this._getFilter(e)
                                    });
                                case 4:
                                    return r = t.sent,
                                    t.next = 7,
                                    this.perform("getLogs", r);
                                case 7:
                                    return (n = t.sent).forEach((function(e) {
                                        null == e.removed && (e.removed = !1)
                                    }
                                    )),
                                    t.abrupt("return", _.Mb.arrayOf(this.formatter.filterLog.bind(this.formatter))(n));
                                case 10:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this)
                    }
                    )))
                }
            }, {
                key: "getEtherPrice",
                value: function() {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function e() {
                        return (0,
                        a.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return e.abrupt("return", this.perform("getEtherPrice", {}));
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )))
                }
            }, {
                key: "_getBlockTag",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    e;
                                case 2:
                                    if (!("number" === typeof (e = t.sent) && e < 0)) {
                                        t.next = 11;
                                        break
                                    }
                                    return e % 1 && I.throwArgumentError("invalid BlockTag", "blockTag", e),
                                    t.next = 7,
                                    this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                case 7:
                                    return r = t.sent,
                                    (r += e) < 0 && (r = 0),
                                    t.abrupt("return", this.formatter.blockTag(r));
                                case 11:
                                    return t.abrupt("return", this.formatter.blockTag(e));
                                case 12:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this)
                    }
                    )))
                }
            }, {
                key: "getResolver",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r, n, s;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    r = e;
                                case 1:
                                    if ("" !== r && "." !== r) {
                                        t.next = 4;
                                        break
                                    }
                                    return t.abrupt("return", null);
                                case 4:
                                    if ("eth" === e || "eth" !== r) {
                                        t.next = 6;
                                        break
                                    }
                                    return t.abrupt("return", null);
                                case 6:
                                    return t.next = 8,
                                    this._getResolver(r, "getResolver");
                                case 8:
                                    if (null == (n = t.sent)) {
                                        t.next = 19;
                                        break
                                    }
                                    if (s = new V(this,n,e),
                                    t.t0 = r !== e,
                                    !t.t0) {
                                        t.next = 16;
                                        break
                                    }
                                    return t.next = 15,
                                    s.supportsWildcard();
                                case 15:
                                    t.t0 = !t.sent;
                                case 16:
                                    if (!t.t0) {
                                        t.next = 18;
                                        break
                                    }
                                    return t.abrupt("return", null);
                                case 18:
                                    return t.abrupt("return", s);
                                case 19:
                                    r = r.split(".").slice(1).join("."),
                                    t.next = 1;
                                    break;
                                case 22:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this)
                    }
                    )))
                }
            }, {
                key: "_getResolver",
                value: function(e, t) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function r() {
                        var n, s;
                        return (0,
                        a.Z)().wrap((function(r) {
                            for (; ; )
                                switch (r.prev = r.next) {
                                case 0:
                                    return null == t && (t = "ENS"),
                                    r.next = 3,
                                    this.getNetwork();
                                case 3:
                                    return (n = r.sent).ensAddress || I.throwError("network does not support ENS", E.Logger.errors.UNSUPPORTED_OPERATION, {
                                        operation: t,
                                        network: n.name
                                    }),
                                    r.prev = 5,
                                    r.next = 8,
                                    this.call({
                                        to: n.ensAddress,
                                        data: "0x0178b8bf" + (0,
                                        v.VM)(e).substring(2)
                                    });
                                case 8:
                                    return s = r.sent,
                                    r.abrupt("return", this.formatter.callAddress(s));
                                case 12:
                                    r.prev = 12,
                                    r.t0 = r.catch(5);
                                case 14:
                                    return r.abrupt("return", null);
                                case 15:
                                case "end":
                                    return r.stop()
                                }
                        }
                        ), r, this, [[5, 12]])
                    }
                    )))
                }
            }, {
                key: "resolveName",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    e;
                                case 2:
                                    return e = t.sent,
                                    t.prev = 3,
                                    t.abrupt("return", Promise.resolve(this.formatter.address(e)));
                                case 7:
                                    if (t.prev = 7,
                                    t.t0 = t.catch(3),
                                    !(0,
                                    f.isHexString)(e)) {
                                        t.next = 11;
                                        break
                                    }
                                    throw t.t0;
                                case 11:
                                    return "string" !== typeof e && I.throwArgumentError("invalid ENS name", "name", e),
                                    t.next = 14,
                                    this.getResolver(e);
                                case 14:
                                    if (r = t.sent) {
                                        t.next = 17;
                                        break
                                    }
                                    return t.abrupt("return", null);
                                case 17:
                                    return t.next = 19,
                                    r.getAddress();
                                case 19:
                                    return t.abrupt("return", t.sent);
                                case 20:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this, [[3, 7]])
                    }
                    )))
                }
            }, {
                key: "lookupAddress",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r, n, s;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    e;
                                case 2:
                                    return e = t.sent,
                                    e = this.formatter.address(e),
                                    r = e.substring(2).toLowerCase() + ".addr.reverse",
                                    t.next = 7,
                                    this._getResolver(r, "lookupAddress");
                                case 7:
                                    if (null != (n = t.sent)) {
                                        t.next = 10;
                                        break
                                    }
                                    return t.abrupt("return", null);
                                case 10:
                                    return t.t0 = j,
                                    t.next = 13,
                                    this.call({
                                        to: n,
                                        data: "0x691f3431" + (0,
                                        v.VM)(r).substring(2)
                                    });
                                case 13:
                                    return t.t1 = t.sent,
                                    s = (0,
                                    t.t0)(t.t1, 0),
                                    t.next = 17,
                                    this.resolveName(s);
                                case 17:
                                    if (t.sent == e) {
                                        t.next = 20;
                                        break
                                    }
                                    return t.abrupt("return", null);
                                case 20:
                                    return t.abrupt("return", s);
                                case 21:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this)
                    }
                    )))
                }
            }, {
                key: "getAvatar",
                value: function(e) {
                    return P(this, void 0, void 0, (0,
                    a.Z)().mark((function t() {
                        var r, n, s, i, o, c, u;
                        return (0,
                        a.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    if (r = null,
                                    !(0,
                                    f.isHexString)(e)) {
                                        t.next = 40;
                                        break
                                    }
                                    return n = this.formatter.address(e),
                                    s = n.substring(2).toLowerCase() + ".addr.reverse",
                                    t.next = 6,
                                    this._getResolver(s, "getAvatar");
                                case 6:
                                    if (i = t.sent) {
                                        t.next = 9;
                                        break
                                    }
                                    return t.abrupt("return", null);
                                case 9:
                                    return r = new V(this,i,s),
                                    t.prev = 10,
                                    t.next = 13,
                                    r.getAvatar();
                                case 13:
                                    if (!(o = t.sent)) {
                                        t.next = 16;
                                        break
                                    }
                                    return t.abrupt("return", o.url);
                                case 16:
                                    t.next = 22;
                                    break;
                                case 18:
                                    if (t.prev = 18,
                                    t.t0 = t.catch(10),
                                    t.t0.code === E.Logger.errors.CALL_EXCEPTION) {
                                        t.next = 22;
                                        break
                                    }
                                    throw t.t0;
                                case 22:
                                    return t.prev = 22,
                                    t.t1 = j,
                                    t.next = 26,
                                    this.call({
                                        to: i,
                                        data: "0x691f3431" + (0,
                                        v.VM)(s).substring(2)
                                    });
                                case 26:
                                    return t.t2 = t.sent,
                                    c = (0,
                                    t.t1)(t.t2, 0),
                                    t.next = 30,
                                    this.getResolver(c);
                                case 30:
                                    r = t.sent,
                                    t.next = 38;
                                    break;
                                case 33:
                                    if (t.prev = 33,
                                    t.t3 = t.catch(22),
                                    t.t3.code === E.Logger.errors.CALL_EXCEPTION) {
                                        t.next = 37;
                                        break
                                    }
                                    throw t.t3;
                                case 37:
                                    return t.abrupt("return", null);
                                case 38:
                                    t.next = 45;
                                    break;
                                case 40:
                                    return t.next = 42,
                                    this.getResolver(e);
                                case 42:
                                    if (r = t.sent) {
                                        t.next = 45;
                                        break
                                    }
                                    return t.abrupt("return", null);
                                case 45:
                                    return t.next = 47,
                                    r.getAvatar();
                                case 47:
                                    if (null != (u = t.sent)) {
                                        t.next = 50;
                                        break
                                    }
                                    return t.abrupt("return", null);
                                case 50:
                                    return t.abrupt("return", u.url);
                                case 51:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this, [[10, 18], [22, 33]])
                    }
                    )))
                }
            }, {
                key: "perform",
                value: function(e, t) {
                    return I.throwError(e + " not implemented", E.Logger.errors.NOT_IMPLEMENTED, {
                        operation: e
                    })
                }
            }, {
                key: "_startEvent",
                value: function(e) {
                    this.polling = this._events.filter((function(e) {
                        return e.pollable()
                    }
                    )).length > 0
                }
            }, {
                key: "_stopEvent",
                value: function(e) {
                    this.polling = this._events.filter((function(e) {
                        return e.pollable()
                    }
                    )).length > 0
                }
            }, {
                key: "_addEventListener",
                value: function(e, t, r) {
                    var n = new L(S(e),t,r);
                    return this._events.push(n),
                    this._startEvent(n),
                    this
                }
            }, {
                key: "on",
                value: function(e, t) {
                    return this._addEventListener(e, t, !1)
                }
            }, {
                key: "once",
                value: function(e, t) {
                    return this._addEventListener(e, t, !0)
                }
            }, {
                key: "emit",
                value: function(e) {
                    for (var t = this, r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), s = 1; s < r; s++)
                        n[s - 1] = arguments[s];
                    var i = !1
                      , a = []
                      , o = S(e);
                    return this._events = this._events.filter((function(e) {
                        return e.tag !== o || (setTimeout((function() {
                            e.listener.apply(t, n)
                        }
                        ), 0),
                        i = !0,
                        !e.once || (a.push(e),
                        !1))
                    }
                    )),
                    a.forEach((function(e) {
                        t._stopEvent(e)
                    }
                    )),
                    i
                }
            }, {
                key: "listenerCount",
                value: function(e) {
                    if (!e)
                        return this._events.length;
                    var t = S(e);
                    return this._events.filter((function(e) {
                        return e.tag === t
                    }
                    )).length
                }
            }, {
                key: "listeners",
                value: function(e) {
                    if (null == e)
                        return this._events.map((function(e) {
                            return e.listener
                        }
                        ));
                    var t = S(e);
                    return this._events.filter((function(e) {
                        return e.tag === t
                    }
                    )).map((function(e) {
                        return e.listener
                    }
                    ))
                }
            }, {
                key: "off",
                value: function(e, t) {
                    var r = this;
                    if (null == t)
                        return this.removeAllListeners(e);
                    var n = []
                      , s = !1
                      , i = S(e);
                    return this._events = this._events.filter((function(e) {
                        return e.tag !== i || e.listener != t || (!!s || (s = !0,
                        n.push(e),
                        !1))
                    }
                    )),
                    n.forEach((function(e) {
                        r._stopEvent(e)
                    }
                    )),
                    this
                }
            }, {
                key: "removeAllListeners",
                value: function(e) {
                    var t = this
                      , r = [];
                    if (null == e)
                        r = this._events,
                        this._events = [];
                    else {
                        var n = S(e);
                        this._events = this._events.filter((function(e) {
                            return e.tag !== n || (r.push(e),
                            !1)
                        }
                        ))
                    }
                    return r.forEach((function(e) {
                        t._stopEvent(e)
                    }
                    )),
                    this
                }
            }], [{
                key: "getFormatter",
                value: function() {
                    return null == G && (G = new _.Mb),
                    G
                }
            }, {
                key: "getNetwork",
                value: function(e) {
                    return (0,
                    g.H)(null == e ? "homestead" : e)
                }
            }]),
            r
        }(u.zt)
    },
    18519: function(e, t, r) {
        r.d(t, {
            H: function() {
                return C
            }
        });
        var n = r(15671)
          , s = r(43144)
          , i = r(97326)
          , a = r(60136)
          , o = r(29388)
          , c = r(74165)
          , u = r(15157)
          , l = r(19560)
          , p = r(52009)
          , h = r(54812)
          , f = r(54327)
          , d = r(28786)
          , v = r(5341)
          , g = r(23134)
          , m = r(2735)
          , y = r(49862)
          , b = function(e, t, r, n) {
            return new (r || (r = Promise))((function(s, i) {
                function a(e) {
                    try {
                        c(n.next(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function o(e) {
                    try {
                        c(n.throw(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function c(e) {
                    var t;
                    e.done ? s(e.value) : (t = e.value,
                    t instanceof r ? t : new r((function(e) {
                        e(t)
                    }
                    ))).then(a, o)
                }
                c((n = n.apply(e, t || [])).next())
            }
            ))
        }
          , k = new m.Logger(y.i);
        function w() {
            return (new Date).getTime()
        }
        function x(e) {
            for (var t = null, r = 0; r < e.length; r++) {
                var n = e[r];
                if (null == n)
                    return null;
                t ? t.name === n.name && t.chainId === n.chainId && (t.ensAddress === n.ensAddress || null == t.ensAddress && null == n.ensAddress) || k.throwArgumentError("provider mismatch", "networks", e) : t = n
            }
            return t
        }
        function E(e, t) {
            e = e.slice().sort();
            var r = Math.floor(e.length / 2);
            if (e.length % 2)
                return e[r];
            var n = e[r - 1]
              , s = e[r];
            return null != t && Math.abs(n - s) > t ? null : (n + s) / 2
        }
        function Z(e) {
            if (null === e)
                return "null";
            if ("number" === typeof e || "boolean" === typeof e)
                return JSON.stringify(e);
            if ("string" === typeof e)
                return e;
            if (l.O$.isBigNumber(e))
                return e.toString();
            if (Array.isArray(e))
                return JSON.stringify(e.map((function(e) {
                    return Z(e)
                }
                )));
            if ("object" === typeof e) {
                var t = Object.keys(e);
                return t.sort(),
                "{" + t.map((function(t) {
                    var r = e[t];
                    return r = "function" === typeof r ? "[function]" : Z(r),
                    JSON.stringify(t) + ":" + r
                }
                )).join(",") + "}"
            }
            throw new Error("unknown value type: " + typeof e)
        }
        var _ = 1;
        function P(e) {
            var t = null
              , r = null
              , n = new Promise((function(n) {
                t = function() {
                    r && (clearTimeout(r),
                    r = null),
                    n()
                }
                ,
                r = setTimeout(t, e)
            }
            ));
            return {
                cancel: t,
                getPromise: function() {
                    return n
                },
                wait: function(e) {
                    return n = n.then(e)
                }
            }
        }
        var I = [m.Logger.errors.CALL_EXCEPTION, m.Logger.errors.INSUFFICIENT_FUNDS, m.Logger.errors.NONCE_EXPIRED, m.Logger.errors.REPLACEMENT_UNDERPRICED, m.Logger.errors.UNPREDICTABLE_GAS_LIMIT]
          , N = ["address", "args", "errorArgs", "errorSignature", "method", "transaction"];
        function R(e, t) {
            var r = {
                weight: e.weight
            };
            return Object.defineProperty(r, "provider", {
                get: function() {
                    return e.provider
                }
            }),
            e.start && (r.start = e.start),
            t && (r.duration = t - e.start),
            e.done && (e.error ? r.error = e.error : r.result = e.result || null),
            r
        }
        function S(e, t, r) {
            var n = Z;
            switch (t) {
            case "getBlockNumber":
                return function(t) {
                    var r = t.map((function(e) {
                        return e.result
                    }
                    ))
                      , n = E(t.map((function(e) {
                        return e.result
                    }
                    )), 2);
                    if (null != n)
                        return n = Math.ceil(n),
                        r.indexOf(n + 1) >= 0 && n++,
                        n >= e._highestBlockNumber && (e._highestBlockNumber = n),
                        e._highestBlockNumber
                }
                ;
            case "getGasPrice":
                return function(e) {
                    var t = e.map((function(e) {
                        return e.result
                    }
                    ));
                    return t.sort(),
                    t[Math.floor(t.length / 2)]
                }
                ;
            case "getEtherPrice":
                return function(e) {
                    return E(e.map((function(e) {
                        return e.result
                    }
                    )))
                }
                ;
            case "getBalance":
            case "getTransactionCount":
            case "getCode":
            case "getStorageAt":
            case "call":
            case "estimateGas":
            case "getLogs":
                break;
            case "getTransaction":
            case "getTransactionReceipt":
                n = function(e) {
                    return null == e ? null : ((e = (0,
                    h.shallowCopy)(e)).confirmations = -1,
                    Z(e))
                }
                ;
                break;
            case "getBlock":
                n = r.includeTransactions ? function(e) {
                    return null == e ? null : ((e = (0,
                    h.shallowCopy)(e)).transactions = e.transactions.map((function(e) {
                        return (e = (0,
                        h.shallowCopy)(e)).confirmations = -1,
                        e
                    }
                    )),
                    Z(e))
                }
                : function(e) {
                    return null == e ? null : Z(e)
                }
                ;
                break;
            default:
                throw new Error("unknown method: " + t)
            }
            return function(e, t) {
                return function(r) {
                    var n = {};
                    r.forEach((function(t) {
                        var r = e(t.result);
                        n[r] || (n[r] = {
                            count: 0,
                            result: t.result
                        }),
                        n[r].count++
                    }
                    ));
                    for (var s = Object.keys(n), i = 0; i < s.length; i++) {
                        var a = n[s[i]];
                        if (a.count >= t)
                            return a.result
                    }
                }
            }(n, e.quorum)
        }
        function T(e, t) {
            return b(this, void 0, void 0, (0,
            c.Z)().mark((function r() {
                var n;
                return (0,
                c.Z)().wrap((function(r) {
                    for (; ; )
                        switch (r.prev = r.next) {
                        case 0:
                            if (!(null != (n = e.provider).blockNumber && n.blockNumber >= t || -1 === t)) {
                                r.next = 3;
                                break
                            }
                            return r.abrupt("return", n);
                        case 3:
                            return r.abrupt("return", (0,
                            d.poll)((function() {
                                return new Promise((function(r, s) {
                                    setTimeout((function() {
                                        return n.blockNumber >= t ? r(n) : e.cancelled ? r(null) : r(void 0)
                                    }
                                    ), 0)
                                }
                                ))
                            }
                            ), {
                                oncePoll: n
                            }));
                        case 4:
                        case "end":
                            return r.stop()
                        }
                }
                ), r)
            }
            )))
        }
        function O(e, t, r, n) {
            return b(this, void 0, void 0, (0,
            c.Z)().mark((function s() {
                var i, a;
                return (0,
                c.Z)().wrap((function(s) {
                    for (; ; )
                        switch (s.prev = s.next) {
                        case 0:
                            i = e.provider,
                            s.t0 = r,
                            s.next = "getBlockNumber" === s.t0 || "getGasPrice" === s.t0 ? 4 : "getEtherPrice" === s.t0 ? 5 : "getBalance" === s.t0 || "getTransactionCount" === s.t0 || "getCode" === s.t0 ? 8 : "getStorageAt" === s.t0 ? 13 : "getBlock" === s.t0 ? 18 : "call" === s.t0 || "estimateGas" === s.t0 ? 23 : "getTransaction" === s.t0 || "getTransactionReceipt" === s.t0 ? 30 : "getLogs" === s.t0 ? 31 : 37;
                            break;
                        case 4:
                            return s.abrupt("return", i[r]());
                        case 5:
                            if (!i.getEtherPrice) {
                                s.next = 7;
                                break
                            }
                            return s.abrupt("return", i.getEtherPrice());
                        case 7:
                            return s.abrupt("break", 37);
                        case 8:
                            if (!n.blockTag || !(0,
                            p.isHexString)(n.blockTag)) {
                                s.next = 12;
                                break
                            }
                            return s.next = 11,
                            T(e, t);
                        case 11:
                            i = s.sent;
                        case 12:
                            return s.abrupt("return", i[r](n.address, n.blockTag || "latest"));
                        case 13:
                            if (!n.blockTag || !(0,
                            p.isHexString)(n.blockTag)) {
                                s.next = 17;
                                break
                            }
                            return s.next = 16,
                            T(e, t);
                        case 16:
                            i = s.sent;
                        case 17:
                            return s.abrupt("return", i.getStorageAt(n.address, n.position, n.blockTag || "latest"));
                        case 18:
                            if (!n.blockTag || !(0,
                            p.isHexString)(n.blockTag)) {
                                s.next = 22;
                                break
                            }
                            return s.next = 21,
                            T(e, t);
                        case 21:
                            i = s.sent;
                        case 22:
                            return s.abrupt("return", i[n.includeTransactions ? "getBlockWithTransactions" : "getBlock"](n.blockTag || n.blockHash));
                        case 23:
                            if (!n.blockTag || !(0,
                            p.isHexString)(n.blockTag)) {
                                s.next = 27;
                                break
                            }
                            return s.next = 26,
                            T(e, t);
                        case 26:
                            i = s.sent;
                        case 27:
                            if ("call" !== r || !n.blockTag) {
                                s.next = 29;
                                break
                            }
                            return s.abrupt("return", i[r](n.transaction, n.blockTag));
                        case 29:
                            return s.abrupt("return", i[r](n.transaction));
                        case 30:
                            return s.abrupt("return", i[r](n.transactionHash));
                        case 31:
                            if (!((a = n.filter).fromBlock && (0,
                            p.isHexString)(a.fromBlock) || a.toBlock && (0,
                            p.isHexString)(a.toBlock))) {
                                s.next = 36;
                                break
                            }
                            return s.next = 35,
                            T(e, t);
                        case 35:
                            i = s.sent;
                        case 36:
                            return s.abrupt("return", i.getLogs(a));
                        case 37:
                            return s.abrupt("return", k.throwError("unknown method error", m.Logger.errors.UNKNOWN_ERROR, {
                                method: r,
                                params: n
                            }));
                        case 38:
                        case "end":
                            return s.stop()
                        }
                }
                ), s)
            }
            )))
        }
        var C = function(e) {
            (0,
            a.Z)(r, e);
            var t = (0,
            o.Z)(r);
            function r(e, s) {
                var a;
                (0,
                n.Z)(this, r),
                0 === e.length && k.throwArgumentError("missing providers", "providers", e);
                var o = e.map((function(e, t) {
                    if (u.zt.isProvider(e)) {
                        var r = (0,
                        g.Gp)(e) ? 2e3 : 750;
                        return Object.freeze({
                            provider: e,
                            weight: 1,
                            stallTimeout: r,
                            priority: 1
                        })
                    }
                    var n = (0,
                    h.shallowCopy)(e);
                    null == n.priority && (n.priority = 1),
                    null == n.stallTimeout && (n.stallTimeout = (0,
                    g.Gp)(e) ? 2e3 : 750),
                    null == n.weight && (n.weight = 1);
                    var s = n.weight;
                    return (s % 1 || s > 512 || s < 1) && k.throwArgumentError("invalid weight; must be integer in [1, 512]", "providers[".concat(t, "].weight"), s),
                    Object.freeze(n)
                }
                ))
                  , c = o.reduce((function(e, t) {
                    return e + t.weight
                }
                ), 0);
                null == s ? s = c / 2 : s > c && k.throwArgumentError("quorum will always fail; larger than total weight", "quorum", s);
                var l = x(o.map((function(e) {
                    return e.provider.network
                }
                )));
                return null == l && (l = new Promise((function(e, t) {
                    setTimeout((function() {
                        a.detectNetwork().then(e, t)
                    }
                    ), 0)
                }
                ))),
                a = t.call(this, l),
                (0,
                h.defineReadOnly)((0,
                i.Z)(a), "providerConfigs", Object.freeze(o)),
                (0,
                h.defineReadOnly)((0,
                i.Z)(a), "quorum", s),
                a._highestBlockNumber = -1,
                a
            }
            return (0,
            s.Z)(r, [{
                key: "detectNetwork",
                value: function() {
                    return b(this, void 0, void 0, (0,
                    c.Z)().mark((function e() {
                        var t;
                        return (0,
                        c.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    Promise.all(this.providerConfigs.map((function(e) {
                                        return e.provider.getNetwork()
                                    }
                                    )));
                                case 2:
                                    return t = e.sent,
                                    e.abrupt("return", x(t));
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )))
                }
            }, {
                key: "perform",
                value: function(e, t) {
                    return b(this, void 0, void 0, (0,
                    c.Z)().mark((function r() {
                        var n, s, i, a, o, u, l, p, d, v, g = this;
                        return (0,
                        c.Z)().wrap((function(r) {
                            for (; ; )
                                switch (r.prev = r.next) {
                                case 0:
                                    if ("sendTransaction" !== e) {
                                        r.next = 13;
                                        break
                                    }
                                    return r.next = 3,
                                    Promise.all(this.providerConfigs.map((function(e) {
                                        return e.provider.sendTransaction(t.signedTransaction).then((function(e) {
                                            return e.hash
                                        }
                                        ), (function(e) {
                                            return e
                                        }
                                        ))
                                    }
                                    )));
                                case 3:
                                    n = r.sent,
                                    s = 0;
                                case 5:
                                    if (!(s < n.length)) {
                                        r.next = 12;
                                        break
                                    }
                                    if ("string" !== typeof (i = n[s])) {
                                        r.next = 9;
                                        break
                                    }
                                    return r.abrupt("return", i);
                                case 9:
                                    s++,
                                    r.next = 5;
                                    break;
                                case 12:
                                    throw n[0];
                                case 13:
                                    if (-1 !== this._highestBlockNumber || "getBlockNumber" === e) {
                                        r.next = 16;
                                        break
                                    }
                                    return r.next = 16,
                                    this.getBlockNumber();
                                case 16:
                                    a = S(this, e, t),
                                    (o = (0,
                                    f.y)(this.providerConfigs.map(h.shallowCopy))).sort((function(e, t) {
                                        return e.priority - t.priority
                                    }
                                    )),
                                    u = this._highestBlockNumber,
                                    l = 0,
                                    p = !0,
                                    d = (0,
                                    c.Z)().mark((function r() {
                                        var n, s, i, f, d, v, m;
                                        return (0,
                                        c.Z)().wrap((function(r) {
                                            for (; ; )
                                                switch (r.prev = r.next) {
                                                case 0:
                                                    n = w(),
                                                    s = o.filter((function(e) {
                                                        return e.runner && n - e.start < e.stallTimeout
                                                    }
                                                    )).reduce((function(e, t) {
                                                        return e + t.weight
                                                    }
                                                    ), 0),
                                                    i = (0,
                                                    c.Z)().mark((function r() {
                                                        var n, i;
                                                        return (0,
                                                        c.Z)().wrap((function(r) {
                                                            for (; ; )
                                                                switch (r.prev = r.next) {
                                                                case 0:
                                                                    n = o[l++],
                                                                    i = _++,
                                                                    n.start = w(),
                                                                    n.staller = P(n.stallTimeout),
                                                                    n.staller.wait((function() {
                                                                        n.staller = null
                                                                    }
                                                                    )),
                                                                    n.runner = O(n, u, e, t).then((function(r) {
                                                                        n.done = !0,
                                                                        n.result = r,
                                                                        g.listenerCount("debug") && g.emit("debug", {
                                                                            action: "request",
                                                                            rid: i,
                                                                            backend: R(n, w()),
                                                                            request: {
                                                                                method: e,
                                                                                params: (0,
                                                                                h.deepCopy)(t)
                                                                            },
                                                                            provider: g
                                                                        })
                                                                    }
                                                                    ), (function(r) {
                                                                        n.done = !0,
                                                                        n.error = r,
                                                                        g.listenerCount("debug") && g.emit("debug", {
                                                                            action: "request",
                                                                            rid: i,
                                                                            backend: R(n, w()),
                                                                            request: {
                                                                                method: e,
                                                                                params: (0,
                                                                                h.deepCopy)(t)
                                                                            },
                                                                            provider: g
                                                                        })
                                                                    }
                                                                    )),
                                                                    g.listenerCount("debug") && g.emit("debug", {
                                                                        action: "request",
                                                                        rid: i,
                                                                        backend: R(n, null),
                                                                        request: {
                                                                            method: e,
                                                                            params: (0,
                                                                            h.deepCopy)(t)
                                                                        },
                                                                        provider: g
                                                                    }),
                                                                    s += n.weight;
                                                                case 8:
                                                                case "end":
                                                                    return r.stop()
                                                                }
                                                        }
                                                        ), r)
                                                    }
                                                    ));
                                                case 3:
                                                    if (!(s < g.quorum && l < o.length)) {
                                                        r.next = 7;
                                                        break
                                                    }
                                                    return r.delegateYield(i(), "t0", 5);
                                                case 5:
                                                    r.next = 3;
                                                    break;
                                                case 7:
                                                    if (f = [],
                                                    o.forEach((function(e) {
                                                        !e.done && e.runner && (f.push(e.runner),
                                                        e.staller && f.push(e.staller.getPromise()))
                                                    }
                                                    )),
                                                    !f.length) {
                                                        r.next = 12;
                                                        break
                                                    }
                                                    return r.next = 12,
                                                    Promise.race(f);
                                                case 12:
                                                    if (!((d = o.filter((function(e) {
                                                        return e.done && null == e.error
                                                    }
                                                    ))).length >= g.quorum)) {
                                                        r.next = 22;
                                                        break
                                                    }
                                                    if (void 0 === (v = a(d))) {
                                                        r.next = 18;
                                                        break
                                                    }
                                                    return o.forEach((function(e) {
                                                        e.staller && e.staller.cancel(),
                                                        e.cancelled = !0
                                                    }
                                                    )),
                                                    r.abrupt("return", {
                                                        v: v
                                                    });
                                                case 18:
                                                    if (p) {
                                                        r.next = 21;
                                                        break
                                                    }
                                                    return r.next = 21,
                                                    P(100).getPromise();
                                                case 21:
                                                    p = !1;
                                                case 22:
                                                    if (m = o.reduce((function(e, t) {
                                                        if (!t.done || null == t.error)
                                                            return e;
                                                        var r = t.error.code;
                                                        return I.indexOf(r) >= 0 && (e[r] || (e[r] = {
                                                            error: t.error,
                                                            weight: 0
                                                        }),
                                                        e[r].weight += t.weight),
                                                        e
                                                    }
                                                    ), {}),
                                                    Object.keys(m).forEach((function(e) {
                                                        var t = m[e];
                                                        if (!(t.weight < g.quorum)) {
                                                            o.forEach((function(e) {
                                                                e.staller && e.staller.cancel(),
                                                                e.cancelled = !0
                                                            }
                                                            ));
                                                            var r = t.error
                                                              , n = {};
                                                            N.forEach((function(e) {
                                                                null != r[e] && (n[e] = r[e])
                                                            }
                                                            )),
                                                            k.throwError(r.reason || r.message, e, n)
                                                        }
                                                    }
                                                    )),
                                                    0 !== o.filter((function(e) {
                                                        return !e.done
                                                    }
                                                    )).length) {
                                                        r.next = 26;
                                                        break
                                                    }
                                                    return r.abrupt("return", "break");
                                                case 26:
                                                case "end":
                                                    return r.stop()
                                                }
                                        }
                                        ), r)
                                    }
                                    ));
                                case 23:
                                    return r.delegateYield(d(), "t0", 25);
                                case 25:
                                    if ("break" !== (v = r.t0)) {
                                        r.next = 28;
                                        break
                                    }
                                    return r.abrupt("break", 32);
                                case 28:
                                    if ("object" !== typeof v) {
                                        r.next = 30;
                                        break
                                    }
                                    return r.abrupt("return", v.v);
                                case 30:
                                    r.next = 23;
                                    break;
                                case 32:
                                    return o.forEach((function(e) {
                                        e.staller && e.staller.cancel(),
                                        e.cancelled = !0
                                    }
                                    )),
                                    r.abrupt("return", k.throwError("failed to meet quorum", m.Logger.errors.SERVER_ERROR, {
                                        method: e,
                                        params: t,
                                        results: o.map((function(e) {
                                            return R(e)
                                        }
                                        )),
                                        provider: this
                                    }));
                                case 34:
                                case "end":
                                    return r.stop()
                                }
                        }
                        ), r, this)
                    }
                    )))
                }
            }]),
            r
        }(v.Zk)
    },
    23134: function(e, t, r) {
        r.d(t, {
            Ed: function() {
                return v
            },
            Gp: function() {
                return g
            },
            Mb: function() {
                return d
            },
            vh: function() {
                return y
            }
        });
        var n = r(15671)
          , s = r(43144)
          , i = r(28552)
          , a = r(19560)
          , o = r(52009)
          , c = r(81895)
          , u = r(54812)
          , l = r(65958)
          , p = r(2735)
          , h = r(49862)
          , f = new p.Logger(h.i)
          , d = function() {
            function e() {
                (0,
                n.Z)(this, e),
                this.formats = this.getDefaultFormats()
            }
            return (0,
            s.Z)(e, [{
                key: "getDefaultFormats",
                value: function() {
                    var t = this
                      , r = {}
                      , n = this.address.bind(this)
                      , s = this.bigNumber.bind(this)
                      , i = this.blockTag.bind(this)
                      , a = this.data.bind(this)
                      , o = this.hash.bind(this)
                      , c = this.hex.bind(this)
                      , l = this.number.bind(this)
                      , p = this.type.bind(this);
                    return r.transaction = {
                        hash: o,
                        type: p,
                        accessList: e.allowNull(this.accessList.bind(this), null),
                        blockHash: e.allowNull(o, null),
                        blockNumber: e.allowNull(l, null),
                        transactionIndex: e.allowNull(l, null),
                        confirmations: e.allowNull(l, null),
                        from: n,
                        gasPrice: e.allowNull(s),
                        maxPriorityFeePerGas: e.allowNull(s),
                        maxFeePerGas: e.allowNull(s),
                        gasLimit: s,
                        to: e.allowNull(n, null),
                        value: s,
                        nonce: l,
                        data: a,
                        r: e.allowNull(this.uint256),
                        s: e.allowNull(this.uint256),
                        v: e.allowNull(l),
                        creates: e.allowNull(n, null),
                        raw: e.allowNull(a)
                    },
                    r.transactionRequest = {
                        from: e.allowNull(n),
                        nonce: e.allowNull(l),
                        gasLimit: e.allowNull(s),
                        gasPrice: e.allowNull(s),
                        maxPriorityFeePerGas: e.allowNull(s),
                        maxFeePerGas: e.allowNull(s),
                        to: e.allowNull(n),
                        value: e.allowNull(s),
                        data: e.allowNull((function(e) {
                            return t.data(e, !0)
                        }
                        )),
                        type: e.allowNull(l),
                        accessList: e.allowNull(this.accessList.bind(this), null)
                    },
                    r.receiptLog = {
                        transactionIndex: l,
                        blockNumber: l,
                        transactionHash: o,
                        address: n,
                        topics: e.arrayOf(o),
                        data: a,
                        logIndex: l,
                        blockHash: o
                    },
                    r.receipt = {
                        to: e.allowNull(this.address, null),
                        from: e.allowNull(this.address, null),
                        contractAddress: e.allowNull(n, null),
                        transactionIndex: l,
                        root: e.allowNull(c),
                        gasUsed: s,
                        logsBloom: e.allowNull(a),
                        blockHash: o,
                        transactionHash: o,
                        logs: e.arrayOf(this.receiptLog.bind(this)),
                        blockNumber: l,
                        confirmations: e.allowNull(l, null),
                        cumulativeGasUsed: s,
                        effectiveGasPrice: e.allowNull(s),
                        status: e.allowNull(l),
                        type: p
                    },
                    r.block = {
                        hash: e.allowNull(o),
                        parentHash: o,
                        number: l,
                        timestamp: l,
                        nonce: e.allowNull(c),
                        difficulty: this.difficulty.bind(this),
                        gasLimit: s,
                        gasUsed: s,
                        miner: e.allowNull(n),
                        extraData: a,
                        transactions: e.allowNull(e.arrayOf(o)),
                        baseFeePerGas: e.allowNull(s)
                    },
                    r.blockWithTransactions = (0,
                    u.shallowCopy)(r.block),
                    r.blockWithTransactions.transactions = e.allowNull(e.arrayOf(this.transactionResponse.bind(this))),
                    r.filter = {
                        fromBlock: e.allowNull(i, void 0),
                        toBlock: e.allowNull(i, void 0),
                        blockHash: e.allowNull(o, void 0),
                        address: e.allowNull(n, void 0),
                        topics: e.allowNull(this.topics.bind(this), void 0)
                    },
                    r.filterLog = {
                        blockNumber: e.allowNull(l),
                        blockHash: e.allowNull(o),
                        transactionIndex: l,
                        removed: e.allowNull(this.boolean.bind(this)),
                        address: n,
                        data: e.allowFalsish(a, "0x"),
                        topics: e.arrayOf(o),
                        transactionHash: o,
                        logIndex: l
                    },
                    r
                }
            }, {
                key: "accessList",
                value: function(e) {
                    return (0,
                    l.accessListify)(e || [])
                }
            }, {
                key: "number",
                value: function(e) {
                    return "0x" === e ? 0 : a.O$.from(e).toNumber()
                }
            }, {
                key: "type",
                value: function(e) {
                    return "0x" === e || null == e ? 0 : a.O$.from(e).toNumber()
                }
            }, {
                key: "bigNumber",
                value: function(e) {
                    return a.O$.from(e)
                }
            }, {
                key: "boolean",
                value: function(e) {
                    if ("boolean" === typeof e)
                        return e;
                    if ("string" === typeof e) {
                        if ("true" === (e = e.toLowerCase()))
                            return !0;
                        if ("false" === e)
                            return !1
                    }
                    throw new Error("invalid boolean - " + e)
                }
            }, {
                key: "hex",
                value: function(e, t) {
                    return "string" === typeof e && (t || "0x" === e.substring(0, 2) || (e = "0x" + e),
                    (0,
                    o.isHexString)(e)) ? e.toLowerCase() : f.throwArgumentError("invalid hash", "value", e)
                }
            }, {
                key: "data",
                value: function(e, t) {
                    var r = this.hex(e, t);
                    if (r.length % 2 !== 0)
                        throw new Error("invalid data; odd-length - " + e);
                    return r
                }
            }, {
                key: "address",
                value: function(e) {
                    return (0,
                    i.getAddress)(e)
                }
            }, {
                key: "callAddress",
                value: function(e) {
                    if (!(0,
                    o.isHexString)(e, 32))
                        return null;
                    var t = (0,
                    i.getAddress)((0,
                    o.hexDataSlice)(e, 12));
                    return t === c.d ? null : t
                }
            }, {
                key: "contractAddress",
                value: function(e) {
                    return (0,
                    i.getContractAddress)(e)
                }
            }, {
                key: "blockTag",
                value: function(e) {
                    if (null == e)
                        return "latest";
                    if ("earliest" === e)
                        return "0x0";
                    switch (e) {
                    case "earliest":
                        return "0x0";
                    case "latest":
                    case "pending":
                    case "safe":
                    case "finalized":
                        return e
                    }
                    if ("number" === typeof e || (0,
                    o.isHexString)(e))
                        return (0,
                        o.hexValue)(e);
                    throw new Error("invalid blockTag")
                }
            }, {
                key: "hash",
                value: function(e, t) {
                    var r = this.hex(e, t);
                    return 32 !== (0,
                    o.hexDataLength)(r) ? f.throwArgumentError("invalid hash", "value", e) : r
                }
            }, {
                key: "difficulty",
                value: function(e) {
                    if (null == e)
                        return null;
                    var t = a.O$.from(e);
                    try {
                        return t.toNumber()
                    } catch (r) {}
                    return null
                }
            }, {
                key: "uint256",
                value: function(e) {
                    if (!(0,
                    o.isHexString)(e))
                        throw new Error("invalid uint256");
                    return (0,
                    o.hexZeroPad)(e, 32)
                }
            }, {
                key: "_block",
                value: function(t, r) {
                    null != t.author && null == t.miner && (t.miner = t.author);
                    var n = null != t._difficulty ? t._difficulty : t.difficulty
                      , s = e.check(r, t);
                    return s._difficulty = null == n ? null : a.O$.from(n),
                    s
                }
            }, {
                key: "block",
                value: function(e) {
                    return this._block(e, this.formats.block)
                }
            }, {
                key: "blockWithTransactions",
                value: function(e) {
                    return this._block(e, this.formats.blockWithTransactions)
                }
            }, {
                key: "transactionRequest",
                value: function(t) {
                    return e.check(this.formats.transactionRequest, t)
                }
            }, {
                key: "transactionResponse",
                value: function(t) {
                    null != t.gas && null == t.gasLimit && (t.gasLimit = t.gas),
                    t.to && a.O$.from(t.to).isZero() && (t.to = "0x0000000000000000000000000000000000000000"),
                    null != t.input && null == t.data && (t.data = t.input),
                    null == t.to && null == t.creates && (t.creates = this.contractAddress(t)),
                    1 !== t.type && 2 !== t.type || null != t.accessList || (t.accessList = []);
                    var r = e.check(this.formats.transaction, t);
                    if (null != t.chainId) {
                        var n = t.chainId;
                        (0,
                        o.isHexString)(n) && (n = a.O$.from(n).toNumber()),
                        r.chainId = n
                    } else {
                        var s = t.networkId;
                        null == s && null == r.v && (s = t.chainId),
                        (0,
                        o.isHexString)(s) && (s = a.O$.from(s).toNumber()),
                        "number" !== typeof s && null != r.v && ((s = (r.v - 35) / 2) < 0 && (s = 0),
                        s = parseInt(s)),
                        "number" !== typeof s && (s = 0),
                        r.chainId = s
                    }
                    return r.blockHash && "x" === r.blockHash.replace(/0/g, "") && (r.blockHash = null),
                    r
                }
            }, {
                key: "transaction",
                value: function(e) {
                    return (0,
                    l.parse)(e)
                }
            }, {
                key: "receiptLog",
                value: function(t) {
                    return e.check(this.formats.receiptLog, t)
                }
            }, {
                key: "receipt",
                value: function(t) {
                    var r = e.check(this.formats.receipt, t);
                    if (null != r.root)
                        if (r.root.length <= 4) {
                            var n = a.O$.from(r.root).toNumber();
                            0 === n || 1 === n ? (null != r.status && r.status !== n && f.throwArgumentError("alt-root-status/status mismatch", "value", {
                                root: r.root,
                                status: r.status
                            }),
                            r.status = n,
                            delete r.root) : f.throwArgumentError("invalid alt-root-status", "value.root", r.root)
                        } else
                            66 !== r.root.length && f.throwArgumentError("invalid root hash", "value.root", r.root);
                    return null != r.status && (r.byzantium = !0),
                    r
                }
            }, {
                key: "topics",
                value: function(e) {
                    var t = this;
                    return Array.isArray(e) ? e.map((function(e) {
                        return t.topics(e)
                    }
                    )) : null != e ? this.hash(e, !0) : null
                }
            }, {
                key: "filter",
                value: function(t) {
                    return e.check(this.formats.filter, t)
                }
            }, {
                key: "filterLog",
                value: function(t) {
                    return e.check(this.formats.filterLog, t)
                }
            }], [{
                key: "check",
                value: function(e, t) {
                    var r = {};
                    for (var n in e)
                        try {
                            var s = e[n](t[n]);
                            void 0 !== s && (r[n] = s)
                        } catch (i) {
                            throw i.checkKey = n,
                            i.checkValue = t[n],
                            i
                        }
                    return r
                }
            }, {
                key: "allowNull",
                value: function(e, t) {
                    return function(r) {
                        return null == r ? t : e(r)
                    }
                }
            }, {
                key: "allowFalsish",
                value: function(e, t) {
                    return function(r) {
                        return r ? e(r) : t
                    }
                }
            }, {
                key: "arrayOf",
                value: function(e) {
                    return function(t) {
                        if (!Array.isArray(t))
                            throw new Error("not an array");
                        var r = [];
                        return t.forEach((function(t) {
                            r.push(e(t))
                        }
                        )),
                        r
                    }
                }
            }]),
            e
        }();
        function v(e) {
            return e && "function" === typeof e.isCommunityResource
        }
        function g(e) {
            return v(e) && e.isCommunityResource()
        }
        var m = !1;
        function y() {
            m || (m = !0,
            console.log("========= NOTICE ========="),
            console.log("Request-Rate Exceeded  (this message will not be repeated)"),
            console.log(""),
            console.log("The default API keys for each service are provided as a highly-throttled,"),
            console.log("community resource for low-traffic projects and early prototyping."),
            console.log(""),
            console.log("While your application will continue to function, we highly recommended"),
            console.log("signing up for your own API keys to improve performance, increase your"),
            console.log("request rate/limit and enable other perks, such as metrics and advanced APIs."),
            console.log(""),
            console.log("For more details: https://docs.ethers.io/api-keys/"),
            console.log("=========================="))
        }
    },
    47910: function(e, t, r) {
        r.r(t),
        r.d(t, {
            AlchemyProvider: function() {
                return T
            },
            AlchemyWebSocketProvider: function() {
                return S
            },
            AnkrProvider: function() {
                return A
            },
            BaseProvider: function() {
                return i.Zk
            },
            CloudflareProvider: function() {
                return q
            },
            EtherscanProvider: function() {
                return W
            },
            FallbackProvider: function() {
                return Y.H
            },
            Formatter: function() {
                return h.Mb
            },
            InfuraProvider: function() {
                return te
            },
            InfuraWebSocketProvider: function() {
                return ee
            },
            IpcProvider: function() {
                return $
            },
            JsonRpcBatchProvider: function() {
                return re
            },
            JsonRpcProvider: function() {
                return y.r
            },
            JsonRpcSigner: function() {
                return y.C
            },
            NodesmithProvider: function() {
                return se
            },
            PocketProvider: function() {
                return oe
            },
            Provider: function() {
                return n.zt
            },
            Resolver: function() {
                return i.H2
            },
            StaticJsonRpcProvider: function() {
                return I.c
            },
            UrlJsonRpcProvider: function() {
                return I.l
            },
            Web3Provider: function() {
                return ce.Q
            },
            WebSocketProvider: function() {
                return P
            },
            getDefaultProvider: function() {
                return le
            },
            getNetwork: function() {
                return s.H
            },
            isCommunityResourcable: function() {
                return h.Ed
            },
            isCommunityResource: function() {
                return h.Gp
            },
            showThrottleMessage: function() {
                return h.vh
            }
        });
        var n = r(15157)
          , s = r(88133)
          , i = r(5341)
          , a = r(15671)
          , o = r(43144)
          , c = r(97326)
          , u = r(60136)
          , l = r(29388)
          , p = r(54812)
          , h = r(23134)
          , f = r(74165)
          , d = r(82963)
          , v = r(11752)
          , g = r(61120)
          , m = r(19560)
          , y = r(42416)
          , b = r(2735)
          , k = r(49862)
          , w = null;
        try {
            if (null == (w = WebSocket))
                throw new Error("inject please")
        } catch (pe) {
            var x = new b.Logger(k.i);
            w = function() {
                x.throwError("WebSockets not supported in this environment", b.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "new WebSocket()"
                })
            }
        }
        var E = function(e, t, r, n) {
            return new (r || (r = Promise))((function(s, i) {
                function a(e) {
                    try {
                        c(n.next(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function o(e) {
                    try {
                        c(n.throw(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function c(e) {
                    var t;
                    e.done ? s(e.value) : (t = e.value,
                    t instanceof r ? t : new r((function(e) {
                        e(t)
                    }
                    ))).then(a, o)
                }
                c((n = n.apply(e, t || [])).next())
            }
            ))
        }
          , Z = new b.Logger(k.i)
          , _ = 1
          , P = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r(e, n) {
                var s, i;
                (0,
                a.Z)(this, r),
                "any" === n && Z.throwError("WebSocketProvider does not support 'any' network yet", b.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "network:any"
                }),
                (i = "string" === typeof e ? t.call(this, e, n) : t.call(this, "_websocket", n))._pollingInterval = -1,
                i._wsReady = !1,
                "string" === typeof e ? (0,
                p.defineReadOnly)((0,
                c.Z)(i), "_websocket", new w(i.connection.url)) : (0,
                p.defineReadOnly)((0,
                c.Z)(i), "_websocket", e),
                (0,
                p.defineReadOnly)((0,
                c.Z)(i), "_requests", {}),
                (0,
                p.defineReadOnly)((0,
                c.Z)(i), "_subs", {}),
                (0,
                p.defineReadOnly)((0,
                c.Z)(i), "_subIds", {}),
                (0,
                p.defineReadOnly)((0,
                c.Z)(i), "_detectNetwork", (0,
                v.Z)((s = (0,
                c.Z)(i),
                (0,
                g.Z)(r.prototype)), "detectNetwork", s).call(s)),
                i.websocket.onopen = function() {
                    i._wsReady = !0,
                    Object.keys(i._requests).forEach((function(e) {
                        i.websocket.send(i._requests[e].payload)
                    }
                    ))
                }
                ,
                i.websocket.onmessage = function(e) {
                    var t = e.data
                      , r = JSON.parse(t);
                    if (null != r.id) {
                        var n = String(r.id)
                          , s = i._requests[n];
                        if (delete i._requests[n],
                        void 0 !== r.result)
                            s.callback(null, r.result),
                            i.emit("debug", {
                                action: "response",
                                request: JSON.parse(s.payload),
                                response: r.result,
                                provider: (0,
                                c.Z)(i)
                            });
                        else {
                            var a = null;
                            r.error ? (a = new Error(r.error.message || "unknown error"),
                            (0,
                            p.defineReadOnly)(a, "code", r.error.code || null),
                            (0,
                            p.defineReadOnly)(a, "response", t)) : a = new Error("unknown error"),
                            s.callback(a, void 0),
                            i.emit("debug", {
                                action: "response",
                                error: a,
                                request: JSON.parse(s.payload),
                                provider: (0,
                                c.Z)(i)
                            })
                        }
                    } else if ("eth_subscription" === r.method) {
                        var o = i._subs[r.params.subscription];
                        o && o.processFunc(r.params.result)
                    } else
                        console.warn("this should not happen")
                }
                ;
                var o = setInterval((function() {
                    i.emit("poll")
                }
                ), 1e3);
                return o.unref && o.unref(),
                (0,
                d.Z)(i)
            }
            return (0,
            o.Z)(r, [{
                key: "websocket",
                get: function() {
                    return this._websocket
                }
            }, {
                key: "detectNetwork",
                value: function() {
                    return this._detectNetwork
                }
            }, {
                key: "pollingInterval",
                get: function() {
                    return 0
                },
                set: function(e) {
                    Z.throwError("cannot set polling interval on WebSocketProvider", b.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "setPollingInterval"
                    })
                }
            }, {
                key: "resetEventsBlock",
                value: function(e) {
                    Z.throwError("cannot reset events block on WebSocketProvider", b.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "resetEventBlock"
                    })
                }
            }, {
                key: "poll",
                value: function() {
                    return E(this, void 0, void 0, (0,
                    f.Z)().mark((function e() {
                        return (0,
                        f.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.abrupt("return", null);
                                case 1:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )))
                }
            }, {
                key: "polling",
                set: function(e) {
                    e && Z.throwError("cannot set polling on WebSocketProvider", b.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "setPolling"
                    })
                }
            }, {
                key: "send",
                value: function(e, t) {
                    var r = this
                      , n = _++;
                    return new Promise((function(s, i) {
                        var a = JSON.stringify({
                            method: e,
                            params: t,
                            id: n,
                            jsonrpc: "2.0"
                        });
                        r.emit("debug", {
                            action: "request",
                            request: JSON.parse(a),
                            provider: r
                        }),
                        r._requests[String(n)] = {
                            callback: function(e, t) {
                                return e ? i(e) : s(t)
                            },
                            payload: a
                        },
                        r._wsReady && r.websocket.send(a)
                    }
                    ))
                }
            }, {
                key: "_subscribe",
                value: function(e, t, r) {
                    return E(this, void 0, void 0, (0,
                    f.Z)().mark((function n() {
                        var s, i, a = this;
                        return (0,
                        f.Z)().wrap((function(n) {
                            for (; ; )
                                switch (n.prev = n.next) {
                                case 0:
                                    return null == (s = this._subIds[e]) && (s = Promise.all(t).then((function(e) {
                                        return a.send("eth_subscribe", e)
                                    }
                                    )),
                                    this._subIds[e] = s),
                                    n.next = 4,
                                    s;
                                case 4:
                                    i = n.sent,
                                    this._subs[i] = {
                                        tag: e,
                                        processFunc: r
                                    };
                                case 6:
                                case "end":
                                    return n.stop()
                                }
                        }
                        ), n, this)
                    }
                    )))
                }
            }, {
                key: "_startEvent",
                value: function(e) {
                    var t = this;
                    switch (e.type) {
                    case "block":
                        this._subscribe("block", ["newHeads"], (function(e) {
                            var r = m.O$.from(e.number).toNumber();
                            t._emitted.block = r,
                            t.emit("block", r)
                        }
                        ));
                        break;
                    case "pending":
                        this._subscribe("pending", ["newPendingTransactions"], (function(e) {
                            t.emit("pending", e)
                        }
                        ));
                        break;
                    case "filter":
                        this._subscribe(e.tag, ["logs", this._getFilter(e.filter)], (function(r) {
                            null == r.removed && (r.removed = !1),
                            t.emit(e.filter, t.formatter.filterLog(r))
                        }
                        ));
                        break;
                    case "tx":
                        var r = function(e) {
                            var r = e.hash;
                            t.getTransactionReceipt(r).then((function(e) {
                                e && t.emit(r, e)
                            }
                            ))
                        };
                        r(e),
                        this._subscribe("tx", ["newHeads"], (function(e) {
                            t._events.filter((function(e) {
                                return "tx" === e.type
                            }
                            )).forEach(r)
                        }
                        ));
                        break;
                    case "debug":
                    case "poll":
                    case "willPoll":
                    case "didPoll":
                    case "error":
                        break;
                    default:
                        console.log("unhandled:", e)
                    }
                }
            }, {
                key: "_stopEvent",
                value: function(e) {
                    var t = this
                      , r = e.tag;
                    if ("tx" === e.type) {
                        if (this._events.filter((function(e) {
                            return "tx" === e.type
                        }
                        )).length)
                            return;
                        r = "tx"
                    } else if (this.listenerCount(e.event))
                        return;
                    var n = this._subIds[r];
                    n && (delete this._subIds[r],
                    n.then((function(e) {
                        t._subs[e] && (delete t._subs[e],
                        t.send("eth_unsubscribe", [e]))
                    }
                    )))
                }
            }, {
                key: "destroy",
                value: function() {
                    return E(this, void 0, void 0, (0,
                    f.Z)().mark((function e() {
                        var t = this;
                        return (0,
                        f.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (this.websocket.readyState !== w.CONNECTING) {
                                        e.next = 3;
                                        break
                                    }
                                    return e.next = 3,
                                    new Promise((function(e) {
                                        t.websocket.onopen = function() {
                                            e(!0)
                                        }
                                        ,
                                        t.websocket.onerror = function() {
                                            e(!1)
                                        }
                                    }
                                    ));
                                case 3:
                                    this.websocket.close(1e3);
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )))
                }
            }], [{
                key: "defaultUrl",
                value: function() {
                    return "ws://localhost:8546"
                }
            }]),
            r
        }(y.r)
          , I = r(74175)
          , N = new b.Logger(k.i)
          , R = "_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC"
          , S = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r(e, n) {
                var s;
                (0,
                a.Z)(this, r);
                var i = new T(e,n)
                  , o = i.connection.url.replace(/^http/i, "ws").replace(".alchemyapi.", ".ws.alchemyapi.");
                return s = t.call(this, o, i.network),
                (0,
                p.defineReadOnly)((0,
                c.Z)(s), "apiKey", i.apiKey),
                s
            }
            return (0,
            o.Z)(r, [{
                key: "isCommunityResource",
                value: function() {
                    return this.apiKey === R
                }
            }]),
            r
        }(P)
          , T = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r() {
                return (0,
                a.Z)(this, r),
                t.apply(this, arguments)
            }
            return (0,
            o.Z)(r, [{
                key: "isCommunityResource",
                value: function() {
                    return this.apiKey === R
                }
            }], [{
                key: "getWebSocketProvider",
                value: function(e, t) {
                    return new S(e,t)
                }
            }, {
                key: "getApiKey",
                value: function(e) {
                    return null == e ? R : (e && "string" !== typeof e && N.throwArgumentError("invalid apiKey", "apiKey", e),
                    e)
                }
            }, {
                key: "getUrl",
                value: function(e, t) {
                    var r = null;
                    switch (e.name) {
                    case "homestead":
                        r = "eth-mainnet.alchemyapi.io/v2/";
                        break;
                    case "goerli":
                        r = "eth-goerli.g.alchemy.com/v2/";
                        break;
                    case "matic":
                        r = "polygon-mainnet.g.alchemy.com/v2/";
                        break;
                    case "maticmum":
                        r = "polygon-mumbai.g.alchemy.com/v2/";
                        break;
                    case "arbitrum":
                        r = "arb-mainnet.g.alchemy.com/v2/";
                        break;
                    case "arbitrum-goerli":
                        r = "arb-goerli.g.alchemy.com/v2/";
                        break;
                    case "optimism":
                        r = "opt-mainnet.g.alchemy.com/v2/";
                        break;
                    case "optimism-goerli":
                        r = "opt-goerli.g.alchemy.com/v2/";
                        break;
                    default:
                        N.throwArgumentError("unsupported network", "network", arguments[0])
                    }
                    return {
                        allowGzip: !0,
                        url: "https://" + r + t,
                        throttleCallback: function(e, r) {
                            return t === R && (0,
                            h.vh)(),
                            Promise.resolve(!0)
                        }
                    }
                }
            }]),
            r
        }(I.l)
          , O = new b.Logger(k.i)
          , C = "9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972";
        function L(e) {
            switch (e) {
            case "homestead":
                return "rpc.ankr.com/eth/";
            case "ropsten":
                return "rpc.ankr.com/eth_ropsten/";
            case "rinkeby":
                return "rpc.ankr.com/eth_rinkeby/";
            case "goerli":
                return "rpc.ankr.com/eth_goerli/";
            case "matic":
                return "rpc.ankr.com/polygon/";
            case "arbitrum":
                return "rpc.ankr.com/arbitrum/"
            }
            return O.throwArgumentError("unsupported network", "name", e)
        }
        var A = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r() {
                return (0,
                a.Z)(this, r),
                t.apply(this, arguments)
            }
            return (0,
            o.Z)(r, [{
                key: "isCommunityResource",
                value: function() {
                    return this.apiKey === C
                }
            }], [{
                key: "getApiKey",
                value: function(e) {
                    return null == e ? C : e
                }
            }, {
                key: "getUrl",
                value: function(e, t) {
                    null == t && (t = C);
                    var r = {
                        allowGzip: !0,
                        url: "https://" + L(e.name) + t,
                        throttleCallback: function(e, r) {
                            return t.apiKey === C && (0,
                            h.vh)(),
                            Promise.resolve(!0)
                        }
                    };
                    return null != t.projectSecret && (r.user = "",
                    r.password = t.projectSecret),
                    r
                }
            }]),
            r
        }(I.l)
          , D = function(e, t, r, n) {
            return new (r || (r = Promise))((function(s, i) {
                function a(e) {
                    try {
                        c(n.next(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function o(e) {
                    try {
                        c(n.throw(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function c(e) {
                    var t;
                    e.done ? s(e.value) : (t = e.value,
                    t instanceof r ? t : new r((function(e) {
                        e(t)
                    }
                    ))).then(a, o)
                }
                c((n = n.apply(e, t || [])).next())
            }
            ))
        }
          , B = new b.Logger(k.i)
          , q = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r() {
                return (0,
                a.Z)(this, r),
                t.apply(this, arguments)
            }
            return (0,
            o.Z)(r, [{
                key: "perform",
                value: function(e, t) {
                    var n = this
                      , s = Object.create(null, {
                        perform: {
                            get: function() {
                                return (0,
                                v.Z)((0,
                                g.Z)(r.prototype), "perform", n)
                            }
                        }
                    });
                    return D(this, void 0, void 0, (0,
                    f.Z)().mark((function r() {
                        var n;
                        return (0,
                        f.Z)().wrap((function(r) {
                            for (; ; )
                                switch (r.prev = r.next) {
                                case 0:
                                    if ("getBlockNumber" !== e) {
                                        r.next = 5;
                                        break
                                    }
                                    return r.next = 3,
                                    s.perform.call(this, "getBlock", {
                                        blockTag: "latest"
                                    });
                                case 3:
                                    return n = r.sent,
                                    r.abrupt("return", n.number);
                                case 5:
                                    return r.abrupt("return", s.perform.call(this, e, t));
                                case 6:
                                case "end":
                                    return r.stop()
                                }
                        }
                        ), r, this)
                    }
                    )))
                }
            }], [{
                key: "getApiKey",
                value: function(e) {
                    return null != e && B.throwArgumentError("apiKey not supported for cloudflare", "apiKey", e),
                    null
                }
            }, {
                key: "getUrl",
                value: function(e, t) {
                    var r = null;
                    if ("homestead" === e.name)
                        r = "https://cloudflare-eth.com/";
                    else
                        B.throwArgumentError("unsupported network", "network", arguments[0]);
                    return r
                }
            }]),
            r
        }(I.l)
          , U = r(52009)
          , j = r(65958)
          , M = r(28786)
          , z = function(e, t, r, n) {
            return new (r || (r = Promise))((function(s, i) {
                function a(e) {
                    try {
                        c(n.next(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function o(e) {
                    try {
                        c(n.throw(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function c(e) {
                    var t;
                    e.done ? s(e.value) : (t = e.value,
                    t instanceof r ? t : new r((function(e) {
                        e(t)
                    }
                    ))).then(a, o)
                }
                c((n = n.apply(e, t || [])).next())
            }
            ))
        }
          , H = new b.Logger(k.i);
        function K(e) {
            var t = {};
            for (var r in e)
                if (null != e[r]) {
                    var n = e[r];
                    "type" === r && 0 === n || (n = {
                        type: !0,
                        gasLimit: !0,
                        gasPrice: !0,
                        maxFeePerGs: !0,
                        maxPriorityFeePerGas: !0,
                        nonce: !0,
                        value: !0
                    }[r] ? (0,
                    U.hexValue)((0,
                    U.hexlify)(n)) : "accessList" === r ? "[" + (0,
                    j.accessListify)(n).map((function(e) {
                        return '{address:"'.concat(e.address, '",storageKeys:["').concat(e.storageKeys.join('","'), '"]}')
                    }
                    )).join(",") + "]" : (0,
                    U.hexlify)(n),
                    t[r] = n)
                }
            return t
        }
        function F(e) {
            if (0 == e.status && ("No records found" === e.message || "No transactions found" === e.message))
                return e.result;
            if (1 != e.status || "string" !== typeof e.message || !e.message.match(/^OK/)) {
                var t = new Error("invalid response");
                throw t.result = JSON.stringify(e),
                (e.result || "").toLowerCase().indexOf("rate limit") >= 0 && (t.throttleRetry = !0),
                t
            }
            return e.result
        }
        function V(e) {
            if (e && 0 == e.status && "NOTOK" == e.message && (e.result || "").toLowerCase().indexOf("rate limit") >= 0) {
                var t = new Error("throttled response");
                throw t.result = JSON.stringify(e),
                t.throttleRetry = !0,
                t
            }
            if ("2.0" != e.jsonrpc) {
                var r = new Error("invalid response");
                throw r.result = JSON.stringify(e),
                r
            }
            if (e.error) {
                var n = new Error(e.error.message || "unknown error");
                throw e.error.code && (n.code = e.error.code),
                e.error.data && (n.data = e.error.data),
                n
            }
            return e.result
        }
        function G(e) {
            if ("pending" === e)
                throw new Error("pending not supported");
            return "latest" === e ? e : parseInt(e.substring(2), 16)
        }
        function J(e, t, r) {
            if ("call" === e && t.code === b.Logger.errors.SERVER_ERROR) {
                var n = t.error;
                if (n && (n.message.match(/reverted/i) || n.message.match(/VM execution error/i))) {
                    var s = n.data;
                    if (s && (s = "0x" + s.replace(/^.*0x/i, "")),
                    (0,
                    U.isHexString)(s))
                        return s;
                    H.throwError("missing revert data in call exception", b.Logger.errors.CALL_EXCEPTION, {
                        error: t,
                        data: "0x"
                    })
                }
            }
            var i = t.message;
            throw t.code === b.Logger.errors.SERVER_ERROR && (t.error && "string" === typeof t.error.message ? i = t.error.message : "string" === typeof t.body ? i = t.body : "string" === typeof t.responseText && (i = t.responseText)),
            (i = (i || "").toLowerCase()).match(/insufficient funds/) && H.throwError("insufficient funds for intrinsic transaction cost", b.Logger.errors.INSUFFICIENT_FUNDS, {
                error: t,
                method: e,
                transaction: r
            }),
            i.match(/same hash was already imported|transaction nonce is too low|nonce too low/) && H.throwError("nonce has already been used", b.Logger.errors.NONCE_EXPIRED, {
                error: t,
                method: e,
                transaction: r
            }),
            i.match(/another transaction with same nonce/) && H.throwError("replacement fee too low", b.Logger.errors.REPLACEMENT_UNDERPRICED, {
                error: t,
                method: e,
                transaction: r
            }),
            i.match(/execution failed due to an exception|execution reverted/) && H.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", b.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                error: t,
                method: e,
                transaction: r
            }),
            t
        }
        var W = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r(e, n) {
                var s;
                return (0,
                a.Z)(this, r),
                s = t.call(this, e),
                (0,
                p.defineReadOnly)((0,
                c.Z)(s), "baseUrl", s.getBaseUrl()),
                (0,
                p.defineReadOnly)((0,
                c.Z)(s), "apiKey", n || null),
                s
            }
            return (0,
            o.Z)(r, [{
                key: "getBaseUrl",
                value: function() {
                    switch (this.network ? this.network.name : "invalid") {
                    case "homestead":
                        return "https://api.etherscan.io";
                    case "goerli":
                        return "https://api-goerli.etherscan.io";
                    case "sepolia":
                        return "https://api-sepolia.etherscan.io";
                    case "matic":
                        return "https://api.polygonscan.com";
                    case "maticmum":
                        return "https://api-testnet.polygonscan.com";
                    case "arbitrum":
                        return "https://api.arbiscan.io";
                    case "arbitrum-goerli":
                        return "https://api-goerli.arbiscan.io";
                    case "optimism":
                        return "https://api-optimistic.etherscan.io";
                    case "optimism-goerli":
                        return "https://api-goerli-optimistic.etherscan.io"
                    }
                    return H.throwArgumentError("unsupported network", "network", this.network.name)
                }
            }, {
                key: "getUrl",
                value: function(e, t) {
                    var r = Object.keys(t).reduce((function(e, r) {
                        var n = t[r];
                        return null != n && (e += "&".concat(r, "=").concat(n)),
                        e
                    }
                    ), "")
                      , n = this.apiKey ? "&apikey=".concat(this.apiKey) : "";
                    return "".concat(this.baseUrl, "/api?module=").concat(e).concat(r).concat(n)
                }
            }, {
                key: "getPostUrl",
                value: function() {
                    return "".concat(this.baseUrl, "/api")
                }
            }, {
                key: "getPostData",
                value: function(e, t) {
                    return t.module = e,
                    t.apikey = this.apiKey,
                    t
                }
            }, {
                key: "fetch",
                value: function(e, t, r) {
                    return z(this, void 0, void 0, (0,
                    f.Z)().mark((function n() {
                        var s, i, a, o, c, u, l = this;
                        return (0,
                        f.Z)().wrap((function(n) {
                            for (; ; )
                                switch (n.prev = n.next) {
                                case 0:
                                    return s = r ? this.getPostUrl() : this.getUrl(e, t),
                                    i = r ? this.getPostData(e, t) : null,
                                    a = "proxy" === e ? V : F,
                                    this.emit("debug", {
                                        action: "request",
                                        request: s,
                                        provider: this
                                    }),
                                    o = {
                                        url: s,
                                        throttleSlotInterval: 1e3,
                                        throttleCallback: function(e, t) {
                                            return l.isCommunityResource() && (0,
                                            h.vh)(),
                                            Promise.resolve(!0)
                                        }
                                    },
                                    c = null,
                                    i && (o.headers = {
                                        "content-type": "application/x-www-form-urlencoded; charset=UTF-8"
                                    },
                                    c = Object.keys(i).map((function(e) {
                                        return "".concat(e, "=").concat(i[e])
                                    }
                                    )).join("&")),
                                    n.next = 9,
                                    (0,
                                    M.fetchJson)(o, c, a || V);
                                case 9:
                                    return u = n.sent,
                                    this.emit("debug", {
                                        action: "response",
                                        request: s,
                                        response: (0,
                                        p.deepCopy)(u),
                                        provider: this
                                    }),
                                    n.abrupt("return", u);
                                case 12:
                                case "end":
                                    return n.stop()
                                }
                        }
                        ), n, this)
                    }
                    )))
                }
            }, {
                key: "detectNetwork",
                value: function() {
                    return z(this, void 0, void 0, (0,
                    f.Z)().mark((function e() {
                        return (0,
                        f.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.abrupt("return", this.network);
                                case 1:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )))
                }
            }, {
                key: "perform",
                value: function(e, t) {
                    var n = this
                      , s = Object.create(null, {
                        perform: {
                            get: function() {
                                return (0,
                                v.Z)((0,
                                g.Z)(r.prototype), "perform", n)
                            }
                        }
                    });
                    return z(this, void 0, void 0, (0,
                    f.Z)().mark((function r() {
                        var n, i, a, o, c, u, l, p, h;
                        return (0,
                        f.Z)().wrap((function(r) {
                            for (; ; )
                                switch (r.prev = r.next) {
                                case 0:
                                    r.t0 = e,
                                    r.next = "getBlockNumber" === r.t0 ? 3 : "getGasPrice" === r.t0 ? 4 : "getBalance" === r.t0 ? 5 : "getTransactionCount" === r.t0 ? 6 : "getCode" === r.t0 ? 7 : "getStorageAt" === r.t0 ? 8 : "sendTransaction" === r.t0 ? 9 : "getBlock" === r.t0 ? 10 : "getTransaction" === r.t0 ? 13 : "getTransactionReceipt" === r.t0 ? 14 : "call" === r.t0 ? 15 : "estimateGas" === r.t0 ? 29 : "getLogs" === r.t0 ? 41 : "getEtherPrice" === r.t0 ? 65 : 72;
                                    break;
                                case 3:
                                    return r.abrupt("return", this.fetch("proxy", {
                                        action: "eth_blockNumber"
                                    }));
                                case 4:
                                    return r.abrupt("return", this.fetch("proxy", {
                                        action: "eth_gasPrice"
                                    }));
                                case 5:
                                    return r.abrupt("return", this.fetch("account", {
                                        action: "balance",
                                        address: t.address,
                                        tag: t.blockTag
                                    }));
                                case 6:
                                    return r.abrupt("return", this.fetch("proxy", {
                                        action: "eth_getTransactionCount",
                                        address: t.address,
                                        tag: t.blockTag
                                    }));
                                case 7:
                                    return r.abrupt("return", this.fetch("proxy", {
                                        action: "eth_getCode",
                                        address: t.address,
                                        tag: t.blockTag
                                    }));
                                case 8:
                                    return r.abrupt("return", this.fetch("proxy", {
                                        action: "eth_getStorageAt",
                                        address: t.address,
                                        position: t.position,
                                        tag: t.blockTag
                                    }));
                                case 9:
                                    return r.abrupt("return", this.fetch("proxy", {
                                        action: "eth_sendRawTransaction",
                                        hex: t.signedTransaction
                                    }, !0).catch((function(e) {
                                        return J("sendTransaction", e, t.signedTransaction)
                                    }
                                    )));
                                case 10:
                                    if (!t.blockTag) {
                                        r.next = 12;
                                        break
                                    }
                                    return r.abrupt("return", this.fetch("proxy", {
                                        action: "eth_getBlockByNumber",
                                        tag: t.blockTag,
                                        boolean: t.includeTransactions ? "true" : "false"
                                    }));
                                case 12:
                                    throw new Error("getBlock by blockHash not implemented");
                                case 13:
                                    return r.abrupt("return", this.fetch("proxy", {
                                        action: "eth_getTransactionByHash",
                                        txhash: t.transactionHash
                                    }));
                                case 14:
                                    return r.abrupt("return", this.fetch("proxy", {
                                        action: "eth_getTransactionReceipt",
                                        txhash: t.transactionHash
                                    }));
                                case 15:
                                    if ("latest" === t.blockTag) {
                                        r.next = 17;
                                        break
                                    }
                                    throw new Error("EtherscanProvider does not support blockTag for call");
                                case 17:
                                    return (n = K(t.transaction)).module = "proxy",
                                    n.action = "eth_call",
                                    r.prev = 20,
                                    r.next = 23,
                                    this.fetch("proxy", n, !0);
                                case 23:
                                    return r.abrupt("return", r.sent);
                                case 26:
                                    return r.prev = 26,
                                    r.t1 = r.catch(20),
                                    r.abrupt("return", J("call", r.t1, t.transaction));
                                case 29:
                                    return (i = K(t.transaction)).module = "proxy",
                                    i.action = "eth_estimateGas",
                                    r.prev = 32,
                                    r.next = 35,
                                    this.fetch("proxy", i, !0);
                                case 35:
                                    return r.abrupt("return", r.sent);
                                case 38:
                                    return r.prev = 38,
                                    r.t2 = r.catch(32),
                                    r.abrupt("return", J("estimateGas", r.t2, t.transaction));
                                case 41:
                                    return a = {
                                        action: "getLogs"
                                    },
                                    t.filter.fromBlock && (a.fromBlock = G(t.filter.fromBlock)),
                                    t.filter.toBlock && (a.toBlock = G(t.filter.toBlock)),
                                    t.filter.address && (a.address = t.filter.address),
                                    t.filter.topics && t.filter.topics.length > 0 && (t.filter.topics.length > 1 && H.throwError("unsupported topic count", b.Logger.errors.UNSUPPORTED_OPERATION, {
                                        topics: t.filter.topics
                                    }),
                                    1 === t.filter.topics.length && ("string" === typeof (o = t.filter.topics[0]) && 66 === o.length || H.throwError("unsupported topic format", b.Logger.errors.UNSUPPORTED_OPERATION, {
                                        topic0: o
                                    }),
                                    a.topic0 = o)),
                                    r.next = 48,
                                    this.fetch("logs", a);
                                case 48:
                                    c = r.sent,
                                    u = {},
                                    l = 0;
                                case 51:
                                    if (!(l < c.length)) {
                                        r.next = 64;
                                        break
                                    }
                                    if (null == (p = c[l]).blockHash) {
                                        r.next = 55;
                                        break
                                    }
                                    return r.abrupt("continue", 61);
                                case 55:
                                    if (null != u[p.blockNumber]) {
                                        r.next = 60;
                                        break
                                    }
                                    return r.next = 58,
                                    this.getBlock(p.blockNumber);
                                case 58:
                                    (h = r.sent) && (u[p.blockNumber] = h.hash);
                                case 60:
                                    p.blockHash = u[p.blockNumber];
                                case 61:
                                    l++,
                                    r.next = 51;
                                    break;
                                case 64:
                                    return r.abrupt("return", c);
                                case 65:
                                    if ("homestead" === this.network.name) {
                                        r.next = 67;
                                        break
                                    }
                                    return r.abrupt("return", 0);
                                case 67:
                                    return r.t3 = parseFloat,
                                    r.next = 70,
                                    this.fetch("stats", {
                                        action: "ethprice"
                                    });
                                case 70:
                                    return r.t4 = r.sent.ethusd,
                                    r.abrupt("return", (0,
                                    r.t3)(r.t4));
                                case 72:
                                    return r.abrupt("break", 73);
                                case 73:
                                    return r.abrupt("return", s.perform.call(this, e, t));
                                case 74:
                                case "end":
                                    return r.stop()
                                }
                        }
                        ), r, this, [[20, 26], [32, 38]])
                    }
                    )))
                }
            }, {
                key: "getHistory",
                value: function(e, t, r) {
                    return z(this, void 0, void 0, (0,
                    f.Z)().mark((function n() {
                        var s, i, a = this;
                        return (0,
                        f.Z)().wrap((function(n) {
                            for (; ; )
                                switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2,
                                    this.resolveName(e);
                                case 2:
                                    return n.t0 = n.sent,
                                    n.t1 = null == t ? 0 : t,
                                    n.t2 = null == r ? 99999999 : r,
                                    s = {
                                        action: "txlist",
                                        address: n.t0,
                                        startblock: n.t1,
                                        endblock: n.t2,
                                        sort: "asc"
                                    },
                                    n.next = 8,
                                    this.fetch("account", s);
                                case 8:
                                    return i = n.sent,
                                    n.abrupt("return", i.map((function(e) {
                                        ["contractAddress", "to"].forEach((function(t) {
                                            "" == e[t] && delete e[t]
                                        }
                                        )),
                                        null == e.creates && null != e.contractAddress && (e.creates = e.contractAddress);
                                        var t = a.formatter.transactionResponse(e);
                                        return e.timeStamp && (t.timestamp = parseInt(e.timeStamp)),
                                        t
                                    }
                                    )));
                                case 10:
                                case "end":
                                    return n.stop()
                                }
                        }
                        ), n, this)
                    }
                    )))
                }
            }, {
                key: "isCommunityResource",
                value: function() {
                    return null == this.apiKey
                }
            }]),
            r
        }(i.Zk)
          , Y = r(18519)
          , $ = null
          , X = new b.Logger(k.i)
          , Q = "84842078b09946638c03157f83405213"
          , ee = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r(e, n) {
                var s;
                (0,
                a.Z)(this, r);
                var i = new te(e,n)
                  , o = i.connection;
                o.password && X.throwError("INFURA WebSocket project secrets unsupported", b.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "InfuraProvider.getWebSocketProvider()"
                });
                var u = o.url.replace(/^http/i, "ws").replace("/v3/", "/ws/v3/");
                return s = t.call(this, u, e),
                (0,
                p.defineReadOnly)((0,
                c.Z)(s), "apiKey", i.projectId),
                (0,
                p.defineReadOnly)((0,
                c.Z)(s), "projectId", i.projectId),
                (0,
                p.defineReadOnly)((0,
                c.Z)(s), "projectSecret", i.projectSecret),
                s
            }
            return (0,
            o.Z)(r, [{
                key: "isCommunityResource",
                value: function() {
                    return this.projectId === Q
                }
            }]),
            r
        }(P)
          , te = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r() {
                return (0,
                a.Z)(this, r),
                t.apply(this, arguments)
            }
            return (0,
            o.Z)(r, [{
                key: "isCommunityResource",
                value: function() {
                    return this.projectId === Q
                }
            }], [{
                key: "getWebSocketProvider",
                value: function(e, t) {
                    return new ee(e,t)
                }
            }, {
                key: "getApiKey",
                value: function(e) {
                    var t = {
                        apiKey: Q,
                        projectId: Q,
                        projectSecret: null
                    };
                    return null == e || ("string" === typeof e ? t.projectId = e : null != e.projectSecret ? (X.assertArgument("string" === typeof e.projectId, "projectSecret requires a projectId", "projectId", e.projectId),
                    X.assertArgument("string" === typeof e.projectSecret, "invalid projectSecret", "projectSecret", "[REDACTED]"),
                    t.projectId = e.projectId,
                    t.projectSecret = e.projectSecret) : e.projectId && (t.projectId = e.projectId),
                    t.apiKey = t.projectId),
                    t
                }
            }, {
                key: "getUrl",
                value: function(e, t) {
                    var r = null;
                    switch (e ? e.name : "unknown") {
                    case "homestead":
                        r = "mainnet.infura.io";
                        break;
                    case "goerli":
                        r = "goerli.infura.io";
                        break;
                    case "sepolia":
                        r = "sepolia.infura.io";
                        break;
                    case "matic":
                        r = "polygon-mainnet.infura.io";
                        break;
                    case "maticmum":
                        r = "polygon-mumbai.infura.io";
                        break;
                    case "optimism":
                        r = "optimism-mainnet.infura.io";
                        break;
                    case "optimism-goerli":
                        r = "optimism-goerli.infura.io";
                        break;
                    case "arbitrum":
                        r = "arbitrum-mainnet.infura.io";
                        break;
                    case "arbitrum-goerli":
                        r = "arbitrum-goerli.infura.io";
                        break;
                    default:
                        X.throwError("unsupported network", b.Logger.errors.INVALID_ARGUMENT, {
                            argument: "network",
                            value: e
                        })
                    }
                    var n = {
                        allowGzip: !0,
                        url: "https://" + r + "/v3/" + t.projectId,
                        throttleCallback: function(e, r) {
                            return t.projectId === Q && (0,
                            h.vh)(),
                            Promise.resolve(!0)
                        }
                    };
                    return null != t.projectSecret && (n.user = "",
                    n.password = t.projectSecret),
                    n
                }
            }]),
            r
        }(I.l)
          , re = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r() {
                return (0,
                a.Z)(this, r),
                t.apply(this, arguments)
            }
            return (0,
            o.Z)(r, [{
                key: "send",
                value: function(e, t) {
                    var r = this
                      , n = {
                        method: e,
                        params: t,
                        id: this._nextId++,
                        jsonrpc: "2.0"
                    };
                    null == this._pendingBatch && (this._pendingBatch = []);
                    var s = {
                        request: n,
                        resolve: null,
                        reject: null
                    }
                      , i = new Promise((function(e, t) {
                        s.resolve = e,
                        s.reject = t
                    }
                    ));
                    return this._pendingBatch.push(s),
                    this._pendingBatchAggregator || (this._pendingBatchAggregator = setTimeout((function() {
                        var e = r._pendingBatch;
                        r._pendingBatch = null,
                        r._pendingBatchAggregator = null;
                        var t = e.map((function(e) {
                            return e.request
                        }
                        ));
                        return r.emit("debug", {
                            action: "requestBatch",
                            request: (0,
                            p.deepCopy)(t),
                            provider: r
                        }),
                        (0,
                        M.fetchJson)(r.connection, JSON.stringify(t)).then((function(n) {
                            r.emit("debug", {
                                action: "response",
                                request: t,
                                response: n,
                                provider: r
                            }),
                            e.forEach((function(e, t) {
                                var r = n[t];
                                if (r.error) {
                                    var s = new Error(r.error.message);
                                    s.code = r.error.code,
                                    s.data = r.error.data,
                                    e.reject(s)
                                } else
                                    e.resolve(r.result)
                            }
                            ))
                        }
                        ), (function(n) {
                            r.emit("debug", {
                                action: "response",
                                error: n,
                                request: t,
                                provider: r
                            }),
                            e.forEach((function(e) {
                                e.reject(n)
                            }
                            ))
                        }
                        ))
                    }
                    ), 10)),
                    i
                }
            }]),
            r
        }(y.r)
          , ne = new b.Logger(k.i)
          , se = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r() {
                return (0,
                a.Z)(this, r),
                t.apply(this, arguments)
            }
            return (0,
            o.Z)(r, null, [{
                key: "getApiKey",
                value: function(e) {
                    return e && "string" !== typeof e && ne.throwArgumentError("invalid apiKey", "apiKey", e),
                    e || "ETHERS_JS_SHARED"
                }
            }, {
                key: "getUrl",
                value: function(e, t) {
                    ne.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");
                    var r = null;
                    switch (e.name) {
                    case "homestead":
                        r = "https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";
                        break;
                    case "ropsten":
                        r = "https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";
                        break;
                    case "rinkeby":
                        r = "https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";
                        break;
                    case "goerli":
                        r = "https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";
                        break;
                    case "kovan":
                        r = "https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";
                        break;
                    default:
                        ne.throwArgumentError("unsupported network", "network", arguments[0])
                    }
                    return r + "?apiKey=" + t
                }
            }]),
            r
        }(I.l)
          , ie = new b.Logger(k.i)
          , ae = "62e1ad51b37b8e00394bda3b"
          , oe = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r() {
                return (0,
                a.Z)(this, r),
                t.apply(this, arguments)
            }
            return (0,
            o.Z)(r, [{
                key: "isCommunityResource",
                value: function() {
                    return this.applicationId === ae
                }
            }], [{
                key: "getApiKey",
                value: function(e) {
                    var t = {
                        applicationId: null,
                        loadBalancer: !0,
                        applicationSecretKey: null
                    };
                    return null == e ? t.applicationId = ae : "string" === typeof e ? t.applicationId = e : null != e.applicationSecretKey ? (t.applicationId = e.applicationId,
                    t.applicationSecretKey = e.applicationSecretKey) : e.applicationId ? t.applicationId = e.applicationId : ie.throwArgumentError("unsupported PocketProvider apiKey", "apiKey", e),
                    t
                }
            }, {
                key: "getUrl",
                value: function(e, t) {
                    var r = null;
                    switch (e ? e.name : "unknown") {
                    case "goerli":
                        r = "eth-goerli.gateway.pokt.network";
                        break;
                    case "homestead":
                        r = "eth-mainnet.gateway.pokt.network";
                        break;
                    case "kovan":
                        r = "poa-kovan.gateway.pokt.network";
                        break;
                    case "matic":
                        r = "poly-mainnet.gateway.pokt.network";
                        break;
                    case "maticmum":
                        r = "polygon-mumbai-rpc.gateway.pokt.network";
                        break;
                    case "rinkeby":
                        r = "eth-rinkeby.gateway.pokt.network";
                        break;
                    case "ropsten":
                        r = "eth-ropsten.gateway.pokt.network";
                        break;
                    default:
                        ie.throwError("unsupported network", b.Logger.errors.INVALID_ARGUMENT, {
                            argument: "network",
                            value: e
                        })
                    }
                    var n = {
                        headers: {},
                        url: "https://".concat(r, "/v1/lb/").concat(t.applicationId)
                    };
                    return null != t.applicationSecretKey && (n.user = "",
                    n.password = t.applicationSecretKey),
                    n
                }
            }]),
            r
        }(I.l)
          , ce = r(64249)
          , ue = new b.Logger(k.i);
        function le(e, t) {
            if (null == e && (e = "homestead"),
            "string" === typeof e) {
                var r = e.match(/^(ws|http)s?:/i);
                if (r)
                    switch (r[1].toLowerCase()) {
                    case "http":
                    case "https":
                        return new y.r(e);
                    case "ws":
                    case "wss":
                        return new P(e);
                    default:
                        ue.throwArgumentError("unsupported URL scheme", "network", e)
                    }
            }
            var n = (0,
            s.H)(e);
            return n && n._defaultProvider || ue.throwError("unsupported getDefaultProvider network", b.Logger.errors.NETWORK_ERROR, {
                operation: "getDefaultProvider",
                network: e
            }),
            n._defaultProvider({
                FallbackProvider: Y.H,
                AlchemyProvider: T,
                AnkrProvider: A,
                CloudflareProvider: q,
                EtherscanProvider: W,
                InfuraProvider: te,
                JsonRpcProvider: y.r,
                NodesmithProvider: se,
                PocketProvider: oe,
                Web3Provider: ce.Q,
                IpcProvider: $
            }, t)
        }
    },
    42416: function(e, t, r) {
        r.d(t, {
            C: function() {
                return T
            },
            r: function() {
                return L
            }
        });
        var n = r(11752)
          , s = r(61120)
          , i = r(74165)
          , a = r(15671)
          , o = r(43144)
          , c = r(97326)
          , u = r(60136)
          , l = r(29388)
          , p = r(72388)
          , h = r(19560)
          , f = r(52009)
          , d = r(26454)
          , v = r(54812)
          , g = r(91953)
          , m = r(65958)
          , y = r(28786)
          , b = r(2735)
          , k = r(49862)
          , w = r(5341)
          , x = function(e, t, r, n) {
            return new (r || (r = Promise))((function(s, i) {
                function a(e) {
                    try {
                        c(n.next(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function o(e) {
                    try {
                        c(n.throw(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function c(e) {
                    var t;
                    e.done ? s(e.value) : (t = e.value,
                    t instanceof r ? t : new r((function(e) {
                        e(t)
                    }
                    ))).then(a, o)
                }
                c((n = n.apply(e, t || [])).next())
            }
            ))
        }
          , E = new b.Logger(k.i)
          , Z = ["call", "estimateGas"];
        function _(e, t) {
            if (null == e)
                return null;
            if ("string" === typeof e.message && e.message.match("reverted")) {
                var r = (0,
                f.isHexString)(e.data) ? e.data : null;
                if (!t || r)
                    return {
                        message: e.message,
                        data: r
                    }
            }
            if ("object" === typeof e) {
                for (var n in e) {
                    var s = _(e[n], t);
                    if (s)
                        return s
                }
                return null
            }
            if ("string" === typeof e)
                try {
                    return _(JSON.parse(e), t)
                } catch (i) {}
            return null
        }
        function P(e, t, r) {
            var n = r.transaction || r.signedTransaction;
            if ("call" === e) {
                var s = _(t, !0);
                if (s)
                    return s.data;
                E.throwError("missing revert data in call exception; Transaction reverted without a reason string", b.Logger.errors.CALL_EXCEPTION, {
                    data: "0x",
                    transaction: n,
                    error: t
                })
            }
            if ("estimateGas" === e) {
                var i = _(t.body, !1);
                null == i && (i = _(t, !1)),
                i && E.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", b.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                    reason: i.message,
                    method: e,
                    transaction: n,
                    error: t
                })
            }
            var a = t.message;
            throw t.code === b.Logger.errors.SERVER_ERROR && t.error && "string" === typeof t.error.message ? a = t.error.message : "string" === typeof t.body ? a = t.body : "string" === typeof t.responseText && (a = t.responseText),
            (a = (a || "").toLowerCase()).match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i) && E.throwError("insufficient funds for intrinsic transaction cost", b.Logger.errors.INSUFFICIENT_FUNDS, {
                error: t,
                method: e,
                transaction: n
            }),
            a.match(/nonce (is )?too low/i) && E.throwError("nonce has already been used", b.Logger.errors.NONCE_EXPIRED, {
                error: t,
                method: e,
                transaction: n
            }),
            a.match(/replacement transaction underpriced|transaction gas price.*too low/i) && E.throwError("replacement fee too low", b.Logger.errors.REPLACEMENT_UNDERPRICED, {
                error: t,
                method: e,
                transaction: n
            }),
            a.match(/only replay-protected/i) && E.throwError("legacy pre-eip-155 transactions not supported", b.Logger.errors.UNSUPPORTED_OPERATION, {
                error: t,
                method: e,
                transaction: n
            }),
            Z.indexOf(e) >= 0 && a.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/) && E.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", b.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                error: t,
                method: e,
                transaction: n
            }),
            t
        }
        function I(e) {
            return new Promise((function(t) {
                setTimeout(t, e)
            }
            ))
        }
        function N(e) {
            if (e.error) {
                var t = new Error(e.error.message);
                throw t.code = e.error.code,
                t.data = e.error.data,
                t
            }
            return e.result
        }
        function R(e) {
            return e ? e.toLowerCase() : e
        }
        var S = {}
          , T = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r(e, n, s) {
                var i;
                if ((0,
                a.Z)(this, r),
                i = t.call(this),
                e !== S)
                    throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
                return (0,
                v.defineReadOnly)((0,
                c.Z)(i), "provider", n),
                null == s && (s = 0),
                "string" === typeof s ? ((0,
                v.defineReadOnly)((0,
                c.Z)(i), "_address", i.provider.formatter.address(s)),
                (0,
                v.defineReadOnly)((0,
                c.Z)(i), "_index", null)) : "number" === typeof s ? ((0,
                v.defineReadOnly)((0,
                c.Z)(i), "_index", s),
                (0,
                v.defineReadOnly)((0,
                c.Z)(i), "_address", null)) : E.throwArgumentError("invalid address or index", "addressOrIndex", s),
                i
            }
            return (0,
            o.Z)(r, [{
                key: "connect",
                value: function(e) {
                    return E.throwError("cannot alter JSON-RPC Signer connection", b.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "connect"
                    })
                }
            }, {
                key: "connectUnchecked",
                value: function() {
                    return new O(S,this.provider,this._address || this._index)
                }
            }, {
                key: "getAddress",
                value: function() {
                    var e = this;
                    return this._address ? Promise.resolve(this._address) : this.provider.send("eth_accounts", []).then((function(t) {
                        return t.length <= e._index && E.throwError("unknown account #" + e._index, b.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "getAddress"
                        }),
                        e.provider.formatter.address(t[e._index])
                    }
                    ))
                }
            }, {
                key: "sendUncheckedTransaction",
                value: function(e) {
                    var t = this;
                    e = (0,
                    v.shallowCopy)(e);
                    var r = this.getAddress().then((function(e) {
                        return e && (e = e.toLowerCase()),
                        e
                    }
                    ));
                    if (null == e.gasLimit) {
                        var n = (0,
                        v.shallowCopy)(e);
                        n.from = r,
                        e.gasLimit = this.provider.estimateGas(n)
                    }
                    return null != e.to && (e.to = Promise.resolve(e.to).then((function(e) {
                        return x(t, void 0, void 0, (0,
                        i.Z)().mark((function t() {
                            var r;
                            return (0,
                            i.Z)().wrap((function(t) {
                                for (; ; )
                                    switch (t.prev = t.next) {
                                    case 0:
                                        if (null != e) {
                                            t.next = 2;
                                            break
                                        }
                                        return t.abrupt("return", null);
                                    case 2:
                                        return t.next = 4,
                                        this.provider.resolveName(e);
                                    case 4:
                                        return null == (r = t.sent) && E.throwArgumentError("provided ENS name resolves to null", "tx.to", e),
                                        t.abrupt("return", r);
                                    case 7:
                                    case "end":
                                        return t.stop()
                                    }
                            }
                            ), t, this)
                        }
                        )))
                    }
                    ))),
                    (0,
                    v.resolveProperties)({
                        tx: (0,
                        v.resolveProperties)(e),
                        sender: r
                    }).then((function(r) {
                        var n = r.tx
                          , s = r.sender;
                        null != n.from ? n.from.toLowerCase() !== s && E.throwArgumentError("from address mismatch", "transaction", e) : n.from = s;
                        var i = t.provider.constructor.hexlifyTransaction(n, {
                            from: !0
                        });
                        return t.provider.send("eth_sendTransaction", [i]).then((function(e) {
                            return e
                        }
                        ), (function(e) {
                            return "string" === typeof e.message && e.message.match(/user denied/i) && E.throwError("user rejected transaction", b.Logger.errors.ACTION_REJECTED, {
                                action: "sendTransaction",
                                transaction: n
                            }),
                            P("sendTransaction", e, i)
                        }
                        ))
                    }
                    ))
                }
            }, {
                key: "signTransaction",
                value: function(e) {
                    return E.throwError("signing transactions is unsupported", b.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "signTransaction"
                    })
                }
            }, {
                key: "sendTransaction",
                value: function(e) {
                    return x(this, void 0, void 0, (0,
                    i.Z)().mark((function t() {
                        var r, n, s = this;
                        return (0,
                        i.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);
                                case 2:
                                    return r = t.sent,
                                    t.next = 5,
                                    this.sendUncheckedTransaction(e);
                                case 5:
                                    return n = t.sent,
                                    t.prev = 6,
                                    t.next = 9,
                                    (0,
                                    y.poll)((function() {
                                        return x(s, void 0, void 0, (0,
                                        i.Z)().mark((function e() {
                                            var t;
                                            return (0,
                                            i.Z)().wrap((function(e) {
                                                for (; ; )
                                                    switch (e.prev = e.next) {
                                                    case 0:
                                                        return e.next = 2,
                                                        this.provider.getTransaction(n);
                                                    case 2:
                                                        if (null !== (t = e.sent)) {
                                                            e.next = 5;
                                                            break
                                                        }
                                                        return e.abrupt("return", void 0);
                                                    case 5:
                                                        return e.abrupt("return", this.provider._wrapTransaction(t, n, r));
                                                    case 6:
                                                    case "end":
                                                        return e.stop()
                                                    }
                                            }
                                            ), e, this)
                                        }
                                        )))
                                    }
                                    ), {
                                        oncePoll: this.provider
                                    });
                                case 9:
                                    return t.abrupt("return", t.sent);
                                case 12:
                                    throw t.prev = 12,
                                    t.t0 = t.catch(6),
                                    t.t0.transactionHash = n,
                                    t.t0;
                                case 16:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this, [[6, 12]])
                    }
                    )))
                }
            }, {
                key: "signMessage",
                value: function(e) {
                    return x(this, void 0, void 0, (0,
                    i.Z)().mark((function t() {
                        var r, n;
                        return (0,
                        i.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return r = "string" === typeof e ? (0,
                                    g.Y0)(e) : e,
                                    t.next = 3,
                                    this.getAddress();
                                case 3:
                                    return n = t.sent,
                                    t.prev = 4,
                                    t.next = 7,
                                    this.provider.send("personal_sign", [(0,
                                    f.hexlify)(r), n.toLowerCase()]);
                                case 7:
                                    return t.abrupt("return", t.sent);
                                case 10:
                                    throw t.prev = 10,
                                    t.t0 = t.catch(4),
                                    "string" === typeof t.t0.message && t.t0.message.match(/user denied/i) && E.throwError("user rejected signing", b.Logger.errors.ACTION_REJECTED, {
                                        action: "signMessage",
                                        from: n,
                                        messageData: e
                                    }),
                                    t.t0;
                                case 14:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this, [[4, 10]])
                    }
                    )))
                }
            }, {
                key: "_legacySignMessage",
                value: function(e) {
                    return x(this, void 0, void 0, (0,
                    i.Z)().mark((function t() {
                        var r, n;
                        return (0,
                        i.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return r = "string" === typeof e ? (0,
                                    g.Y0)(e) : e,
                                    t.next = 3,
                                    this.getAddress();
                                case 3:
                                    return n = t.sent,
                                    t.prev = 4,
                                    t.next = 7,
                                    this.provider.send("eth_sign", [n.toLowerCase(), (0,
                                    f.hexlify)(r)]);
                                case 7:
                                    return t.abrupt("return", t.sent);
                                case 10:
                                    throw t.prev = 10,
                                    t.t0 = t.catch(4),
                                    "string" === typeof t.t0.message && t.t0.message.match(/user denied/i) && E.throwError("user rejected signing", b.Logger.errors.ACTION_REJECTED, {
                                        action: "_legacySignMessage",
                                        from: n,
                                        messageData: e
                                    }),
                                    t.t0;
                                case 14:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this, [[4, 10]])
                    }
                    )))
                }
            }, {
                key: "_signTypedData",
                value: function(e, t, r) {
                    return x(this, void 0, void 0, (0,
                    i.Z)().mark((function n() {
                        var s, a, o = this;
                        return (0,
                        i.Z)().wrap((function(n) {
                            for (; ; )
                                switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2,
                                    d.E.resolveNames(e, t, r, (function(e) {
                                        return o.provider.resolveName(e)
                                    }
                                    ));
                                case 2:
                                    return s = n.sent,
                                    n.next = 5,
                                    this.getAddress();
                                case 5:
                                    return a = n.sent,
                                    n.prev = 6,
                                    n.next = 9,
                                    this.provider.send("eth_signTypedData_v4", [a.toLowerCase(), JSON.stringify(d.E.getPayload(s.domain, t, s.value))]);
                                case 9:
                                    return n.abrupt("return", n.sent);
                                case 12:
                                    throw n.prev = 12,
                                    n.t0 = n.catch(6),
                                    "string" === typeof n.t0.message && n.t0.message.match(/user denied/i) && E.throwError("user rejected signing", b.Logger.errors.ACTION_REJECTED, {
                                        action: "_signTypedData",
                                        from: a,
                                        messageData: {
                                            domain: s.domain,
                                            types: t,
                                            value: s.value
                                        }
                                    }),
                                    n.t0;
                                case 16:
                                case "end":
                                    return n.stop()
                                }
                        }
                        ), n, this, [[6, 12]])
                    }
                    )))
                }
            }, {
                key: "unlock",
                value: function(e) {
                    return x(this, void 0, void 0, (0,
                    i.Z)().mark((function t() {
                        var r, n;
                        return (0,
                        i.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return r = this.provider,
                                    t.next = 3,
                                    this.getAddress();
                                case 3:
                                    return n = t.sent,
                                    t.abrupt("return", r.send("personal_unlockAccount", [n.toLowerCase(), e, null]));
                                case 5:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this)
                    }
                    )))
                }
            }]),
            r
        }(p.E)
          , O = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r() {
                return (0,
                a.Z)(this, r),
                t.apply(this, arguments)
            }
            return (0,
            o.Z)(r, [{
                key: "sendTransaction",
                value: function(e) {
                    var t = this;
                    return this.sendUncheckedTransaction(e).then((function(e) {
                        return {
                            hash: e,
                            nonce: null,
                            gasLimit: null,
                            gasPrice: null,
                            data: null,
                            value: null,
                            chainId: null,
                            confirmations: 0,
                            from: null,
                            wait: function(r) {
                                return t.provider.waitForTransaction(e, r)
                            }
                        }
                    }
                    ))
                }
            }]),
            r
        }(T)
          , C = {
            chainId: !0,
            data: !0,
            gasLimit: !0,
            gasPrice: !0,
            nonce: !0,
            to: !0,
            value: !0,
            type: !0,
            accessList: !0,
            maxFeePerGas: !0,
            maxPriorityFeePerGas: !0
        }
          , L = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r(e, n) {
                var s;
                (0,
                a.Z)(this, r);
                var i = n;
                return null == i && (i = new Promise((function(e, t) {
                    setTimeout((function() {
                        s.detectNetwork().then((function(t) {
                            e(t)
                        }
                        ), (function(e) {
                            t(e)
                        }
                        ))
                    }
                    ), 0)
                }
                ))),
                s = t.call(this, i),
                e || (e = (0,
                v.getStatic)(s.constructor, "defaultUrl")()),
                "string" === typeof e ? (0,
                v.defineReadOnly)((0,
                c.Z)(s), "connection", Object.freeze({
                    url: e
                })) : (0,
                v.defineReadOnly)((0,
                c.Z)(s), "connection", Object.freeze((0,
                v.shallowCopy)(e))),
                s._nextId = 42,
                s
            }
            return (0,
            o.Z)(r, [{
                key: "_cache",
                get: function() {
                    return null == this._eventLoopCache && (this._eventLoopCache = {}),
                    this._eventLoopCache
                }
            }, {
                key: "detectNetwork",
                value: function() {
                    var e = this;
                    return this._cache.detectNetwork || (this._cache.detectNetwork = this._uncachedDetectNetwork(),
                    setTimeout((function() {
                        e._cache.detectNetwork = null
                    }
                    ), 0)),
                    this._cache.detectNetwork
                }
            }, {
                key: "_uncachedDetectNetwork",
                value: function() {
                    return x(this, void 0, void 0, (0,
                    i.Z)().mark((function e() {
                        var t, r;
                        return (0,
                        i.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    I(0);
                                case 2:
                                    return t = null,
                                    e.prev = 3,
                                    e.next = 6,
                                    this.send("eth_chainId", []);
                                case 6:
                                    t = e.sent,
                                    e.next = 19;
                                    break;
                                case 9:
                                    return e.prev = 9,
                                    e.t0 = e.catch(3),
                                    e.prev = 11,
                                    e.next = 14,
                                    this.send("net_version", []);
                                case 14:
                                    t = e.sent,
                                    e.next = 19;
                                    break;
                                case 17:
                                    e.prev = 17,
                                    e.t1 = e.catch(11);
                                case 19:
                                    if (null == t) {
                                        e.next = 28;
                                        break
                                    }
                                    return r = (0,
                                    v.getStatic)(this.constructor, "getNetwork"),
                                    e.prev = 21,
                                    e.abrupt("return", r(h.O$.from(t).toNumber()));
                                case 25:
                                    return e.prev = 25,
                                    e.t2 = e.catch(21),
                                    e.abrupt("return", E.throwError("could not detect network", b.Logger.errors.NETWORK_ERROR, {
                                        chainId: t,
                                        event: "invalidNetwork",
                                        serverError: e.t2
                                    }));
                                case 28:
                                    return e.abrupt("return", E.throwError("could not detect network", b.Logger.errors.NETWORK_ERROR, {
                                        event: "noNetwork"
                                    }));
                                case 29:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[3, 9], [11, 17], [21, 25]])
                    }
                    )))
                }
            }, {
                key: "getSigner",
                value: function(e) {
                    return new T(S,this,e)
                }
            }, {
                key: "getUncheckedSigner",
                value: function(e) {
                    return this.getSigner(e).connectUnchecked()
                }
            }, {
                key: "listAccounts",
                value: function() {
                    var e = this;
                    return this.send("eth_accounts", []).then((function(t) {
                        return t.map((function(t) {
                            return e.formatter.address(t)
                        }
                        ))
                    }
                    ))
                }
            }, {
                key: "send",
                value: function(e, t) {
                    var r = this
                      , n = {
                        method: e,
                        params: t,
                        id: this._nextId++,
                        jsonrpc: "2.0"
                    };
                    this.emit("debug", {
                        action: "request",
                        request: (0,
                        v.deepCopy)(n),
                        provider: this
                    });
                    var s = ["eth_chainId", "eth_blockNumber"].indexOf(e) >= 0;
                    if (s && this._cache[e])
                        return this._cache[e];
                    var i = (0,
                    y.fetchJson)(this.connection, JSON.stringify(n), N).then((function(e) {
                        return r.emit("debug", {
                            action: "response",
                            request: n,
                            response: e,
                            provider: r
                        }),
                        e
                    }
                    ), (function(e) {
                        throw r.emit("debug", {
                            action: "response",
                            error: e,
                            request: n,
                            provider: r
                        }),
                        e
                    }
                    ));
                    return s && (this._cache[e] = i,
                    setTimeout((function() {
                        r._cache[e] = null
                    }
                    ), 0)),
                    i
                }
            }, {
                key: "prepareRequest",
                value: function(e, t) {
                    switch (e) {
                    case "getBlockNumber":
                        return ["eth_blockNumber", []];
                    case "getGasPrice":
                        return ["eth_gasPrice", []];
                    case "getBalance":
                        return ["eth_getBalance", [R(t.address), t.blockTag]];
                    case "getTransactionCount":
                        return ["eth_getTransactionCount", [R(t.address), t.blockTag]];
                    case "getCode":
                        return ["eth_getCode", [R(t.address), t.blockTag]];
                    case "getStorageAt":
                        return ["eth_getStorageAt", [R(t.address), (0,
                        f.hexZeroPad)(t.position, 32), t.blockTag]];
                    case "sendTransaction":
                        return ["eth_sendRawTransaction", [t.signedTransaction]];
                    case "getBlock":
                        return t.blockTag ? ["eth_getBlockByNumber", [t.blockTag, !!t.includeTransactions]] : t.blockHash ? ["eth_getBlockByHash", [t.blockHash, !!t.includeTransactions]] : null;
                    case "getTransaction":
                        return ["eth_getTransactionByHash", [t.transactionHash]];
                    case "getTransactionReceipt":
                        return ["eth_getTransactionReceipt", [t.transactionHash]];
                    case "call":
                        return ["eth_call", [(0,
                        v.getStatic)(this.constructor, "hexlifyTransaction")(t.transaction, {
                            from: !0
                        }), t.blockTag]];
                    case "estimateGas":
                        return ["eth_estimateGas", [(0,
                        v.getStatic)(this.constructor, "hexlifyTransaction")(t.transaction, {
                            from: !0
                        })]];
                    case "getLogs":
                        return t.filter && null != t.filter.address && (t.filter.address = R(t.filter.address)),
                        ["eth_getLogs", [t.filter]]
                    }
                    return null
                }
            }, {
                key: "perform",
                value: function(e, t) {
                    return x(this, void 0, void 0, (0,
                    i.Z)().mark((function r() {
                        var n, s, a;
                        return (0,
                        i.Z)().wrap((function(r) {
                            for (; ; )
                                switch (r.prev = r.next) {
                                case 0:
                                    if ("call" !== e && "estimateGas" !== e) {
                                        r.next = 8;
                                        break
                                    }
                                    if (!(n = t.transaction) || null == n.type || !h.O$.from(n.type).isZero()) {
                                        r.next = 8;
                                        break
                                    }
                                    if (null != n.maxFeePerGas || null != n.maxPriorityFeePerGas) {
                                        r.next = 8;
                                        break
                                    }
                                    return r.next = 6,
                                    this.getFeeData();
                                case 6:
                                    null == (s = r.sent).maxFeePerGas && null == s.maxPriorityFeePerGas && ((t = (0,
                                    v.shallowCopy)(t)).transaction = (0,
                                    v.shallowCopy)(n),
                                    delete t.transaction.type);
                                case 8:
                                    return null == (a = this.prepareRequest(e, t)) && E.throwError(e + " not implemented", b.Logger.errors.NOT_IMPLEMENTED, {
                                        operation: e
                                    }),
                                    r.prev = 10,
                                    r.next = 13,
                                    this.send(a[0], a[1]);
                                case 13:
                                    return r.abrupt("return", r.sent);
                                case 16:
                                    return r.prev = 16,
                                    r.t0 = r.catch(10),
                                    r.abrupt("return", P(e, r.t0, t));
                                case 19:
                                case "end":
                                    return r.stop()
                                }
                        }
                        ), r, this, [[10, 16]])
                    }
                    )))
                }
            }, {
                key: "_startEvent",
                value: function(e) {
                    "pending" === e.tag && this._startPending(),
                    (0,
                    n.Z)((0,
                    s.Z)(r.prototype), "_startEvent", this).call(this, e)
                }
            }, {
                key: "_startPending",
                value: function() {
                    if (null == this._pendingFilter) {
                        var e = this
                          , t = this.send("eth_newPendingTransactionFilter", []);
                        this._pendingFilter = t,
                        t.then((function(r) {
                            return function n() {
                                e.send("eth_getFilterChanges", [r]).then((function(r) {
                                    if (e._pendingFilter != t)
                                        return null;
                                    var n = Promise.resolve();
                                    return r.forEach((function(t) {
                                        e._emitted["t:" + t.toLowerCase()] = "pending",
                                        n = n.then((function() {
                                            return e.getTransaction(t).then((function(t) {
                                                return e.emit("pending", t),
                                                null
                                            }
                                            ))
                                        }
                                        ))
                                    }
                                    )),
                                    n.then((function() {
                                        return I(1e3)
                                    }
                                    ))
                                }
                                )).then((function() {
                                    if (e._pendingFilter == t)
                                        return setTimeout((function() {
                                            n()
                                        }
                                        ), 0),
                                        null;
                                    e.send("eth_uninstallFilter", [r])
                                }
                                )).catch((function(e) {}
                                ))
                            }(),
                            r
                        }
                        )).catch((function(e) {}
                        ))
                    }
                }
            }, {
                key: "_stopEvent",
                value: function(e) {
                    "pending" === e.tag && 0 === this.listenerCount("pending") && (this._pendingFilter = null),
                    (0,
                    n.Z)((0,
                    s.Z)(r.prototype), "_stopEvent", this).call(this, e)
                }
            }], [{
                key: "defaultUrl",
                value: function() {
                    return "http://localhost:8545"
                }
            }, {
                key: "hexlifyTransaction",
                value: function(e, t) {
                    var r = (0,
                    v.shallowCopy)(C);
                    if (t)
                        for (var n in t)
                            t[n] && (r[n] = !0);
                    (0,
                    v.checkProperties)(e, r);
                    var s = {};
                    return ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach((function(t) {
                        if (null != e[t]) {
                            var r = (0,
                            f.hexValue)(h.O$.from(e[t]));
                            "gasLimit" === t && (t = "gas"),
                            s[t] = r
                        }
                    }
                    )),
                    ["from", "to", "data"].forEach((function(t) {
                        null != e[t] && (s[t] = (0,
                        f.hexlify)(e[t]))
                    }
                    )),
                    e.accessList && (s.accessList = (0,
                    m.accessListify)(e.accessList)),
                    s
                }
            }]),
            r
        }(w.Zk)
    },
    74175: function(e, t, r) {
        r.d(t, {
            c: function() {
                return m
            },
            l: function() {
                return y
            }
        });
        var n = r(97326)
          , s = r(74165)
          , i = r(15671)
          , a = r(43144)
          , o = r(11752)
          , c = r(61120)
          , u = r(60136)
          , l = r(29388)
          , p = r(54812)
          , h = r(2735)
          , f = r(49862)
          , d = r(42416)
          , v = function(e, t, r, n) {
            return new (r || (r = Promise))((function(s, i) {
                function a(e) {
                    try {
                        c(n.next(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function o(e) {
                    try {
                        c(n.throw(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function c(e) {
                    var t;
                    e.done ? s(e.value) : (t = e.value,
                    t instanceof r ? t : new r((function(e) {
                        e(t)
                    }
                    ))).then(a, o)
                }
                c((n = n.apply(e, t || [])).next())
            }
            ))
        }
          , g = new h.Logger(f.i)
          , m = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r() {
                return (0,
                i.Z)(this, r),
                t.apply(this, arguments)
            }
            return (0,
            a.Z)(r, [{
                key: "detectNetwork",
                value: function() {
                    var e = this
                      , t = Object.create(null, {
                        detectNetwork: {
                            get: function() {
                                return (0,
                                o.Z)((0,
                                c.Z)(r.prototype), "detectNetwork", e)
                            }
                        }
                    });
                    return v(this, void 0, void 0, (0,
                    s.Z)().mark((function e() {
                        var r;
                        return (0,
                        s.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (null != (r = this.network)) {
                                        e.next = 7;
                                        break
                                    }
                                    return e.next = 4,
                                    t.detectNetwork.call(this);
                                case 4:
                                    (r = e.sent) || g.throwError("no network detected", h.Logger.errors.UNKNOWN_ERROR, {}),
                                    null == this._network && ((0,
                                    p.defineReadOnly)(this, "_network", r),
                                    this.emit("network", r, null));
                                case 7:
                                    return e.abrupt("return", r);
                                case 8:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )))
                }
            }]),
            r
        }(d.r)
          , y = function(e) {
            (0,
            u.Z)(r, e);
            var t = (0,
            l.Z)(r);
            function r(e, s) {
                var a;
                (0,
                i.Z)(this, r),
                g.checkAbstract(this instanceof r ? this.constructor : void 0, r),
                e = (0,
                p.getStatic)(this instanceof r ? this.constructor : void 0, "getNetwork")(e),
                s = (0,
                p.getStatic)(this instanceof r ? this.constructor : void 0, "getApiKey")(s);
                var o = (0,
                p.getStatic)(this instanceof r ? this.constructor : void 0, "getUrl")(e, s);
                return a = t.call(this, o, e),
                "string" === typeof s ? (0,
                p.defineReadOnly)((0,
                n.Z)(a), "apiKey", s) : null != s && Object.keys(s).forEach((function(e) {
                    (0,
                    p.defineReadOnly)((0,
                    n.Z)(a), e, s[e])
                }
                )),
                a
            }
            return (0,
            a.Z)(r, [{
                key: "_startPending",
                value: function() {
                    g.warn("WARNING: API provider does not support pending filters")
                }
            }, {
                key: "isCommunityResource",
                value: function() {
                    return !1
                }
            }, {
                key: "getSigner",
                value: function(e) {
                    return g.throwError("API provider does not support signing", h.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "getSigner"
                    })
                }
            }, {
                key: "listAccounts",
                value: function() {
                    return Promise.resolve([])
                }
            }], [{
                key: "getApiKey",
                value: function(e) {
                    return e
                }
            }, {
                key: "getUrl",
                value: function(e, t) {
                    return g.throwError("not implemented; sub-classes must override getUrl", h.Logger.errors.NOT_IMPLEMENTED, {
                        operation: "getUrl"
                    })
                }
            }]),
            r
        }(m)
    },
    64249: function(e, t, r) {
        r.d(t, {
            Q: function() {
                return v
            }
        });
        var n = r(15671)
          , s = r(43144)
          , i = r(97326)
          , a = r(60136)
          , o = r(29388)
          , c = r(54812)
          , u = r(2735)
          , l = r(49862)
          , p = r(42416)
          , h = new u.Logger(l.i)
          , f = 1;
        function d(e, t) {
            var r = "Web3LegacyFetcher";
            return function(e, n) {
                var s = this
                  , i = {
                    method: e,
                    params: n,
                    id: f++,
                    jsonrpc: "2.0"
                };
                return new Promise((function(e, n) {
                    s.emit("debug", {
                        action: "request",
                        fetcher: r,
                        request: (0,
                        c.deepCopy)(i),
                        provider: s
                    }),
                    t(i, (function(t, a) {
                        if (t)
                            return s.emit("debug", {
                                action: "response",
                                fetcher: r,
                                error: t,
                                request: i,
                                provider: s
                            }),
                            n(t);
                        if (s.emit("debug", {
                            action: "response",
                            fetcher: r,
                            request: i,
                            response: a,
                            provider: s
                        }),
                        a.error) {
                            var o = new Error(a.error.message);
                            return o.code = a.error.code,
                            o.data = a.error.data,
                            n(o)
                        }
                        e(a.result)
                    }
                    ))
                }
                ))
            }
        }
        var v = function(e) {
            (0,
            a.Z)(r, e);
            var t = (0,
            o.Z)(r);
            function r(e, s) {
                var a;
                (0,
                n.Z)(this, r),
                null == e && h.throwArgumentError("missing provider", "provider", e);
                var o = null
                  , u = null
                  , l = null;
                return "function" === typeof e ? (o = "unknown:",
                u = e) : (!(o = e.host || e.path || "") && e.isMetaMask && (o = "metamask"),
                l = e,
                e.request ? ("" === o && (o = "eip-1193:"),
                u = function(e) {
                    return function(t, r) {
                        var n = this;
                        null == r && (r = []);
                        var s = {
                            method: t,
                            params: r
                        };
                        return this.emit("debug", {
                            action: "request",
                            fetcher: "Eip1193Fetcher",
                            request: (0,
                            c.deepCopy)(s),
                            provider: this
                        }),
                        e.request(s).then((function(e) {
                            return n.emit("debug", {
                                action: "response",
                                fetcher: "Eip1193Fetcher",
                                request: s,
                                response: e,
                                provider: n
                            }),
                            e
                        }
                        ), (function(e) {
                            throw n.emit("debug", {
                                action: "response",
                                fetcher: "Eip1193Fetcher",
                                request: s,
                                error: e,
                                provider: n
                            }),
                            e
                        }
                        ))
                    }
                }(e)) : e.sendAsync ? u = d(0, e.sendAsync.bind(e)) : e.send ? u = d(0, e.send.bind(e)) : h.throwArgumentError("unsupported provider", "provider", e),
                o || (o = "unknown:")),
                a = t.call(this, o, s),
                (0,
                c.defineReadOnly)((0,
                i.Z)(a), "jsonRpcFetchFunc", u),
                (0,
                c.defineReadOnly)((0,
                i.Z)(a), "provider", l),
                a
            }
            return (0,
            s.Z)(r, [{
                key: "send",
                value: function(e, t) {
                    return this.jsonRpcFetchFunc(e, t)
                }
            }]),
            r
        }(p.r)
    },
    78489: function(e, t, r) {
        t.N = void 0;
        var n = r(71769);
        Object.defineProperty(t, "N", {
            enumerable: !0,
            get: function() {
                return n.SafeAppProvider
            }
        })
    },
    71769: function(e, t, r) {
        var n = r(27424).default
          , s = r(17061).default
          , i = r(17156).default
          , a = r(56690).default
          , o = r(89728).default
          , c = r(61655).default
          , u = r(26389).default;
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.SafeAppProvider = void 0;
        var l = r(68041)
          , p = r(26869)
          , h = function(e) {
            c(r, e);
            var t = u(r);
            function r(e, n) {
                var s;
                return a(this, r),
                (s = t.call(this)).submittedTxs = new Map,
                s.safe = e,
                s.sdk = n,
                s
            }
            return o(r, [{
                key: "connect",
                value: function() {
                    var e = i(s().mark((function e() {
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return this.emit("connect", {
                                        chainId: this.chainId
                                    }),
                                    e.abrupt("return");
                                case 2:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "disconnect",
                value: function() {
                    var e = i(s().mark((function e() {
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.abrupt("return");
                                case 1:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "chainId",
                get: function() {
                    return this.safe.chainId
                }
            }, {
                key: "request",
                value: function() {
                    var e = i(s().mark((function e(t) {
                        var r, i, a, o, c, u, l, h, f, d, v, g, m, y, b, k, w, x, E, Z;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    r = t.method,
                                    i = t.params,
                                    a = void 0 === i ? [] : i,
                                    e.t0 = r,
                                    e.next = "eth_accounts" === e.t0 ? 4 : "net_version" === e.t0 || "eth_chainId" === e.t0 ? 5 : "personal_sign" === e.t0 ? 6 : "eth_sign" === e.t0 ? 12 : "eth_signTypedData" === e.t0 || "eth_signTypedData_v4" === e.t0 ? 18 : "eth_sendTransaction" === e.t0 ? 25 : "eth_blockNumber" === e.t0 ? 32 : "eth_getBalance" === e.t0 ? 36 : "eth_getCode" === e.t0 ? 37 : "eth_getTransactionCount" === e.t0 ? 38 : "eth_getStorageAt" === e.t0 ? 39 : "eth_getBlockByNumber" === e.t0 ? 40 : "eth_getBlockByHash" === e.t0 ? 41 : "eth_getTransactionByHash" === e.t0 ? 42 : "eth_getTransactionReceipt" === e.t0 ? 55 : "eth_estimateGas" === e.t0 ? 66 : "eth_call" === e.t0 ? 67 : "eth_getLogs" === e.t0 ? 68 : "eth_gasPrice" === e.t0 ? 69 : "wallet_getPermissions" === e.t0 ? 70 : "wallet_requestPermissions" === e.t0 ? 71 : 72;
                                    break;
                                case 4:
                                    return e.abrupt("return", [this.safe.safeAddress]);
                                case 5:
                                    return e.abrupt("return", "0x".concat(this.chainId.toString(16)));
                                case 6:
                                    if (o = n(a, 2),
                                    c = o[0],
                                    u = o[1],
                                    this.safe.safeAddress.toLowerCase() === u.toLowerCase()) {
                                        e.next = 9;
                                        break
                                    }
                                    throw new Error("The address or message hash is invalid");
                                case 9:
                                    return e.next = 11,
                                    this.sdk.txs.signMessage(c);
                                case 11:
                                    return e.abrupt("return", "0x");
                                case 12:
                                    if (l = n(a, 2),
                                    h = l[0],
                                    f = l[1],
                                    this.safe.safeAddress.toLowerCase() === h.toLowerCase() && f.startsWith("0x")) {
                                        e.next = 15;
                                        break
                                    }
                                    throw new Error("The address or message hash is invalid");
                                case 15:
                                    return e.next = 17,
                                    this.sdk.txs.signMessage(f);
                                case 17:
                                    return e.abrupt("return", "0x");
                                case 18:
                                    if (d = n(a, 2),
                                    v = d[0],
                                    g = d[1],
                                    m = "string" === typeof g ? JSON.parse(g) : g,
                                    this.safe.safeAddress.toLowerCase() === v.toLowerCase()) {
                                        e.next = 22;
                                        break
                                    }
                                    throw new Error("The address is invalid");
                                case 22:
                                    return e.next = 24,
                                    this.sdk.txs.signTypedMessage(m);
                                case 24:
                                    return e.abrupt("return", "0x");
                                case 25:
                                    return "string" === typeof (y = Object.assign({
                                        value: "0",
                                        data: "0x"
                                    }, a[0])).gas && y.gas.startsWith("0x") && (y.gas = parseInt(y.gas, 16)),
                                    e.next = 29,
                                    this.sdk.txs.send({
                                        txs: [y],
                                        params: {
                                            safeTxGas: y.gas
                                        }
                                    });
                                case 29:
                                    return b = e.sent,
                                    this.submittedTxs.set(b.safeTxHash, {
                                        from: this.safe.safeAddress,
                                        hash: b.safeTxHash,
                                        gas: 0,
                                        gasPrice: "0x00",
                                        nonce: 0,
                                        input: y.data,
                                        value: y.value,
                                        to: y.to,
                                        blockHash: null,
                                        blockNumber: null,
                                        transactionIndex: null
                                    }),
                                    e.abrupt("return", b.safeTxHash);
                                case 32:
                                    return e.next = 34,
                                    this.sdk.eth.getBlockByNumber(["latest"]);
                                case 34:
                                    return k = e.sent,
                                    e.abrupt("return", k.number);
                                case 36:
                                    return e.abrupt("return", this.sdk.eth.getBalance([(0,
                                    p.getLowerCase)(a[0]), a[1]]));
                                case 37:
                                    return e.abrupt("return", this.sdk.eth.getCode([(0,
                                    p.getLowerCase)(a[0]), a[1]]));
                                case 38:
                                    return e.abrupt("return", this.sdk.eth.getTransactionCount([(0,
                                    p.getLowerCase)(a[0]), a[1]]));
                                case 39:
                                    return e.abrupt("return", this.sdk.eth.getStorageAt([(0,
                                    p.getLowerCase)(a[0]), a[1], a[2]]));
                                case 40:
                                    return e.abrupt("return", this.sdk.eth.getBlockByNumber([a[0], a[1]]));
                                case 41:
                                    return e.abrupt("return", this.sdk.eth.getBlockByHash([a[0], a[1]]));
                                case 42:
                                    return w = a[0],
                                    e.prev = 43,
                                    e.next = 46,
                                    this.sdk.txs.getBySafeTxHash(w);
                                case 46:
                                    x = e.sent,
                                    w = x.txHash || w,
                                    e.next = 52;
                                    break;
                                case 50:
                                    e.prev = 50,
                                    e.t1 = e.catch(43);
                                case 52:
                                    if (!this.submittedTxs.has(w)) {
                                        e.next = 54;
                                        break
                                    }
                                    return e.abrupt("return", this.submittedTxs.get(w));
                                case 54:
                                    return e.abrupt("return", this.sdk.eth.getTransactionByHash([w]).then((function(e) {
                                        return e && (e.hash = a[0]),
                                        e
                                    }
                                    )));
                                case 55:
                                    return E = a[0],
                                    e.prev = 56,
                                    e.next = 59,
                                    this.sdk.txs.getBySafeTxHash(E);
                                case 59:
                                    Z = e.sent,
                                    E = Z.txHash || E,
                                    e.next = 65;
                                    break;
                                case 63:
                                    e.prev = 63,
                                    e.t2 = e.catch(56);
                                case 65:
                                    return e.abrupt("return", this.sdk.eth.getTransactionReceipt([E]).then((function(e) {
                                        return e && (e.transactionHash = a[0]),
                                        e
                                    }
                                    )));
                                case 66:
                                    return e.abrupt("return", this.sdk.eth.getEstimateGas(a[0]));
                                case 67:
                                    return e.abrupt("return", this.sdk.eth.call([a[0], a[1]]));
                                case 68:
                                    return e.abrupt("return", this.sdk.eth.getPastLogs([a[0]]));
                                case 69:
                                    return e.abrupt("return", this.sdk.eth.getGasPrice());
                                case 70:
                                    return e.abrupt("return", this.sdk.wallet.getPermissions());
                                case 71:
                                    return e.abrupt("return", this.sdk.wallet.requestPermissions(a[0]));
                                case 72:
                                    throw Error('"'.concat(t.method, '" not implemented'));
                                case 73:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[43, 50], [56, 63]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "send",
                value: function(e, t) {
                    e || t("Undefined request"),
                    this.request(e).then((function(r) {
                        return t(null, {
                            jsonrpc: "2.0",
                            id: e.id,
                            result: r
                        })
                    }
                    )).catch((function(e) {
                        return t(e, null)
                    }
                    ))
                }
            }]),
            r
        }(l.EventEmitter);
        t.SafeAppProvider = h
    },
    26869: function(e, t) {
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.getLowerCase = void 0,
        t.getLowerCase = function(e) {
            return e ? e.toLowerCase() : e
        }
    },
    49359: function(e, t, r) {
        r.d(t, {
            XR: function() {
                return c
            },
            x0: function() {
                return u
            }
        });
        var n = r(43144)
          , s = r(15671)
          , i = r(60136)
          , a = r(29388)
          , o = r(62181)
          , c = function(e) {
            (0,
            i.Z)(r, e);
            var t = (0,
            a.Z)(r);
            function r(e) {
                return (0,
                s.Z)(this, r),
                t.call(this)
            }
            return (0,
            n.Z)(r)
        }(o.q)
          , u = function(e) {
            (0,
            i.Z)(r, e);
            var t = (0,
            a.Z)(r);
            function r(e) {
                return (0,
                s.Z)(this, r),
                t.call(this)
            }
            return (0,
            n.Z)(r)
        }(function(e) {
            (0,
            i.Z)(r, e);
            var t = (0,
            a.Z)(r);
            function r() {
                return (0,
                s.Z)(this, r),
                t.call(this)
            }
            return (0,
            n.Z)(r)
        }(o.q))
    },
    86092: function(e, t, r) {
        r.d(t, {
            k: function() {
                return Ei
            }
        });
        var n = r(74165)
          , s = r(15861)
          , i = r(15671)
          , a = r(43144)
          , o = r(29439)
          , c = r(93433)
          , u = r(37762)
          , l = r(24)
          , p = r.n(l)
          , h = r(97326)
          , f = r(60136)
          , d = r(29388)
          , v = r(4942)
          , g = r(1413)
          , m = r(68041)
          , y = r.n(m)
          , b = r(60074)
          , k = r(1345)
          , w = r(91451)
          , x = r(46857)
          , E = r(70758)
          , Z = r(15650)
          , _ = r(74533)
          , P = r(81791)
          , I = r(14701)
          , N = r(49900)
          , R = r(23539)
          , S = r(91696)
          , T = r(90876)
          , O = r(93659)
          , C = r(38783)
          , L = r(55210)
          , A = r(7289)
          , D = r(10947)
          , B = r(7490);
        function q(e, t) {
            return e.includes(":") ? [e] : t.chains || []
        }
        var U = "base10"
          , j = "base16"
          , M = "base64pad"
          , z = "utf8"
          , H = 0
          , K = 1
          , F = 0
          , V = 1
          , G = 12
          , J = 32;
        function W() {
            var e = (0,
            I.randomBytes)(J);
            return (0,
            S.BB)(e, j)
        }
        function Y(e) {
            var t = (0,
            N.vp)((0,
            S.mL)(e, j));
            return (0,
            S.BB)(t, j)
        }
        function $(e) {
            var t = (0,
            N.vp)((0,
            S.mL)(e, z));
            return (0,
            S.BB)(t, j)
        }
        function X(e) {
            return Number((0,
            S.BB)(e, U))
        }
        function Q(e) {
            var t = function(e) {
                return (0,
                S.mL)("".concat(e), U)
            }(typeof e.type < "u" ? e.type : H);
            if (X(t) === K && typeof e.senderPublicKey > "u")
                throw new Error("Missing sender public key for type 1 envelope");
            var r = typeof e.senderPublicKey < "u" ? (0,
            S.mL)(e.senderPublicKey, j) : void 0
              , n = typeof e.iv < "u" ? (0,
            S.mL)(e.iv, j) : (0,
            I.randomBytes)(G);
            return function(e) {
                if (X(e.type) === K) {
                    if (typeof e.senderPublicKey > "u")
                        throw new Error("Missing sender public key for type 1 envelope");
                    return (0,
                    S.BB)((0,
                    S.zo)([e.type, e.senderPublicKey, e.iv, e.sealed]), M)
                }
                return (0,
                S.BB)((0,
                S.zo)([e.type, e.iv, e.sealed]), M)
            }({
                type: t,
                sealed: new _.OK((0,
                S.mL)(e.symKey, j)).seal(n, (0,
                S.mL)(e.message, z)),
                iv: n,
                senderPublicKey: r
            })
        }
        function ee(e) {
            var t = new _.OK((0,
            S.mL)(e.symKey, j))
              , r = te(e.encoded)
              , n = r.sealed
              , s = r.iv
              , i = t.open(s, n);
            if (null === i)
                throw new Error("Failed to decrypt");
            return (0,
            S.BB)(i, z)
        }
        function te(e) {
            var t = (0,
            S.mL)(e, M)
              , r = t.slice(F, V)
              , n = V;
            if (X(r) === K) {
                var s = n + J
                  , i = s + G
                  , a = t.slice(n, s)
                  , o = t.slice(s, i);
                return {
                    type: r,
                    sealed: t.slice(i),
                    iv: o,
                    senderPublicKey: a
                }
            }
            var c = n + G
              , u = t.slice(n, c);
            return {
                type: r,
                sealed: t.slice(c),
                iv: u
            }
        }
        function re(e, t) {
            var r = te(e);
            return ne({
                type: X(r.type),
                senderPublicKey: typeof r.senderPublicKey < "u" ? (0,
                S.BB)(r.senderPublicKey, j) : void 0,
                receiverPublicKey: null === t || void 0 === t ? void 0 : t.receiverPublicKey
            })
        }
        function ne(e) {
            var t = (null === e || void 0 === e ? void 0 : e.type) || H;
            if (t === K) {
                if (typeof (null === e || void 0 === e ? void 0 : e.senderPublicKey) > "u")
                    throw new Error("missing sender public key");
                if (typeof (null === e || void 0 === e ? void 0 : e.receiverPublicKey) > "u")
                    throw new Error("missing receiver public key")
            }
            return {
                type: t,
                senderPublicKey: null === e || void 0 === e ? void 0 : e.senderPublicKey,
                receiverPublicKey: null === e || void 0 === e ? void 0 : e.receiverPublicKey
            }
        }
        function se(e) {
            return e.type === K && "string" == typeof e.senderPublicKey && "string" == typeof e.receiverPublicKey
        }
        var ie = Object.defineProperty
          , ae = Object.getOwnPropertySymbols
          , oe = Object.prototype.hasOwnProperty
          , ce = Object.prototype.propertyIsEnumerable
          , ue = function(e, t, r) {
            return t in e ? ie(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r
            }) : e[t] = r
        }
          , le = function(e, t) {
            for (var r in t || (t = {}))
                oe.call(t, r) && ue(e, r, t[r]);
            if (ae) {
                var n, s = (0,
                u.Z)(ae(t));
                try {
                    for (s.s(); !(n = s.n()).done; ) {
                        r = n.value;
                        ce.call(t, r) && ue(e, r, t[r])
                    }
                } catch (i) {
                    s.e(i)
                } finally {
                    s.f()
                }
            }
            return e
        }
          , pe = "ReactNative"
          , he = {
            reactNative: "react-native",
            node: "node",
            browser: "browser",
            unknown: "unknown"
        }
          , fe = "js";
        function de() {
            return typeof B < "u" && typeof B.versions < "u" && typeof B.versions.node < "u"
        }
        function ve() {
            return !(0,
            C.getDocument)() && (0,
            C.getNavigator)() && navigator.product === pe ? he.reactNative : de() ? he.node : !de() && (0,
            C.getNavigator)() ? he.browser : he.unknown
        }
        function ge(e, t, r) {
            var n = function() {
                var e = (0,
                T.qY)();
                if (null === e)
                    return "unknown";
                var t = e.os ? e.os.replace(" ", "").toLowerCase() : "unknown";
                return "browser" === e.type ? [t, e.name, e.version].join("-") : [t, e.version].join("-")
            }()
              , s = function() {
                var e, t = ve();
                return t === he.browser ? [t, (null == (e = (0,
                C.getLocation)()) ? void 0 : e.host) || "unknown"].join(":") : t
            }();
            return [[e, t].join("-"), [fe, r].join("-"), n, s].join("/")
        }
        function me(e) {
            var t = e.protocol
              , r = e.version
              , n = e.relayUrl
              , s = e.sdkVersion
              , i = e.auth
              , a = e.projectId
              , o = e.useOnCloseEvent
              , c = n.split("?")
              , u = {
                auth: i,
                ua: ge(t, r, s),
                projectId: a,
                useOnCloseEvent: o || void 0
            }
              , l = function(e, t) {
                var r = A.parse(e);
                return r = le(le({}, r), t),
                A.stringify(r)
            }(c[1] || "", u);
            return c[0] + "?" + l
        }
        function ye(e, t) {
            return e.filter((function(e) {
                return t.includes(e)
            }
            )).length === e.length
        }
        function be(e) {
            return Object.fromEntries(e.entries())
        }
        function ke(e) {
            return new Map(Object.entries(e))
        }
        function we() {
            var e, t, r, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : O.FIVE_MINUTES, s = arguments.length > 1 ? arguments[1] : void 0, i = (0,
            O.toMiliseconds)(n || O.FIVE_MINUTES);
            return {
                resolve: function(t) {
                    r && e && (clearTimeout(r),
                    e(t))
                },
                reject: function(e) {
                    r && t && (clearTimeout(r),
                    t(e))
                },
                done: function() {
                    return new Promise((function(n, a) {
                        r = setTimeout((function() {
                            a(new Error(s))
                        }
                        ), i),
                        e = n,
                        t = a
                    }
                    ))
                }
            }
        }
        function xe(e, t, r) {
            return new Promise(function() {
                var i = (0,
                s.Z)((0,
                n.Z)().mark((function s(i, a) {
                    var o, c;
                    return (0,
                    n.Z)().wrap((function(n) {
                        for (; ; )
                            switch (n.prev = n.next) {
                            case 0:
                                return o = setTimeout((function() {
                                    return a(new Error(r))
                                }
                                ), t),
                                n.prev = 1,
                                n.next = 4,
                                e;
                            case 4:
                                c = n.sent,
                                i(c),
                                n.next = 11;
                                break;
                            case 8:
                                n.prev = 8,
                                n.t0 = n.catch(1),
                                a(n.t0);
                            case 11:
                                clearTimeout(o);
                            case 12:
                            case "end":
                                return n.stop()
                            }
                    }
                    ), s, null, [[1, 8]])
                }
                )));
                return function(e, t) {
                    return i.apply(this, arguments)
                }
            }())
        }
        function Ee(e, t) {
            if ("string" == typeof t && t.startsWith("".concat(e, ":")))
                return t;
            if ("topic" === e.toLowerCase()) {
                if ("string" != typeof t)
                    throw new Error('Value must be "string" for expirer target type: topic');
                return "topic:".concat(t)
            }
            if ("id" === e.toLowerCase()) {
                if ("number" != typeof t)
                    throw new Error('Value must be "number" for expirer target type: id');
                return "id:".concat(t)
            }
            throw new Error("Unknown expirer target type: ".concat(e))
        }
        function Ze(e) {
            var t = e.split(":")
              , r = (0,
            o.Z)(t, 2)
              , n = r[0]
              , s = r[1]
              , i = {
                id: void 0,
                topic: void 0
            };
            if ("topic" === n && "string" == typeof s)
                i.topic = s;
            else {
                if ("id" !== n || !Number.isInteger(Number(s)))
                    throw new Error("Invalid target, expected id:number or topic:string, got ".concat(n, ":").concat(s));
                i.id = Number(s)
            }
            return i
        }
        function _e(e, t) {
            return (0,
            O.fromMiliseconds)((t || Date.now()) + (0,
            O.toMiliseconds)(e))
        }
        function Pe(e) {
            return Date.now() >= (0,
            O.toMiliseconds)(e)
        }
        function Ie(e, t) {
            return "".concat(e).concat(t ? ":".concat(t) : "")
        }
        function Ne(e) {
            return (null === e || void 0 === e ? void 0 : e.relay) || {
                protocol: "irn"
            }
        }
        function Re(e) {
            var t = D.RELAY_JSONRPC[e];
            if (typeof t > "u")
                throw new Error("Relay Protocol not supported: ".concat(e));
            return t
        }
        var Se = Object.defineProperty
          , Te = Object.getOwnPropertySymbols
          , Oe = Object.prototype.hasOwnProperty
          , Ce = Object.prototype.propertyIsEnumerable
          , Le = function(e, t, r) {
            return t in e ? Se(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r
            }) : e[t] = r
        };
        function Ae(e) {
            var t = {}
              , r = "relay" + (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "-");
            return Object.keys(e).forEach((function(n) {
                if (n.startsWith(r)) {
                    var s = n.replace(r, "")
                      , i = e[n];
                    t[s] = i
                }
            }
            )),
            t
        }
        function De(e) {
            var t = e.indexOf(":")
              , r = -1 !== e.indexOf("?") ? e.indexOf("?") : void 0
              , n = e.substring(0, t)
              , s = e.substring(t + 1, r).split("@")
              , i = typeof r < "u" ? e.substring(r) : ""
              , a = A.parse(i);
            return {
                protocol: n,
                topic: s[0],
                version: parseInt(s[1], 10),
                symKey: a.symKey,
                relay: Ae(a)
            }
        }
        function Be(e) {
            return "".concat(e.protocol, ":").concat(e.topic, "@").concat(e.version, "?") + A.stringify(function(e, t) {
                for (var r in t || (t = {}))
                    Oe.call(t, r) && Le(e, r, t[r]);
                if (Te) {
                    var n, s = (0,
                    u.Z)(Te(t));
                    try {
                        for (s.s(); !(n = s.n()).done; )
                            r = n.value,
                            Ce.call(t, r) && Le(e, r, t[r])
                    } catch (i) {
                        s.e(i)
                    } finally {
                        s.f()
                    }
                }
                return e
            }({
                symKey: e.symKey
            }, function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "-"
                  , r = {};
                return Object.keys(e).forEach((function(n) {
                    var s = "relay" + t + n;
                    e[n] && (r[s] = e[n])
                }
                )),
                r
            }(e.relay)))
        }
        function qe(e) {
            var t = [];
            return e.forEach((function(e) {
                var r = e.split(":")
                  , n = (0,
                o.Z)(r, 2)
                  , s = n[0]
                  , i = n[1];
                t.push("".concat(s, ":").concat(i))
            }
            )),
            t
        }
        function Ue(e, t) {
            var r = rt(e, t);
            if (r)
                throw new Error(r.message);
            for (var n = {}, s = 0, i = Object.entries(e); s < i.length; s++) {
                var a = (0,
                o.Z)(i[s], 2)
                  , c = a[0]
                  , u = a[1];
                n[c] = {
                    methods: u.methods,
                    events: u.events,
                    chains: u.accounts.map((function(e) {
                        return "".concat(e.split(":")[0], ":").concat(e.split(":")[1])
                    }
                    ))
                }
            }
            return n
        }
        var je = {
            INVALID_METHOD: {
                message: "Invalid method.",
                code: 1001
            },
            INVALID_EVENT: {
                message: "Invalid event.",
                code: 1002
            },
            INVALID_UPDATE_REQUEST: {
                message: "Invalid update request.",
                code: 1003
            },
            INVALID_EXTEND_REQUEST: {
                message: "Invalid extend request.",
                code: 1004
            },
            INVALID_SESSION_SETTLE_REQUEST: {
                message: "Invalid session settle request.",
                code: 1005
            },
            UNAUTHORIZED_METHOD: {
                message: "Unauthorized method.",
                code: 3001
            },
            UNAUTHORIZED_EVENT: {
                message: "Unauthorized event.",
                code: 3002
            },
            UNAUTHORIZED_UPDATE_REQUEST: {
                message: "Unauthorized update request.",
                code: 3003
            },
            UNAUTHORIZED_EXTEND_REQUEST: {
                message: "Unauthorized extend request.",
                code: 3004
            },
            USER_REJECTED: {
                message: "User rejected.",
                code: 5e3
            },
            USER_REJECTED_CHAINS: {
                message: "User rejected chains.",
                code: 5001
            },
            USER_REJECTED_METHODS: {
                message: "User rejected methods.",
                code: 5002
            },
            USER_REJECTED_EVENTS: {
                message: "User rejected events.",
                code: 5003
            },
            UNSUPPORTED_CHAINS: {
                message: "Unsupported chains.",
                code: 5100
            },
            UNSUPPORTED_METHODS: {
                message: "Unsupported methods.",
                code: 5101
            },
            UNSUPPORTED_EVENTS: {
                message: "Unsupported events.",
                code: 5102
            },
            UNSUPPORTED_ACCOUNTS: {
                message: "Unsupported accounts.",
                code: 5103
            },
            UNSUPPORTED_NAMESPACE_KEY: {
                message: "Unsupported namespace key.",
                code: 5104
            },
            USER_DISCONNECTED: {
                message: "User disconnected.",
                code: 6e3
            },
            SESSION_SETTLEMENT_FAILED: {
                message: "Session settlement failed.",
                code: 7e3
            },
            WC_METHOD_UNSUPPORTED: {
                message: "Unsupported wc_ method.",
                code: 10001
            }
        }
          , Me = {
            NOT_INITIALIZED: {
                message: "Not initialized.",
                code: 1
            },
            NO_MATCHING_KEY: {
                message: "No matching key.",
                code: 2
            },
            RESTORE_WILL_OVERRIDE: {
                message: "Restore will override.",
                code: 3
            },
            RESUBSCRIBED: {
                message: "Resubscribed.",
                code: 4
            },
            MISSING_OR_INVALID: {
                message: "Missing or invalid.",
                code: 5
            },
            EXPIRED: {
                message: "Expired.",
                code: 6
            },
            UNKNOWN_TYPE: {
                message: "Unknown type.",
                code: 7
            },
            MISMATCHED_TOPIC: {
                message: "Mismatched topic.",
                code: 8
            },
            NON_CONFORMING_NAMESPACES: {
                message: "Non conforming namespaces.",
                code: 9
            }
        };
        function ze(e, t) {
            var r = Me[e]
              , n = r.message
              , s = r.code;
            return {
                message: t ? "".concat(n, " ").concat(t) : n,
                code: s
            }
        }
        function He(e, t) {
            var r = je[e]
              , n = r.message
              , s = r.code;
            return {
                message: t ? "".concat(n, " ").concat(t) : n,
                code: s
            }
        }
        function Ke(e, t) {
            return !!Array.isArray(e) && (!(typeof t < "u" && e.length) || e.every(t))
        }
        function Fe(e) {
            return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length
        }
        function Ve(e) {
            return typeof e > "u"
        }
        function Ge(e, t) {
            return !(!t || !Ve(e)) || "string" == typeof e && Boolean(e.trim().length)
        }
        function Je(e, t) {
            return !(!t || !Ve(e)) || "number" == typeof e && !isNaN(e)
        }
        function We(e) {
            return !(!Ge(e, !1) || !e.includes(":")) && 2 === e.split(":").length
        }
        function Ye(e) {
            var t;
            return null == (t = null === e || void 0 === e ? void 0 : e.proposer) ? void 0 : t.publicKey
        }
        function $e(e) {
            return null === e || void 0 === e ? void 0 : e.topic
        }
        function Xe(e) {
            var t = !0;
            return Ke(e) ? e.length && (t = e.every((function(e) {
                return Ge(e, !1)
            }
            ))) : t = !1,
            t
        }
        function Qe(e, t) {
            var r = null;
            return Object.entries(e).forEach((function(e) {
                var n = (0,
                o.Z)(e, 2)
                  , s = n[0]
                  , i = n[1];
                if (!r) {
                    var a = function(e, t, r) {
                        var n = null;
                        return Ke(t) ? t.forEach((function(t) {
                            n || (!We(t) || !t.includes(e)) && (n = He("UNSUPPORTED_CHAINS", "".concat(r, ", chain ").concat(t, ' should be a string and conform to "namespace:chainId" format')))
                        }
                        )) : n = He("UNSUPPORTED_CHAINS", "".concat(r, ", chains ").concat(t, ' should be an array of strings conforming to "namespace:chainId" format')),
                        n
                    }(s, q(s, i), "".concat(t, " requiredNamespace"));
                    a && (r = a)
                }
            }
            )),
            r
        }
        function et(e, t) {
            var r = null;
            return Ke(e) ? e.forEach((function(e) {
                r || function(e) {
                    if (Ge(e, !1) && e.includes(":")) {
                        var t = e.split(":");
                        if (3 === t.length) {
                            var r = t[0] + ":" + t[1];
                            return !!t[2] && We(r)
                        }
                    }
                    return !1
                }(e) || (r = He("UNSUPPORTED_ACCOUNTS", "".concat(t, ", account ").concat(e, ' should be a string and conform to "namespace:chainId:address" format')))
            }
            )) : r = He("UNSUPPORTED_ACCOUNTS", "".concat(t, ', accounts should be an array of strings conforming to "namespace:chainId:address" format')),
            r
        }
        function tt(e, t) {
            var r = null;
            return Object.values(e).forEach((function(e) {
                if (!r) {
                    var n = function(e, t) {
                        var r = null;
                        return Xe(null === e || void 0 === e ? void 0 : e.methods) ? Xe(null === e || void 0 === e ? void 0 : e.events) || (r = He("UNSUPPORTED_EVENTS", "".concat(t, ", events should be an array of strings or empty array for no events"))) : r = He("UNSUPPORTED_METHODS", "".concat(t, ", methods should be an array of strings or empty array for no methods")),
                        r
                    }(e, "".concat(t, ", namespace"));
                    n && (r = n)
                }
            }
            )),
            r
        }
        function rt(e, t) {
            var r = null;
            if (e && Fe(e)) {
                var n = tt(e, t);
                n && (r = n);
                var s = function(e, t) {
                    var r = null;
                    return Object.values(e).forEach((function(e) {
                        if (!r) {
                            var n = et(null === e || void 0 === e ? void 0 : e.accounts, "".concat(t, " namespace"));
                            n && (r = n)
                        }
                    }
                    )),
                    r
                }(e, t);
                s && (r = s)
            } else
                r = ze("MISSING_OR_INVALID", "".concat(t, ", namespaces should be an object with data"));
            return r
        }
        function nt(e) {
            return Ge(e.protocol, !0)
        }
        function st(e, t) {
            var r = !1;
            return t && !e ? r = !0 : e && Ke(e) && e.length && e.forEach((function(e) {
                r = nt(e)
            }
            )),
            r
        }
        function it(e) {
            return "number" == typeof e
        }
        function at(e) {
            return typeof e < "u" && null !== typeof e
        }
        function ot(e) {
            return !(!e || "object" != typeof e || !e.code || !Je(e.code, !1) || !e.message || !Ge(e.message, !1))
        }
        function ct(e) {
            return !(Ve(e) || !Ge(e.method, !1))
        }
        function ut(e) {
            return !(Ve(e) || Ve(e.result) && Ve(e.error) || !Je(e.id, !1) || !Ge(e.jsonrpc, !1))
        }
        function lt(e) {
            return !(Ve(e) || !Ge(e.name, !1))
        }
        function pt(e, t) {
            return !(!We(t) || !function(e) {
                var t = [];
                return Object.values(e).forEach((function(e) {
                    t.push.apply(t, (0,
                    c.Z)(qe(e.accounts)))
                }
                )),
                t
            }(e).includes(t))
        }
        function ht(e, t, r) {
            return !!Ge(r, !1) && function(e, t) {
                var r = [];
                return Object.values(e).forEach((function(e) {
                    qe(e.accounts).includes(t) && r.push.apply(r, (0,
                    c.Z)(e.methods))
                }
                )),
                r
            }(e, t).includes(r)
        }
        function ft(e, t, r) {
            return !!Ge(r, !1) && function(e, t) {
                var r = [];
                return Object.values(e).forEach((function(e) {
                    qe(e.accounts).includes(t) && r.push.apply(r, (0,
                    c.Z)(e.events))
                }
                )),
                r
            }(e, t).includes(r)
        }
        function dt(e, t, r) {
            var n = null
              , s = function(e) {
                var t = {};
                return Object.keys(e).forEach((function(r) {
                    var n;
                    r.includes(":") ? t[r] = e[r] : null == (n = e[r].chains) || n.forEach((function(n) {
                        t[n] = {
                            methods: e[r].methods,
                            events: e[r].events
                        }
                    }
                    ))
                }
                )),
                t
            }(e)
              , i = function(e) {
                var t = {};
                return Object.keys(e).forEach((function(r) {
                    if (r.includes(":"))
                        t[r] = e[r];
                    else {
                        var n = qe(e[r].accounts);
                        null === n || void 0 === n || n.forEach((function(n) {
                            t[n] = {
                                accounts: e[r].accounts.filter((function(e) {
                                    return e.includes("".concat(n, ":"))
                                }
                                )),
                                methods: e[r].methods,
                                events: e[r].events
                            }
                        }
                        ))
                    }
                }
                )),
                t
            }(t)
              , a = Object.keys(s)
              , o = Object.keys(i)
              , c = vt(Object.keys(e))
              , u = vt(Object.keys(t))
              , l = c.filter((function(e) {
                return !u.includes(e)
            }
            ));
            return l.length && (n = ze("NON_CONFORMING_NAMESPACES", "".concat(r, " namespaces keys don't satisfy requiredNamespaces.\n      Required: ").concat(l.toString(), "\n      Received: ").concat(Object.keys(t).toString()))),
            ye(a, o) || (n = ze("NON_CONFORMING_NAMESPACES", "".concat(r, " namespaces chains don't satisfy required namespaces.\n      Required: ").concat(a.toString(), "\n      Approved: ").concat(o.toString()))),
            Object.keys(t).forEach((function(e) {
                if (e.includes(":") && !n) {
                    var s = qe(t[e].accounts);
                    s.includes(e) || (n = ze("NON_CONFORMING_NAMESPACES", "".concat(r, " namespaces accounts don't satisfy namespace accounts for ").concat(e, "\n        Required: ").concat(e, "\n        Approved: ").concat(s.toString())))
                }
            }
            )),
            a.forEach((function(e) {
                n || (ye(s[e].methods, i[e].methods) ? ye(s[e].events, i[e].events) || (n = ze("NON_CONFORMING_NAMESPACES", "".concat(r, " namespaces events don't satisfy namespace events for ").concat(e))) : n = ze("NON_CONFORMING_NAMESPACES", "".concat(r, " namespaces methods don't satisfy namespace methods for ").concat(e)))
            }
            )),
            n
        }
        function vt(e) {
            return (0,
            c.Z)(new Set(e.map((function(e) {
                return e.includes(":") ? e.split(":")[0] : e
            }
            ))))
        }
        function gt(e, t) {
            return Je(e, !1) && e <= t.max && e >= t.min
        }
        var mt = r(31567)
          , yt = function(e) {
            (0,
            f.Z)(r, e);
            var t = (0,
            d.Z)(r);
            function r(e) {
                var n;
                return (0,
                i.Z)(this, r),
                (n = t.call(this, e)).events = new m.EventEmitter,
                n.hasRegisteredEventListeners = !1,
                n.connection = n.setConnection(e),
                n.connection.connected && n.registerEventListeners(),
                n
            }
            return (0,
            a.Z)(r, [{
                key: "connect",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t, r = arguments;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return t = r.length > 0 && void 0 !== r[0] ? r[0] : this.connection,
                                    e.next = 3,
                                    this.open(t);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "disconnect",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.close();
                                case 2:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "on",
                value: function(e, t) {
                    this.events.on(e, t)
                }
            }, {
                key: "once",
                value: function(e, t) {
                    this.events.once(e, t)
                }
            }, {
                key: "off",
                value: function(e, t) {
                    this.events.off(e, t)
                }
            }, {
                key: "removeListener",
                value: function(e, t) {
                    this.events.removeListener(e, t)
                }
            }, {
                key: "request",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.abrupt("return", this.requestStrict((0,
                                    mt.formatJsonRpcRequest)(t.method, t.params || []), r));
                                case 1:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "requestStrict",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var i = this;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.abrupt("return", new Promise(function() {
                                        var e = (0,
                                        s.Z)((0,
                                        n.Z)().mark((function e(s, a) {
                                            return (0,
                                            n.Z)().wrap((function(e) {
                                                for (; ; )
                                                    switch (e.prev = e.next) {
                                                    case 0:
                                                        if (i.connection.connected) {
                                                            e.next = 9;
                                                            break
                                                        }
                                                        return e.prev = 1,
                                                        e.next = 4,
                                                        i.open();
                                                    case 4:
                                                        e.next = 9;
                                                        break;
                                                    case 6:
                                                        e.prev = 6,
                                                        e.t0 = e.catch(1),
                                                        a(e.t0);
                                                    case 9:
                                                        return i.events.on("".concat(t.id), (function(e) {
                                                            (0,
                                                            mt.isJsonRpcError)(e) ? a(e.error) : s(e.result)
                                                        }
                                                        )),
                                                        e.prev = 10,
                                                        e.next = 13,
                                                        i.connection.send(t, r);
                                                    case 13:
                                                        e.next = 18;
                                                        break;
                                                    case 15:
                                                        e.prev = 15,
                                                        e.t1 = e.catch(10),
                                                        a(e.t1);
                                                    case 18:
                                                    case "end":
                                                        return e.stop()
                                                    }
                                            }
                                            ), e, null, [[1, 6], [10, 15]])
                                        }
                                        )));
                                        return function(t, r) {
                                            return e.apply(this, arguments)
                                        }
                                    }()));
                                case 1:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "setConnection",
                value: function() {
                    return arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.connection
                }
            }, {
                key: "onPayload",
                value: function(e) {
                    this.events.emit("payload", e),
                    (0,
                    mt.isJsonRpcResponse)(e) ? this.events.emit("".concat(e.id), e) : this.events.emit("message", {
                        type: e.method,
                        data: e.params
                    })
                }
            }, {
                key: "onClose",
                value: function(e) {
                    e && 3e3 === e.code && this.events.emit("error", new Error("WebSocket connection closed abnormally with code: ".concat(e.code, " ").concat(e.reason ? "(".concat(e.reason, ")") : ""))),
                    this.events.emit("disconnect")
                }
            }, {
                key: "open",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t, r = arguments;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (t = r.length > 0 && void 0 !== r[0] ? r[0] : this.connection,
                                    this.connection !== t || !this.connection.connected) {
                                        e.next = 3;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 3:
                                    if (this.connection.connected && this.close(),
                                    "string" !== typeof t) {
                                        e.next = 8;
                                        break
                                    }
                                    return e.next = 7,
                                    this.connection.open(t);
                                case 7:
                                    t = this.connection;
                                case 8:
                                    return this.connection = this.setConnection(t),
                                    e.next = 11,
                                    this.connection.open();
                                case 11:
                                    this.registerEventListeners(),
                                    this.events.emit("connect");
                                case 13:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "close",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.connection.close();
                                case 2:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "registerEventListeners",
                value: function() {
                    var e = this;
                    this.hasRegisteredEventListeners || (this.connection.on("payload", (function(t) {
                        return e.onPayload(t)
                    }
                    )),
                    this.connection.on("close", (function(t) {
                        return e.onClose(t)
                    }
                    )),
                    this.connection.on("error", (function(t) {
                        return e.events.emit("error", t)
                    }
                    )),
                    this.connection.on("register_error", (function(t) {
                        return e.onClose()
                    }
                    )),
                    this.hasRegisteredEventListeners = !0)
                }
            }]),
            r
        }(mt.IJsonRpcProvider)
          , bt = "undefined" !== typeof r.g && "undefined" !== typeof r.g.WebSocket ? r.g.WebSocket : "undefined" !== typeof window && "undefined" !== typeof window.WebSocket ? window.WebSocket : r(78720)
          , kt = function() {
            function e(t) {
                if ((0,
                i.Z)(this, e),
                this.url = t,
                this.events = new m.EventEmitter,
                this.registering = !1,
                !(0,
                mt.isWsUrl)(t))
                    throw new Error("Provided URL is not compatible with WebSocket connection: ".concat(t));
                this.url = t
            }
            return (0,
            a.Z)(e, [{
                key: "connected",
                get: function() {
                    return "undefined" !== typeof this.socket
                }
            }, {
                key: "connecting",
                get: function() {
                    return this.registering
                }
            }, {
                key: "on",
                value: function(e, t) {
                    this.events.on(e, t)
                }
            }, {
                key: "once",
                value: function(e, t) {
                    this.events.once(e, t)
                }
            }, {
                key: "off",
                value: function(e, t) {
                    this.events.off(e, t)
                }
            }, {
                key: "removeListener",
                value: function(e, t) {
                    this.events.removeListener(e, t)
                }
            }, {
                key: "open",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t, r = arguments;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return t = r.length > 0 && void 0 !== r[0] ? r[0] : this.url,
                                    e.next = 3,
                                    this.register(t);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "close",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t = this;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.abrupt("return", new Promise((function(e, r) {
                                        "undefined" !== typeof t.socket ? (t.socket.onclose = function(r) {
                                            t.onClose(r),
                                            e()
                                        }
                                        ,
                                        t.socket.close()) : r(new Error("Connection already closed"))
                                    }
                                    )));
                                case 1:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "send",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if ("undefined" !== typeof this.socket) {
                                        e.next = 4;
                                        break
                                    }
                                    return e.next = 3,
                                    this.register();
                                case 3:
                                    this.socket = e.sent;
                                case 4:
                                    try {
                                        this.socket.send((0,
                                        E.u)(t))
                                    } catch (r) {
                                        this.onError(t.id, r)
                                    }
                                case 5:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "register",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.url;
                    if (!(0,
                    mt.isWsUrl)(t))
                        throw new Error("Provided URL is not compatible with WebSocket connection: ".concat(t));
                    if (this.registering) {
                        var r = this.events.getMaxListeners();
                        return (this.events.listenerCount("register_error") >= r || this.events.listenerCount("open") >= r) && this.events.setMaxListeners(r + 1),
                        new Promise((function(t, r) {
                            e.events.once("register_error", (function(t) {
                                e.resetMaxListeners(),
                                r(t)
                            }
                            )),
                            e.events.once("open", (function() {
                                if (e.resetMaxListeners(),
                                "undefined" === typeof e.socket)
                                    return r(new Error("WebSocket connection is missing or invalid"));
                                t(e.socket)
                            }
                            ))
                        }
                        ))
                    }
                    return this.url = t,
                    this.registering = !0,
                    new Promise((function(r, n) {
                        var s = (0,
                        mt.isReactNative)() ? void 0 : {
                            rejectUnauthorized: !(0,
                            mt.isLocalhostUrl)(t)
                        }
                          , i = new bt(t,[],s);
                        "undefined" !== typeof window ? i.onerror = function(t) {
                            var r = t;
                            n(e.emitError(r.error))
                        }
                        : i.on("error", (function(t) {
                            n(e.emitError(t))
                        }
                        )),
                        i.onopen = function() {
                            e.onOpen(i),
                            r(i)
                        }
                    }
                    ))
                }
            }, {
                key: "onOpen",
                value: function(e) {
                    var t = this;
                    e.onmessage = function(e) {
                        return t.onPayload(e)
                    }
                    ,
                    e.onclose = function(e) {
                        return t.onClose(e)
                    }
                    ,
                    this.socket = e,
                    this.registering = !1,
                    this.events.emit("open")
                }
            }, {
                key: "onClose",
                value: function(e) {
                    this.socket = void 0,
                    this.registering = !1,
                    this.events.emit("close", e)
                }
            }, {
                key: "onPayload",
                value: function(e) {
                    if ("undefined" !== typeof e.data) {
                        var t = "string" === typeof e.data ? (0,
                        E.D)(e.data) : e.data;
                        this.events.emit("payload", t)
                    }
                }
            }, {
                key: "onError",
                value: function(e, t) {
                    var r = this.parseError(t)
                      , n = r.message || r.toString()
                      , s = (0,
                    mt.formatJsonRpcError)(e, n);
                    this.events.emit("payload", s)
                }
            }, {
                key: "parseError",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.url;
                    return (0,
                    mt.parseConnectionError)(e, t, "WS")
                }
            }, {
                key: "resetMaxListeners",
                value: function() {
                    this.events.getMaxListeners() > 10 && this.events.setMaxListeners(10)
                }
            }, {
                key: "emitError",
                value: function(e) {
                    var t = this.parseError(new Error((null === e || void 0 === e ? void 0 : e.message) || "WebSocket connection failed for URL: ".concat(this.url)));
                    return this.events.emit("register_error", t),
                    t
                }
            }]),
            e
        }()
          , wt = kt
          , xt = r(23108)
          , Et = r.n(xt);
        var Zt = function(e, t) {
            if (e.length >= 255)
                throw new TypeError("Alphabet too long");
            for (var r = new Uint8Array(256), n = 0; n < r.length; n++)
                r[n] = 255;
            for (var s = 0; s < e.length; s++) {
                var i = e.charAt(s)
                  , a = i.charCodeAt(0);
                if (255 !== r[a])
                    throw new TypeError(i + " is ambiguous");
                r[a] = s
            }
            var o = e.length
              , c = e.charAt(0)
              , u = Math.log(o) / Math.log(256)
              , l = Math.log(256) / Math.log(o);
            function p(e) {
                if ("string" != typeof e)
                    throw new TypeError("Expected String");
                if (0 === e.length)
                    return new Uint8Array;
                var t = 0;
                if (" " !== e[t]) {
                    for (var n = 0, s = 0; e[t] === c; )
                        n++,
                        t++;
                    for (var i = (e.length - t) * u + 1 >>> 0, a = new Uint8Array(i); e[t]; ) {
                        var l = r[e.charCodeAt(t)];
                        if (255 === l)
                            return;
                        for (var p = 0, h = i - 1; (0 !== l || p < s) && -1 !== h; h--,
                        p++)
                            l += o * a[h] >>> 0,
                            a[h] = l % 256 >>> 0,
                            l = l / 256 >>> 0;
                        if (0 !== l)
                            throw new Error("Non-zero carry");
                        s = p,
                        t++
                    }
                    if (" " !== e[t]) {
                        for (var f = i - s; f !== i && 0 === a[f]; )
                            f++;
                        for (var d = new Uint8Array(n + (i - f)), v = n; f !== i; )
                            d[v++] = a[f++];
                        return d
                    }
                }
            }
            return {
                encode: function(t) {
                    if (t instanceof Uint8Array || (ArrayBuffer.isView(t) ? t = new Uint8Array(t.buffer,t.byteOffset,t.byteLength) : Array.isArray(t) && (t = Uint8Array.from(t))),
                    !(t instanceof Uint8Array))
                        throw new TypeError("Expected Uint8Array");
                    if (0 === t.length)
                        return "";
                    for (var r = 0, n = 0, s = 0, i = t.length; s !== i && 0 === t[s]; )
                        s++,
                        r++;
                    for (var a = (i - s) * l + 1 >>> 0, u = new Uint8Array(a); s !== i; ) {
                        for (var p = t[s], h = 0, f = a - 1; (0 !== p || h < n) && -1 !== f; f--,
                        h++)
                            p += 256 * u[f] >>> 0,
                            u[f] = p % o >>> 0,
                            p = p / o >>> 0;
                        if (0 !== p)
                            throw new Error("Non-zero carry");
                        n = h,
                        s++
                    }
                    for (var d = a - n; d !== a && 0 === u[d]; )
                        d++;
                    for (var v = c.repeat(r); d < a; ++d)
                        v += e.charAt(u[d]);
                    return v
                },
                decodeUnsafe: p,
                decode: function(e) {
                    var r = p(e);
                    if (r)
                        return r;
                    throw new Error("Non-".concat(t, " character"))
                }
            }
        }
          , _t = Zt
          , Pt = function(e) {
            if (e instanceof Uint8Array && "Uint8Array" === e.constructor.name)
                return e;
            if (e instanceof ArrayBuffer)
                return new Uint8Array(e);
            if (ArrayBuffer.isView(e))
                return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);
            throw new Error("Unknown type, must be binary type")
        }
          , It = function() {
            function e(t, r, n) {
                (0,
                i.Z)(this, e),
                this.name = t,
                this.prefix = r,
                this.baseEncode = n
            }
            return (0,
            a.Z)(e, [{
                key: "encode",
                value: function(e) {
                    if (e instanceof Uint8Array)
                        return "".concat(this.prefix).concat(this.baseEncode(e));
                    throw Error("Unknown type, must be binary type")
                }
            }]),
            e
        }()
          , Nt = function() {
            function e(t, r, n) {
                if ((0,
                i.Z)(this, e),
                this.name = t,
                this.prefix = r,
                void 0 === r.codePointAt(0))
                    throw new Error("Invalid prefix character");
                this.prefixCodePoint = r.codePointAt(0),
                this.baseDecode = n
            }
            return (0,
            a.Z)(e, [{
                key: "decode",
                value: function(e) {
                    if ("string" == typeof e) {
                        if (e.codePointAt(0) !== this.prefixCodePoint)
                            throw Error("Unable to decode multibase string ".concat(JSON.stringify(e), ", ").concat(this.name, " decoder only supports inputs prefixed with ").concat(this.prefix));
                        return this.baseDecode(e.slice(this.prefix.length))
                    }
                    throw Error("Can only multibase decode strings")
                }
            }, {
                key: "or",
                value: function(e) {
                    return St(this, e)
                }
            }]),
            e
        }()
          , Rt = function() {
            function e(t) {
                (0,
                i.Z)(this, e),
                this.decoders = t
            }
            return (0,
            a.Z)(e, [{
                key: "or",
                value: function(e) {
                    return St(this, e)
                }
            }, {
                key: "decode",
                value: function(e) {
                    var t = e[0]
                      , r = this.decoders[t];
                    if (r)
                        return r.decode(e);
                    throw RangeError("Unable to decode multibase string ".concat(JSON.stringify(e), ", only inputs prefixed with ").concat(Object.keys(this.decoders), " are supported"))
                }
            }]),
            e
        }()
          , St = function(e, t) {
            return new Rt((0,
            g.Z)((0,
            g.Z)({}, e.decoders || (0,
            v.Z)({}, e.prefix, e)), t.decoders || (0,
            v.Z)({}, t.prefix, t)))
        }
          , Tt = function() {
            function e(t, r, n, s) {
                (0,
                i.Z)(this, e),
                this.name = t,
                this.prefix = r,
                this.baseEncode = n,
                this.baseDecode = s,
                this.encoder = new It(t,r,n),
                this.decoder = new Nt(t,r,s)
            }
            return (0,
            a.Z)(e, [{
                key: "encode",
                value: function(e) {
                    return this.encoder.encode(e)
                }
            }, {
                key: "decode",
                value: function(e) {
                    return this.decoder.decode(e)
                }
            }]),
            e
        }()
          , Ot = function(e) {
            var t = e.name
              , r = e.prefix
              , n = e.encode
              , s = e.decode;
            return new Tt(t,r,n,s)
        }
          , Ct = function(e) {
            var t = e.prefix
              , r = e.name
              , n = e.alphabet
              , s = _t(n, r)
              , i = s.encode
              , a = s.decode;
            return Ot({
                prefix: t,
                name: r,
                encode: i,
                decode: function(e) {
                    return Pt(a(e))
                }
            })
        }
          , Lt = function(e) {
            var t = e.name
              , r = e.prefix
              , n = e.bitsPerChar
              , s = e.alphabet;
            return Ot({
                prefix: r,
                name: t,
                encode: function(e) {
                    return function(e, t, r) {
                        for (var n = "=" === t[t.length - 1], s = (1 << r) - 1, i = "", a = 0, o = 0, c = 0; c < e.length; ++c)
                            for (o = o << 8 | e[c],
                            a += 8; a > r; )
                                i += t[s & o >> (a -= r)];
                        if (a && (i += t[s & o << r - a]),
                        n)
                            for (; i.length * r & 7; )
                                i += "=";
                        return i
                    }(e, s, n)
                },
                decode: function(e) {
                    return function(e, t, r, n) {
                        for (var s = {}, i = 0; i < t.length; ++i)
                            s[t[i]] = i;
                        for (var a = e.length; "=" === e[a - 1]; )
                            --a;
                        for (var o = new Uint8Array(a * r / 8 | 0), c = 0, u = 0, l = 0, p = 0; p < a; ++p) {
                            var h = s[e[p]];
                            if (void 0 === h)
                                throw new SyntaxError("Non-".concat(n, " character"));
                            u = u << r | h,
                            (c += r) >= 8 && (c -= 8,
                            o[l++] = 255 & u >> c)
                        }
                        if (c >= r || 255 & u << 8 - c)
                            throw new SyntaxError("Unexpected end of data");
                        return o
                    }(e, s, n, t)
                }
            })
        }
          , At = Ot({
            prefix: "\0",
            name: "identity",
            encode: function(e) {
                return function(e) {
                    return (new TextDecoder).decode(e)
                }(e)
            },
            decode: function(e) {
                return function(e) {
                    return (new TextEncoder).encode(e)
                }(e)
            }
        })
          , Dt = Object.freeze({
            __proto__: null,
            identity: At
        })
          , Bt = Lt({
            prefix: "0",
            name: "base2",
            alphabet: "01",
            bitsPerChar: 1
        })
          , qt = Object.freeze({
            __proto__: null,
            base2: Bt
        })
          , Ut = Lt({
            prefix: "7",
            name: "base8",
            alphabet: "01234567",
            bitsPerChar: 3
        })
          , jt = Object.freeze({
            __proto__: null,
            base8: Ut
        })
          , Mt = Ct({
            prefix: "9",
            name: "base10",
            alphabet: "0123456789"
        })
          , zt = Object.freeze({
            __proto__: null,
            base10: Mt
        })
          , Ht = Lt({
            prefix: "f",
            name: "base16",
            alphabet: "0123456789abcdef",
            bitsPerChar: 4
        })
          , Kt = Lt({
            prefix: "F",
            name: "base16upper",
            alphabet: "0123456789ABCDEF",
            bitsPerChar: 4
        })
          , Ft = Object.freeze({
            __proto__: null,
            base16: Ht,
            base16upper: Kt
        })
          , Vt = Lt({
            prefix: "b",
            name: "base32",
            alphabet: "abcdefghijklmnopqrstuvwxyz234567",
            bitsPerChar: 5
        })
          , Gt = Lt({
            prefix: "B",
            name: "base32upper",
            alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
            bitsPerChar: 5
        })
          , Jt = Lt({
            prefix: "c",
            name: "base32pad",
            alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
            bitsPerChar: 5
        })
          , Wt = Lt({
            prefix: "C",
            name: "base32padupper",
            alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
            bitsPerChar: 5
        })
          , Yt = Lt({
            prefix: "v",
            name: "base32hex",
            alphabet: "0123456789abcdefghijklmnopqrstuv",
            bitsPerChar: 5
        })
          , $t = Lt({
            prefix: "V",
            name: "base32hexupper",
            alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
            bitsPerChar: 5
        })
          , Xt = Lt({
            prefix: "t",
            name: "base32hexpad",
            alphabet: "0123456789abcdefghijklmnopqrstuv=",
            bitsPerChar: 5
        })
          , Qt = Lt({
            prefix: "T",
            name: "base32hexpadupper",
            alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
            bitsPerChar: 5
        })
          , er = Lt({
            prefix: "h",
            name: "base32z",
            alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
            bitsPerChar: 5
        })
          , tr = Object.freeze({
            __proto__: null,
            base32: Vt,
            base32upper: Gt,
            base32pad: Jt,
            base32padupper: Wt,
            base32hex: Yt,
            base32hexupper: $t,
            base32hexpad: Xt,
            base32hexpadupper: Qt,
            base32z: er
        })
          , rr = Ct({
            prefix: "k",
            name: "base36",
            alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
        })
          , nr = Ct({
            prefix: "K",
            name: "base36upper",
            alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        })
          , sr = Object.freeze({
            __proto__: null,
            base36: rr,
            base36upper: nr
        })
          , ir = Ct({
            name: "base58btc",
            prefix: "z",
            alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
        })
          , ar = Ct({
            name: "base58flickr",
            prefix: "Z",
            alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
        })
          , or = Object.freeze({
            __proto__: null,
            base58btc: ir,
            base58flickr: ar
        })
          , cr = Lt({
            prefix: "m",
            name: "base64",
            alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
            bitsPerChar: 6
        })
          , ur = Lt({
            prefix: "M",
            name: "base64pad",
            alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
            bitsPerChar: 6
        })
          , lr = Lt({
            prefix: "u",
            name: "base64url",
            alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
            bitsPerChar: 6
        })
          , pr = Lt({
            prefix: "U",
            name: "base64urlpad",
            alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
            bitsPerChar: 6
        })
          , hr = Object.freeze({
            __proto__: null,
            base64: cr,
            base64pad: ur,
            base64url: lr,
            base64urlpad: pr
        })
          , fr = Array.from("\ud83d\ude80\ud83e\ude90\u2604\ud83d\udef0\ud83c\udf0c\ud83c\udf11\ud83c\udf12\ud83c\udf13\ud83c\udf14\ud83c\udf15\ud83c\udf16\ud83c\udf17\ud83c\udf18\ud83c\udf0d\ud83c\udf0f\ud83c\udf0e\ud83d\udc09\u2600\ud83d\udcbb\ud83d\udda5\ud83d\udcbe\ud83d\udcbf\ud83d\ude02\u2764\ud83d\ude0d\ud83e\udd23\ud83d\ude0a\ud83d\ude4f\ud83d\udc95\ud83d\ude2d\ud83d\ude18\ud83d\udc4d\ud83d\ude05\ud83d\udc4f\ud83d\ude01\ud83d\udd25\ud83e\udd70\ud83d\udc94\ud83d\udc96\ud83d\udc99\ud83d\ude22\ud83e\udd14\ud83d\ude06\ud83d\ude44\ud83d\udcaa\ud83d\ude09\u263a\ud83d\udc4c\ud83e\udd17\ud83d\udc9c\ud83d\ude14\ud83d\ude0e\ud83d\ude07\ud83c\udf39\ud83e\udd26\ud83c\udf89\ud83d\udc9e\u270c\u2728\ud83e\udd37\ud83d\ude31\ud83d\ude0c\ud83c\udf38\ud83d\ude4c\ud83d\ude0b\ud83d\udc97\ud83d\udc9a\ud83d\ude0f\ud83d\udc9b\ud83d\ude42\ud83d\udc93\ud83e\udd29\ud83d\ude04\ud83d\ude00\ud83d\udda4\ud83d\ude03\ud83d\udcaf\ud83d\ude48\ud83d\udc47\ud83c\udfb6\ud83d\ude12\ud83e\udd2d\u2763\ud83d\ude1c\ud83d\udc8b\ud83d\udc40\ud83d\ude2a\ud83d\ude11\ud83d\udca5\ud83d\ude4b\ud83d\ude1e\ud83d\ude29\ud83d\ude21\ud83e\udd2a\ud83d\udc4a\ud83e\udd73\ud83d\ude25\ud83e\udd24\ud83d\udc49\ud83d\udc83\ud83d\ude33\u270b\ud83d\ude1a\ud83d\ude1d\ud83d\ude34\ud83c\udf1f\ud83d\ude2c\ud83d\ude43\ud83c\udf40\ud83c\udf37\ud83d\ude3b\ud83d\ude13\u2b50\u2705\ud83e\udd7a\ud83c\udf08\ud83d\ude08\ud83e\udd18\ud83d\udca6\u2714\ud83d\ude23\ud83c\udfc3\ud83d\udc90\u2639\ud83c\udf8a\ud83d\udc98\ud83d\ude20\u261d\ud83d\ude15\ud83c\udf3a\ud83c\udf82\ud83c\udf3b\ud83d\ude10\ud83d\udd95\ud83d\udc9d\ud83d\ude4a\ud83d\ude39\ud83d\udde3\ud83d\udcab\ud83d\udc80\ud83d\udc51\ud83c\udfb5\ud83e\udd1e\ud83d\ude1b\ud83d\udd34\ud83d\ude24\ud83c\udf3c\ud83d\ude2b\u26bd\ud83e\udd19\u2615\ud83c\udfc6\ud83e\udd2b\ud83d\udc48\ud83d\ude2e\ud83d\ude46\ud83c\udf7b\ud83c\udf43\ud83d\udc36\ud83d\udc81\ud83d\ude32\ud83c\udf3f\ud83e\udde1\ud83c\udf81\u26a1\ud83c\udf1e\ud83c\udf88\u274c\u270a\ud83d\udc4b\ud83d\ude30\ud83e\udd28\ud83d\ude36\ud83e\udd1d\ud83d\udeb6\ud83d\udcb0\ud83c\udf53\ud83d\udca2\ud83e\udd1f\ud83d\ude41\ud83d\udea8\ud83d\udca8\ud83e\udd2c\u2708\ud83c\udf80\ud83c\udf7a\ud83e\udd13\ud83d\ude19\ud83d\udc9f\ud83c\udf31\ud83d\ude16\ud83d\udc76\ud83e\udd74\u25b6\u27a1\u2753\ud83d\udc8e\ud83d\udcb8\u2b07\ud83d\ude28\ud83c\udf1a\ud83e\udd8b\ud83d\ude37\ud83d\udd7a\u26a0\ud83d\ude45\ud83d\ude1f\ud83d\ude35\ud83d\udc4e\ud83e\udd32\ud83e\udd20\ud83e\udd27\ud83d\udccc\ud83d\udd35\ud83d\udc85\ud83e\uddd0\ud83d\udc3e\ud83c\udf52\ud83d\ude17\ud83e\udd11\ud83c\udf0a\ud83e\udd2f\ud83d\udc37\u260e\ud83d\udca7\ud83d\ude2f\ud83d\udc86\ud83d\udc46\ud83c\udfa4\ud83d\ude47\ud83c\udf51\u2744\ud83c\udf34\ud83d\udca3\ud83d\udc38\ud83d\udc8c\ud83d\udccd\ud83e\udd40\ud83e\udd22\ud83d\udc45\ud83d\udca1\ud83d\udca9\ud83d\udc50\ud83d\udcf8\ud83d\udc7b\ud83e\udd10\ud83e\udd2e\ud83c\udfbc\ud83e\udd75\ud83d\udea9\ud83c\udf4e\ud83c\udf4a\ud83d\udc7c\ud83d\udc8d\ud83d\udce3\ud83e\udd42")
          , dr = fr.reduce((function(e, t, r) {
            return e[r] = t,
            e
        }
        ), [])
          , vr = fr.reduce((function(e, t, r) {
            return e[t.codePointAt(0)] = r,
            e
        }
        ), []);
        var gr = Ot({
            prefix: "\ud83d\ude80",
            name: "base256emoji",
            encode: function(e) {
                return e.reduce((function(e, t) {
                    return e += dr[t]
                }
                ), "")
            },
            decode: function(e) {
                var t, r = [], n = (0,
                u.Z)(e);
                try {
                    for (n.s(); !(t = n.n()).done; ) {
                        var s = t.value
                          , i = vr[s.codePointAt(0)];
                        if (void 0 === i)
                            throw new Error("Non-base256emoji character: ".concat(s));
                        r.push(i)
                    }
                } catch (a) {
                    n.e(a)
                } finally {
                    n.f()
                }
                return new Uint8Array(r)
            }
        })
          , mr = Object.freeze({
            __proto__: null,
            base256emoji: gr
        })
          , yr = function e(t, r, n) {
            r = r || [];
            for (var s = n = n || 0; t >= wr; )
                r[n++] = 255 & t | br,
                t /= 128;
            for (; t & kr; )
                r[n++] = 255 & t | br,
                t >>>= 7;
            return r[n] = 0 | t,
            e.bytes = n - s + 1,
            r
        }
          , br = 128
          , kr = -128
          , wr = Math.pow(2, 31);
        var xr = function e(t, r) {
            var n, s = 0, i = 0, a = r = r || 0, o = t.length;
            do {
                if (a >= o)
                    throw e.bytes = 0,
                    new RangeError("Could not decode varint");
                n = t[a++],
                s += i < 28 ? (n & Zr) << i : (n & Zr) * Math.pow(2, i),
                i += 7
            } while (n >= Er);
            return e.bytes = a - r,
            s
        }
          , Er = 128
          , Zr = 127;
        var _r = Math.pow(2, 7)
          , Pr = Math.pow(2, 14)
          , Ir = Math.pow(2, 21)
          , Nr = Math.pow(2, 28)
          , Rr = Math.pow(2, 35)
          , Sr = Math.pow(2, 42)
          , Tr = Math.pow(2, 49)
          , Or = Math.pow(2, 56)
          , Cr = Math.pow(2, 63)
          , Lr = {
            encode: yr,
            decode: xr,
            encodingLength: function(e) {
                return e < _r ? 1 : e < Pr ? 2 : e < Ir ? 3 : e < Nr ? 4 : e < Rr ? 5 : e < Sr ? 6 : e < Tr ? 7 : e < Or ? 8 : e < Cr ? 9 : 10
            }
        }
          , Ar = function(e, t) {
            var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
            return Lr.encode(e, t, r),
            t
        }
          , Dr = function(e) {
            return Lr.encodingLength(e)
        }
          , Br = function(e, t) {
            var r = t.byteLength
              , n = Dr(e)
              , s = n + Dr(r)
              , i = new Uint8Array(s + r);
            return Ar(e, i, 0),
            Ar(r, i, n),
            i.set(t, s),
            new qr(e,r,t,i)
        }
          , qr = (0,
        a.Z)((function e(t, r, n, s) {
            (0,
            i.Z)(this, e),
            this.code = t,
            this.size = r,
            this.digest = n,
            this.bytes = s
        }
        ))
          , Ur = function(e) {
            var t = e.name
              , r = e.code
              , n = e.encode;
            return new jr(t,r,n)
        }
          , jr = function() {
            function e(t, r, n) {
                (0,
                i.Z)(this, e),
                this.name = t,
                this.code = r,
                this.encode = n
            }
            return (0,
            a.Z)(e, [{
                key: "digest",
                value: function(e) {
                    var t = this;
                    if (e instanceof Uint8Array) {
                        var r = this.encode(e);
                        return r instanceof Uint8Array ? Br(this.code, r) : r.then((function(e) {
                            return Br(t.code, e)
                        }
                        ))
                    }
                    throw Error("Unknown type, must be binary type")
                }
            }]),
            e
        }()
          , Mr = function(e) {
            return function() {
                var t = (0,
                s.Z)((0,
                n.Z)().mark((function t(r) {
                    return (0,
                    n.Z)().wrap((function(t) {
                        for (; ; )
                            switch (t.prev = t.next) {
                            case 0:
                                return t.t0 = Uint8Array,
                                t.next = 3,
                                crypto.subtle.digest(e, r);
                            case 3:
                                return t.t1 = t.sent,
                                t.abrupt("return", new t.t0(t.t1));
                            case 5:
                            case "end":
                                return t.stop()
                            }
                    }
                    ), t)
                }
                )));
                return function(e) {
                    return t.apply(this, arguments)
                }
            }()
        }
          , zr = Ur({
            name: "sha2-256",
            code: 18,
            encode: Mr("SHA-256")
        })
          , Hr = Ur({
            name: "sha2-512",
            code: 19,
            encode: Mr("SHA-512")
        })
          , Kr = Object.freeze({
            __proto__: null,
            sha256: zr,
            sha512: Hr
        })
          , Fr = Pt
          , Vr = {
            code: 0,
            name: "identity",
            encode: Fr,
            digest: function(e) {
                return Br(0, Fr(e))
            }
        }
          , Gr = Object.freeze({
            __proto__: null,
            identity: Vr
        });
        new TextEncoder,
        new TextDecoder;
        var Jr = (0,
        g.Z)((0,
        g.Z)((0,
        g.Z)((0,
        g.Z)((0,
        g.Z)((0,
        g.Z)((0,
        g.Z)((0,
        g.Z)((0,
        g.Z)((0,
        g.Z)({}, Dt), qt), jt), zt), Ft), tr), sr), or), hr), mr);
        function Wr(e, t, r, n) {
            return {
                name: e,
                prefix: t,
                encoder: {
                    name: e,
                    prefix: t,
                    encode: r
                },
                decoder: {
                    decode: n
                }
            }
        }
        (0,
        g.Z)((0,
        g.Z)({}, Kr), Gr);
        var Yr = Wr("utf8", "u", (function(e) {
            return "u" + new TextDecoder("utf8").decode(e)
        }
        ), (function(e) {
            return (new TextEncoder).encode(e.substring(1))
        }
        ))
          , $r = Wr("ascii", "a", (function(e) {
            for (var t = "a", r = 0; r < e.length; r++)
                t += String.fromCharCode(e[r]);
            return t
        }
        ), (function(e) {
            for (var t = function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                return null != globalThis.Buffer && null != globalThis.Buffer.allocUnsafe ? globalThis.Buffer.allocUnsafe(e) : new Uint8Array(e)
            }((e = e.substring(1)).length), r = 0; r < e.length; r++)
                t[r] = e.charCodeAt(r);
            return t
        }
        ))
          , Xr = (0,
        g.Z)({
            utf8: Yr,
            "utf-8": Yr,
            hex: Jr.base16,
            latin1: $r,
            ascii: $r,
            binary: $r
        }, Jr);
        function Qr(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "utf8"
              , r = Xr[t];
            if (!r)
                throw new Error('Unsupported encoding "'.concat(t, '"'));
            return "utf8" !== t && "utf-8" !== t || null == globalThis.Buffer || null == globalThis.Buffer.from ? r.decoder.decode("".concat(r.prefix).concat(e)) : globalThis.Buffer.from(e, "utf8")
        }
        var en = "core"
          , tn = "".concat("wc", "@", 2, ":").concat(en, ":")
          , rn = "error"
          , nn = {
            database: ":memory:"
        }
          , sn = "client_ed25519_seed"
          , an = O.ONE_DAY
          , on = O.SIX_HOURS
          , cn = "wss://relay.walletconnect.com"
          , un = "relayer_message"
          , ln = "relayer_connect"
          , pn = "relayer_disconnect"
          , hn = "relayer_error"
          , fn = "relayer_connection_stalled"
          , dn = "relayer_transport_closed"
          , vn = "relayer_publish"
          , gn = "payload"
          , mn = "connect"
          , yn = "disconnect"
          , bn = "error"
          , kn = O.ONE_SECOND
          , wn = "subscription_created"
          , xn = "subscription_deleted"
          , En = "subscription_sync"
          , Zn = "subscription_resubscribed"
          , _n = (O.THIRTY_DAYS,
        1e3 * O.FIVE_SECONDS)
          , Pn = (O.THIRTY_DAYS,
        {
            wc_pairingDelete: {
                req: {
                    ttl: O.ONE_DAY,
                    prompt: !1,
                    tag: 1e3
                },
                res: {
                    ttl: O.ONE_DAY,
                    prompt: !1,
                    tag: 1001
                }
            },
            wc_pairingPing: {
                req: {
                    ttl: O.THIRTY_SECONDS,
                    prompt: !1,
                    tag: 1002
                },
                res: {
                    ttl: O.THIRTY_SECONDS,
                    prompt: !1,
                    tag: 1003
                }
            },
            unregistered_method: {
                req: {
                    ttl: O.ONE_DAY,
                    prompt: !1,
                    tag: 0
                },
                res: {
                    ttl: O.ONE_DAY,
                    prompt: !1,
                    tag: 0
                }
            }
        })
          , In = "history_created"
          , Nn = "history_updated"
          , Rn = "history_deleted"
          , Sn = "history_sync"
          , Tn = "expirer_created"
          , On = "expirer_deleted"
          , Cn = "expirer_expired"
          , Ln = "expirer_sync"
          , An = (O.ONE_DAY,
        function() {
            function e(t, r) {
                var a = this;
                (0,
                i.Z)(this, e),
                this.core = t,
                this.logger = r,
                this.keychain = new Map,
                this.name = "keychain",
                this.version = "0.3",
                this.initialized = !1,
                this.storagePrefix = tn,
                this.init = (0,
                s.Z)((0,
                n.Z)().mark((function e() {
                    var t;
                    return (0,
                    n.Z)().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (a.initialized) {
                                    e.next = 5;
                                    break
                                }
                                return e.next = 3,
                                a.getKeyChain();
                            case 3:
                                typeof (t = e.sent) < "u" && (a.keychain = t),
                                a.initialized = !0;
                            case 5:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                ))),
                this.has = function(e) {
                    return a.isInitialized(),
                    a.keychain.has(e)
                }
                ,
                this.set = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.isInitialized(),
                                    a.keychain.set(t, r),
                                    e.next = 4,
                                    a.persist();
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.get = function(e) {
                    a.isInitialized();
                    var t = a.keychain.get(e);
                    if (typeof t > "u") {
                        var r = ze("NO_MATCHING_KEY", "".concat(a.name, ": ").concat(e)).message;
                        throw new Error(r)
                    }
                    return t
                }
                ,
                this.del = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.isInitialized(),
                                    a.keychain.delete(t),
                                    e.next = 4,
                                    a.persist();
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.core = t,
                this.logger = (0,
                w.generateChildLogger)(r, this.name)
            }
            return (0,
            a.Z)(e, [{
                key: "context",
                get: function() {
                    return (0,
                    w.getLoggerContext)(this.logger)
                }
            }, {
                key: "storageKey",
                get: function() {
                    return this.storagePrefix + this.version + "//" + this.name
                }
            }, {
                key: "setKeyChain",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.core.storage.setItem(this.storageKey, be(t));
                                case 2:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getKeyChain",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.core.storage.getItem(this.storageKey);
                                case 2:
                                    return t = e.sent,
                                    e.abrupt("return", typeof t < "u" ? ke(t) : void 0);
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "persist",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.setKeyChain(this.keychain);
                                case 2:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "isInitialized",
                value: function() {
                    if (!this.initialized) {
                        var e = ze("NOT_INITIALIZED", this.name).message;
                        throw new Error(e)
                    }
                }
            }]),
            e
        }())
          , Dn = function() {
            function e(t, r, a) {
                var o = this;
                (0,
                i.Z)(this, e),
                this.core = t,
                this.logger = r,
                this.name = "crypto",
                this.initialized = !1,
                this.init = (0,
                s.Z)((0,
                n.Z)().mark((function e() {
                    return (0,
                    n.Z)().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (e.t0 = o.initialized,
                                e.t0) {
                                    e.next = 5;
                                    break
                                }
                                return e.next = 4,
                                o.keychain.init();
                            case 4:
                                o.initialized = !0;
                            case 5:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                ))),
                this.hasKeys = function(e) {
                    return o.isInitialized(),
                    o.keychain.has(e)
                }
                ,
                this.getClientId = (0,
                s.Z)((0,
                n.Z)().mark((function e() {
                    var t, r;
                    return (0,
                    n.Z)().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return o.isInitialized(),
                                e.next = 3,
                                o.getClientSeed();
                            case 3:
                                return t = e.sent,
                                r = Z.generateKeyPair(t),
                                e.abrupt("return", Z.encodeIss(r.publicKey));
                            case 6:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                ))),
                this.generateKeyPair = function() {
                    o.isInitialized();
                    var e = function() {
                        var e = R.Au();
                        return {
                            privateKey: (0,
                            S.BB)(e.secretKey, j),
                            publicKey: (0,
                            S.BB)(e.publicKey, j)
                        }
                    }();
                    return o.setPrivateKey(e.publicKey, e.privateKey)
                }
                ,
                this.signJWT = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, a;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return o.isInitialized(),
                                    e.next = 3,
                                    o.getClientSeed();
                                case 3:
                                    return r = e.sent,
                                    s = Z.generateKeyPair(r),
                                    i = W(),
                                    a = an,
                                    e.next = 9,
                                    Z.signJWT(i, t, a, s);
                                case 9:
                                    return e.abrupt("return", e.sent);
                                case 10:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.generateSharedKey = function(e, t, r) {
                    o.isInitialized();
                    var n = function(e, t) {
                        var r = R.gi((0,
                        S.mL)(e, j), (0,
                        S.mL)(t, j))
                          , n = new P.t(N.mE,r).expand(J);
                        return (0,
                        S.BB)(n, j)
                    }(o.getPrivateKey(e), t);
                    return o.setSymKey(n, r)
                }
                ,
                this.setSymKey = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return o.isInitialized(),
                                    s = r || Y(t),
                                    e.next = 4,
                                    o.keychain.set(s, t);
                                case 4:
                                    return e.abrupt("return", s);
                                case 5:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.deleteKeyPair = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return o.isInitialized(),
                                    e.next = 3,
                                    o.keychain.del(t);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.deleteSymKey = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return o.isInitialized(),
                                    e.next = 3,
                                    o.keychain.del(t);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.encode = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r, s) {
                        var i, a, c, u, l, p, h;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (o.isInitialized(),
                                    i = ne(s),
                                    a = (0,
                                    E.u)(r),
                                    !se(i)) {
                                        e.next = 7;
                                        break
                                    }
                                    return c = i.senderPublicKey,
                                    u = i.receiverPublicKey,
                                    e.next = 6,
                                    o.generateSharedKey(c, u);
                                case 6:
                                    t = e.sent;
                                case 7:
                                    return l = o.getSymKey(t),
                                    p = i.type,
                                    h = i.senderPublicKey,
                                    e.abrupt("return", Q({
                                        type: p,
                                        symKey: l,
                                        message: a,
                                        senderPublicKey: h
                                    }));
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r, n) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.decode = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r, s) {
                        var i, a, c, u, l;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (o.isInitialized(),
                                    !se(i = re(r, s))) {
                                        e.next = 7;
                                        break
                                    }
                                    return a = i.receiverPublicKey,
                                    c = i.senderPublicKey,
                                    e.next = 6,
                                    o.generateSharedKey(a, c);
                                case 6:
                                    t = e.sent;
                                case 7:
                                    return u = o.getSymKey(t),
                                    l = ee({
                                        symKey: u,
                                        encoded: r
                                    }),
                                    e.abrupt("return", (0,
                                    E.D)(l));
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r, n) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.core = t,
                this.logger = (0,
                w.generateChildLogger)(r, this.name),
                this.keychain = a || new An(this.core,this.logger)
            }
            return (0,
            a.Z)(e, [{
                key: "context",
                get: function() {
                    return (0,
                    w.getLoggerContext)(this.logger)
                }
            }, {
                key: "getPayloadType",
                value: function(e) {
                    return X(te(e).type)
                }
            }, {
                key: "setPrivateKey",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.keychain.set(t, r);
                                case 2:
                                    return e.abrupt("return", t);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getPrivateKey",
                value: function(e) {
                    return this.keychain.get(e)
                }
            }, {
                key: "getClientSeed",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    t = "",
                                    e.prev = 1,
                                    t = this.keychain.get(sn),
                                    e.next = 10;
                                    break;
                                case 5:
                                    return e.prev = 5,
                                    e.t0 = e.catch(1),
                                    t = W(),
                                    e.next = 10,
                                    this.keychain.set(sn, t);
                                case 10:
                                    return e.abrupt("return", Qr(t, "base16"));
                                case 11:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[1, 5]])
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getSymKey",
                value: function(e) {
                    return this.keychain.get(e)
                }
            }, {
                key: "isInitialized",
                value: function() {
                    if (!this.initialized) {
                        var e = ze("NOT_INITIALIZED", this.name).message;
                        throw new Error(e)
                    }
                }
            }]),
            e
        }()
          , Bn = function(e) {
            (0,
            f.Z)(r, e);
            var t = (0,
            d.Z)(r);
            function r(e, a) {
                var o;
                return (0,
                i.Z)(this, r),
                (o = t.call(this, e, a)).logger = e,
                o.core = a,
                o.messages = new Map,
                o.name = "messages",
                o.version = "0.3",
                o.initialized = !1,
                o.storagePrefix = tn,
                o.init = (0,
                s.Z)((0,
                n.Z)().mark((function e() {
                    var t;
                    return (0,
                    n.Z)().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (o.initialized) {
                                    e.next = 15;
                                    break
                                }
                                return o.logger.trace("Initialized"),
                                e.prev = 2,
                                e.next = 5,
                                o.getRelayerMessages();
                            case 5:
                                typeof (t = e.sent) < "u" && (o.messages = t),
                                o.logger.debug("Successfully Restored records for ".concat(o.name)),
                                o.logger.trace({
                                    type: "method",
                                    method: "restore",
                                    size: o.messages.size
                                }),
                                e.next = 12;
                                break;
                            case 9:
                                e.prev = 9,
                                e.t0 = e.catch(2),
                                o.logger.debug("Failed to Restore records for ".concat(o.name)),
                                o.logger.error(e.t0);
                            case 12:
                                return e.prev = 12,
                                o.initialized = !0,
                                e.finish(12);
                            case 15:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, null, [[2, 9, 12, 15]])
                }
                ))),
                o.set = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s, i;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (o.isInitialized(),
                                    s = $(r),
                                    typeof (i = o.messages.get(t)) > "u" && (i = {}),
                                    e.t0 = typeof i[s] < "u",
                                    e.t0) {
                                        e.next = 10;
                                        break
                                    }
                                    return i[s] = r,
                                    o.messages.set(t, i),
                                    e.next = 10,
                                    o.persist();
                                case 10:
                                    return e.abrupt("return", s);
                                case 11:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                o.get = function(e) {
                    o.isInitialized();
                    var t = o.messages.get(e);
                    return typeof t > "u" && (t = {}),
                    t
                }
                ,
                o.has = function(e, t) {
                    return o.isInitialized(),
                    typeof o.get(e)[$(t)] < "u"
                }
                ,
                o.del = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return o.isInitialized(),
                                    o.messages.delete(t),
                                    e.next = 4,
                                    o.persist();
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                o.logger = (0,
                w.generateChildLogger)(e, o.name),
                o.core = a,
                o
            }
            return (0,
            a.Z)(r, [{
                key: "context",
                get: function() {
                    return (0,
                    w.getLoggerContext)(this.logger)
                }
            }, {
                key: "storageKey",
                get: function() {
                    return this.storagePrefix + this.version + "//" + this.name
                }
            }, {
                key: "setRelayerMessages",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.core.storage.setItem(this.storageKey, be(t));
                                case 2:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getRelayerMessages",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.core.storage.getItem(this.storageKey);
                                case 2:
                                    return t = e.sent,
                                    e.abrupt("return", typeof t < "u" ? ke(t) : void 0);
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "persist",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.setRelayerMessages(this.messages);
                                case 2:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "isInitialized",
                value: function() {
                    if (!this.initialized) {
                        var e = ze("NOT_INITIALIZED", this.name).message;
                        throw new Error(e)
                    }
                }
            }]),
            r
        }(x.kZ)
          , qn = function(e) {
            (0,
            f.Z)(r, e);
            var t = (0,
            d.Z)(r);
            function r(e, a) {
                var o;
                return (0,
                i.Z)(this, r),
                (o = t.call(this, e, a)).relayer = e,
                o.logger = a,
                o.events = new m.EventEmitter,
                o.name = "publisher",
                o.queue = new Map,
                o.publishTimeout = 1e4,
                o.publish = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r, s) {
                        var i, a, c, u, l, p;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return o.logger.debug("Publishing Payload"),
                                    o.logger.trace({
                                        type: "method",
                                        method: "publish",
                                        params: {
                                            topic: t,
                                            message: r,
                                            opts: s
                                        }
                                    }),
                                    e.prev = 1,
                                    i = (null === s || void 0 === s ? void 0 : s.ttl) || on,
                                    a = Ne(s),
                                    c = (null === s || void 0 === s ? void 0 : s.prompt) || !1,
                                    u = (null === s || void 0 === s ? void 0 : s.tag) || 0,
                                    l = {
                                        topic: t,
                                        message: r,
                                        opts: {
                                            ttl: i,
                                            relay: a,
                                            prompt: c,
                                            tag: u
                                        }
                                    },
                                    p = $(r),
                                    o.queue.set(p, l),
                                    e.prev = 4,
                                    e.next = 7,
                                    xe(o.rpcPublish(t, r, i, a, c, u), o.publishTimeout);
                                case 7:
                                    return e.next = 9,
                                    e.sent;
                                case 9:
                                    o.relayer.events.emit(vn, l),
                                    e.next = 16;
                                    break;
                                case 12:
                                    return e.prev = 12,
                                    e.t0 = e.catch(4),
                                    o.logger.debug("Publishing Payload stalled"),
                                    o.relayer.events.emit(fn),
                                    e.abrupt("return");
                                case 16:
                                    o.onPublish(p, l),
                                    o.logger.debug("Successfully Published Payload"),
                                    o.logger.trace({
                                        type: "method",
                                        method: "publish",
                                        params: {
                                            topic: t,
                                            message: r,
                                            opts: s
                                        }
                                    }),
                                    e.next = 22;
                                    break;
                                case 19:
                                    throw e.prev = 19,
                                    e.t1 = e.catch(1),
                                    o.logger.debug("Failed to Publish Payload"),
                                    o.logger.error(e.t1),
                                    e.t1;
                                case 22:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[1, 19], [4, 12]])
                    }
                    )));
                    return function(t, r, n) {
                        return e.apply(this, arguments)
                    }
                }(),
                o.on = function(e, t) {
                    o.events.on(e, t)
                }
                ,
                o.once = function(e, t) {
                    o.events.once(e, t)
                }
                ,
                o.off = function(e, t) {
                    o.events.off(e, t)
                }
                ,
                o.removeListener = function(e, t) {
                    o.events.removeListener(e, t)
                }
                ,
                o.relayer = e,
                o.logger = (0,
                w.generateChildLogger)(a, o.name),
                o.registerEventListeners(),
                o
            }
            return (0,
            a.Z)(r, [{
                key: "context",
                get: function() {
                    return (0,
                    w.getLoggerContext)(this.logger)
                }
            }, {
                key: "rpcPublish",
                value: function(e, t, r, n, s, i) {
                    var a, o, c, u, l = {
                        method: Re(n.protocol).publish,
                        params: {
                            topic: e,
                            message: t,
                            ttl: r,
                            prompt: s,
                            tag: i
                        }
                    };
                    return Ve(null == (a = l.params) ? void 0 : a.prompt) && (null == (o = l.params) || delete o.prompt),
                    Ve(null == (c = l.params) ? void 0 : c.tag) && (null == (u = l.params) || delete u.tag),
                    this.logger.debug("Outgoing Relay Payload"),
                    this.logger.trace({
                        type: "message",
                        direction: "outgoing",
                        request: l
                    }),
                    this.relayer.request(l)
                }
            }, {
                key: "onPublish",
                value: function(e, t) {
                    this.queue.delete(e)
                }
            }, {
                key: "checkQueue",
                value: function() {
                    var e = this;
                    this.queue.forEach(function() {
                        var t = (0,
                        s.Z)((0,
                        n.Z)().mark((function t(r) {
                            var s, i, a;
                            return (0,
                            n.Z)().wrap((function(t) {
                                for (; ; )
                                    switch (t.prev = t.next) {
                                    case 0:
                                        return s = r.topic,
                                        i = r.message,
                                        a = r.opts,
                                        t.next = 3,
                                        e.publish(s, i, a);
                                    case 3:
                                    case "end":
                                        return t.stop()
                                    }
                            }
                            ), t)
                        }
                        )));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }())
                }
            }, {
                key: "registerEventListeners",
                value: function() {
                    var e = this;
                    this.relayer.core.heartbeat.on(k.HEARTBEAT_EVENTS.pulse, (function() {
                        e.checkQueue()
                    }
                    ))
                }
            }]),
            r
        }(x.z9)
          , Un = function() {
            function e() {
                var t = this;
                (0,
                i.Z)(this, e),
                this.map = new Map,
                this.set = function(e, r) {
                    var n = t.get(e);
                    t.exists(e, r) || t.map.set(e, [].concat((0,
                    c.Z)(n), [r]))
                }
                ,
                this.get = function(e) {
                    return t.map.get(e) || []
                }
                ,
                this.exists = function(e, r) {
                    return t.get(e).includes(r)
                }
                ,
                this.delete = function(e, r) {
                    if (typeof r > "u")
                        t.map.delete(e);
                    else if (t.map.has(e)) {
                        var n = t.get(e);
                        if (t.exists(e, r)) {
                            var s = n.filter((function(e) {
                                return e !== r
                            }
                            ));
                            s.length ? t.map.set(e, s) : t.map.delete(e)
                        }
                    }
                }
                ,
                this.clear = function() {
                    t.map.clear()
                }
            }
            return (0,
            a.Z)(e, [{
                key: "topics",
                get: function() {
                    return Array.from(this.map.keys())
                }
            }]),
            e
        }()
          , jn = Object.defineProperty
          , Mn = Object.defineProperties
          , zn = Object.getOwnPropertyDescriptors
          , Hn = Object.getOwnPropertySymbols
          , Kn = Object.prototype.hasOwnProperty
          , Fn = Object.prototype.propertyIsEnumerable
          , Vn = function(e, t, r) {
            return t in e ? jn(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r
            }) : e[t] = r
        }
          , Gn = function(e, t) {
            for (var r in t || (t = {}))
                Kn.call(t, r) && Vn(e, r, t[r]);
            if (Hn) {
                var n, s = (0,
                u.Z)(Hn(t));
                try {
                    for (s.s(); !(n = s.n()).done; ) {
                        r = n.value;
                        Fn.call(t, r) && Vn(e, r, t[r])
                    }
                } catch (i) {
                    s.e(i)
                } finally {
                    s.f()
                }
            }
            return e
        }
          , Jn = function(e, t) {
            return Mn(e, zn(t))
        }
          , Wn = function(e) {
            (0,
            f.Z)(r, e);
            var t = (0,
            d.Z)(r);
            function r(e, a) {
                var o;
                return (0,
                i.Z)(this, r),
                (o = t.call(this, e, a)).relayer = e,
                o.logger = a,
                o.subscriptions = new Map,
                o.topicMap = new Un,
                o.events = new m.EventEmitter,
                o.name = "subscription",
                o.version = "0.3",
                o.pending = new Map,
                o.cached = [],
                o.initialized = !1,
                o.pendingSubscriptionWatchLabel = "pending_sub_watch_label",
                o.pollingInterval = 20,
                o.storagePrefix = tn,
                o.subscribeTimeout = 1e4,
                o.restartInProgress = !1,
                o.batchSubscribeTopicsLimit = 500,
                o.init = (0,
                s.Z)((0,
                n.Z)().mark((function e() {
                    return (0,
                    n.Z)().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (e.t0 = o.initialized,
                                e.t0) {
                                    e.next = 10;
                                    break
                                }
                                return o.logger.trace("Initialized"),
                                e.next = 5,
                                o.restart();
                            case 5:
                                return o.registerEventListeners(),
                                o.onEnable(),
                                e.next = 9,
                                o.relayer.core.crypto.getClientId();
                            case 9:
                                o.clientId = e.sent;
                            case 10:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                ))),
                o.subscribe = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s, i, a;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    o.restartToComplete();
                                case 2:
                                    return o.isInitialized(),
                                    o.logger.debug("Subscribing Topic"),
                                    o.logger.trace({
                                        type: "method",
                                        method: "subscribe",
                                        params: {
                                            topic: t,
                                            opts: r
                                        }
                                    }),
                                    e.prev = 5,
                                    s = Ne(r),
                                    i = {
                                        topic: t,
                                        relay: s
                                    },
                                    o.pending.set(t, i),
                                    e.next = 10,
                                    o.rpcSubscribe(t, s);
                                case 10:
                                    return a = e.sent,
                                    e.abrupt("return", (o.onSubscribe(a, i),
                                    o.logger.debug("Successfully Subscribed Topic"),
                                    o.logger.trace({
                                        type: "method",
                                        method: "subscribe",
                                        params: {
                                            topic: t,
                                            opts: r
                                        }
                                    }),
                                    a));
                                case 14:
                                    throw e.prev = 14,
                                    e.t0 = e.catch(5),
                                    o.logger.debug("Failed to Subscribe Topic"),
                                    o.logger.error(e.t0),
                                    e.t0;
                                case 17:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[5, 14]])
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                o.unsubscribe = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    o.restartToComplete();
                                case 2:
                                    if (o.isInitialized(),
                                    !(typeof (null === r || void 0 === r ? void 0 : r.id) < "u")) {
                                        e.next = 8;
                                        break
                                    }
                                    return e.next = 6,
                                    o.unsubscribeById(t, r.id, r);
                                case 6:
                                    e.next = 10;
                                    break;
                                case 8:
                                    return e.next = 10,
                                    o.unsubscribeByTopic(t, r);
                                case 10:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                o.isSubscribed = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (!o.topics.includes(t)) {
                                        e.next = 4;
                                        break
                                    }
                                    e.t0 = !0,
                                    e.next = 7;
                                    break;
                                case 4:
                                    return e.next = 6,
                                    new Promise((function(e, r) {
                                        var n = new O.Watch;
                                        n.start(o.pendingSubscriptionWatchLabel);
                                        var s = setInterval((function() {
                                            !o.pending.has(t) && o.topics.includes(t) && (clearInterval(s),
                                            n.stop(o.pendingSubscriptionWatchLabel),
                                            e(!0)),
                                            n.elapsed(o.pendingSubscriptionWatchLabel) >= _n && (clearInterval(s),
                                            n.stop(o.pendingSubscriptionWatchLabel),
                                            r(!1))
                                        }
                                        ), o.pollingInterval)
                                    }
                                    ));
                                case 6:
                                    e.t0 = e.sent;
                                case 7:
                                    return e.abrupt("return", e.t0);
                                case 8:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                o.on = function(e, t) {
                    o.events.on(e, t)
                }
                ,
                o.once = function(e, t) {
                    o.events.once(e, t)
                }
                ,
                o.off = function(e, t) {
                    o.events.off(e, t)
                }
                ,
                o.removeListener = function(e, t) {
                    o.events.removeListener(e, t)
                }
                ,
                o.restart = (0,
                s.Z)((0,
                n.Z)().mark((function e() {
                    return (0,
                    n.Z)().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return o.restartInProgress = !0,
                                e.next = 3,
                                o.restore();
                            case 3:
                                return e.next = 5,
                                o.reset();
                            case 5:
                                o.restartInProgress = !1;
                            case 6:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                ))),
                o.relayer = e,
                o.logger = (0,
                w.generateChildLogger)(a, o.name),
                o.clientId = "",
                o
            }
            return (0,
            a.Z)(r, [{
                key: "context",
                get: function() {
                    return (0,
                    w.getLoggerContext)(this.logger)
                }
            }, {
                key: "storageKey",
                get: function() {
                    return this.storagePrefix + this.version + "//" + this.name
                }
            }, {
                key: "length",
                get: function() {
                    return this.subscriptions.size
                }
            }, {
                key: "ids",
                get: function() {
                    return Array.from(this.subscriptions.keys())
                }
            }, {
                key: "values",
                get: function() {
                    return Array.from(this.subscriptions.values())
                }
            }, {
                key: "topics",
                get: function() {
                    return this.topicMap.topics
                }
            }, {
                key: "hasSubscription",
                value: function(e, t) {
                    var r = !1;
                    try {
                        r = this.getSubscription(e).topic === t
                    } catch (n) {}
                    return r
                }
            }, {
                key: "onEnable",
                value: function() {
                    this.cached = [],
                    this.initialized = !0
                }
            }, {
                key: "onDisable",
                value: function() {
                    this.cached = this.values,
                    this.subscriptions.clear(),
                    this.topicMap.clear()
                }
            }, {
                key: "unsubscribeByTopic",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var i, a = this;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return i = this.topicMap.get(t),
                                    e.next = 3,
                                    Promise.all(i.map(function() {
                                        var e = (0,
                                        s.Z)((0,
                                        n.Z)().mark((function e(s) {
                                            return (0,
                                            n.Z)().wrap((function(e) {
                                                for (; ; )
                                                    switch (e.prev = e.next) {
                                                    case 0:
                                                        return e.next = 2,
                                                        a.unsubscribeById(t, s, r);
                                                    case 2:
                                                        return e.abrupt("return", e.sent);
                                                    case 3:
                                                    case "end":
                                                        return e.stop()
                                                    }
                                            }
                                            ), e)
                                        }
                                        )));
                                        return function(t) {
                                            return e.apply(this, arguments)
                                        }
                                    }()));
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "unsubscribeById",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r, s) {
                        var i, a;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return this.logger.debug("Unsubscribing Topic"),
                                    this.logger.trace({
                                        type: "method",
                                        method: "unsubscribe",
                                        params: {
                                            topic: t,
                                            id: r,
                                            opts: s
                                        }
                                    }),
                                    e.prev = 1,
                                    i = Ne(s),
                                    e.next = 5,
                                    this.rpcUnsubscribe(t, r, i);
                                case 5:
                                    return a = He("USER_DISCONNECTED", "".concat(this.name, ", ").concat(t)),
                                    e.next = 8,
                                    this.onUnsubscribe(t, r, a);
                                case 8:
                                    this.logger.debug("Successfully Unsubscribed Topic"),
                                    this.logger.trace({
                                        type: "method",
                                        method: "unsubscribe",
                                        params: {
                                            topic: t,
                                            id: r,
                                            opts: s
                                        }
                                    }),
                                    e.next = 15;
                                    break;
                                case 12:
                                    throw e.prev = 12,
                                    e.t0 = e.catch(1),
                                    this.logger.debug("Failed to Unsubscribe Topic"),
                                    this.logger.error(e.t0),
                                    e.t0;
                                case 15:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[1, 12]])
                    }
                    )));
                    return function(t, r, n) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "rpcSubscribe",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return s = {
                                        method: Re(r.protocol).subscribe,
                                        params: {
                                            topic: t
                                        }
                                    },
                                    this.logger.debug("Outgoing Relay Payload"),
                                    this.logger.trace({
                                        type: "payload",
                                        direction: "outgoing",
                                        request: s
                                    }),
                                    e.prev = 2,
                                    e.next = 5,
                                    xe(this.relayer.request(s), this.subscribeTimeout);
                                case 5:
                                    return e.next = 7,
                                    e.sent;
                                case 7:
                                    e.next = 12;
                                    break;
                                case 9:
                                    e.prev = 9,
                                    e.t0 = e.catch(2),
                                    this.logger.debug("Outgoing Relay Subscribe Payload stalled"),
                                    this.relayer.events.emit(fn);
                                case 12:
                                    return e.abrupt("return", $(t + this.clientId));
                                case 13:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[2, 9]])
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "rpcBatchSubscribe",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (t.length) {
                                        e.next = 2;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 2:
                                    return r = t[0].relay,
                                    s = {
                                        method: Re(r.protocol).batchSubscribe,
                                        params: {
                                            topics: t.map((function(e) {
                                                return e.topic
                                            }
                                            ))
                                        }
                                    },
                                    this.logger.debug("Outgoing Relay Payload"),
                                    this.logger.trace({
                                        type: "payload",
                                        direction: "outgoing",
                                        request: s
                                    }),
                                    e.prev = 4,
                                    e.next = 7,
                                    xe(this.relayer.request(s), this.subscribeTimeout);
                                case 7:
                                    return e.next = 9,
                                    e.sent;
                                case 9:
                                    return e.abrupt("return", e.sent);
                                case 12:
                                    e.prev = 12,
                                    e.t0 = e.catch(4),
                                    this.logger.debug("Outgoing Relay Payload stalled"),
                                    this.relayer.events.emit(fn);
                                case 15:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[4, 12]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "rpcUnsubscribe",
                value: function(e, t, r) {
                    var n = {
                        method: Re(r.protocol).unsubscribe,
                        params: {
                            topic: e,
                            id: t
                        }
                    };
                    return this.logger.debug("Outgoing Relay Payload"),
                    this.logger.trace({
                        type: "payload",
                        direction: "outgoing",
                        request: n
                    }),
                    this.relayer.request(n)
                }
            }, {
                key: "onSubscribe",
                value: function(e, t) {
                    this.setSubscription(e, Jn(Gn({}, t), {
                        id: e
                    })),
                    this.pending.delete(t.topic)
                }
            }, {
                key: "onBatchSubscribe",
                value: function(e) {
                    var t = this;
                    e.length && e.forEach((function(e) {
                        t.setSubscription(e.id, Gn({}, e)),
                        t.pending.delete(e.topic)
                    }
                    ))
                }
            }, {
                key: "onUnsubscribe",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r, s) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return this.events.removeAllListeners(r),
                                    this.hasSubscription(r, t) && this.deleteSubscription(r, s),
                                    e.next = 4,
                                    this.relayer.messages.del(t);
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t, r, n) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "setRelayerSubscriptions",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.relayer.core.storage.setItem(this.storageKey, t);
                                case 2:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getRelayerSubscriptions",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.relayer.core.storage.getItem(this.storageKey);
                                case 2:
                                    return e.abrupt("return", e.sent);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "setSubscription",
                value: function(e, t) {
                    this.subscriptions.has(e) || (this.logger.debug("Setting subscription"),
                    this.logger.trace({
                        type: "method",
                        method: "setSubscription",
                        id: e,
                        subscription: t
                    }),
                    this.addSubscription(e, t))
                }
            }, {
                key: "addSubscription",
                value: function(e, t) {
                    this.subscriptions.set(e, Gn({}, t)),
                    this.topicMap.set(t.topic, e),
                    this.events.emit(wn, t)
                }
            }, {
                key: "getSubscription",
                value: function(e) {
                    this.logger.debug("Getting subscription"),
                    this.logger.trace({
                        type: "method",
                        method: "getSubscription",
                        id: e
                    });
                    var t = this.subscriptions.get(e);
                    if (!t) {
                        var r = ze("NO_MATCHING_KEY", "".concat(this.name, ": ").concat(e)).message;
                        throw new Error(r)
                    }
                    return t
                }
            }, {
                key: "deleteSubscription",
                value: function(e, t) {
                    this.logger.debug("Deleting subscription"),
                    this.logger.trace({
                        type: "method",
                        method: "deleteSubscription",
                        id: e,
                        reason: t
                    });
                    var r = this.getSubscription(e);
                    this.subscriptions.delete(e),
                    this.topicMap.delete(r.topic, e),
                    this.events.emit(xn, Jn(Gn({}, r), {
                        reason: t
                    }))
                }
            }, {
                key: "persist",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.setRelayerSubscriptions(this.values);
                                case 2:
                                    this.events.emit(En);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "reset",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t, r, s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (this.cached.length) {
                                        e.next = 2;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 2:
                                    t = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit),
                                    r = 0;
                                case 4:
                                    if (!(r < t)) {
                                        e.next = 11;
                                        break
                                    }
                                    return s = this.cached.splice(0, this.batchSubscribeTopicsLimit),
                                    e.next = 8,
                                    this.batchSubscribe(s);
                                case 8:
                                    r++,
                                    e.next = 4;
                                    break;
                                case 11:
                                    this.events.emit(Zn);
                                case 12:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "restore",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t, r, s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0,
                                    e.next = 3,
                                    this.getRelayerSubscriptions();
                                case 3:
                                    if (!(typeof (t = e.sent) > "u") && t.length) {
                                        e.next = 6;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 6:
                                    if (!this.subscriptions.size) {
                                        e.next = 9;
                                        break
                                    }
                                    throw r = ze("RESTORE_WILL_OVERRIDE", this.name),
                                    s = r.message,
                                    this.logger.error(s),
                                    this.logger.error("".concat(this.name, ": ").concat(JSON.stringify(this.values))),
                                    new Error(s);
                                case 9:
                                    this.cached = t,
                                    this.logger.debug("Successfully Restored subscriptions for ".concat(this.name)),
                                    this.logger.trace({
                                        type: "method",
                                        method: "restore",
                                        subscriptions: this.values
                                    }),
                                    e.next = 15;
                                    break;
                                case 12:
                                    e.prev = 12,
                                    e.t0 = e.catch(0),
                                    this.logger.debug("Failed to Restore subscriptions for ".concat(this.name)),
                                    this.logger.error(e.t0);
                                case 15:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[0, 12]])
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "batchSubscribe",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (t.length) {
                                        e.next = 2;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 2:
                                    return e.next = 4,
                                    this.rpcBatchSubscribe(t);
                                case 4:
                                    Ke(r = e.sent) && this.onBatchSubscribe(r.map((function(e, r) {
                                        return Jn(Gn({}, t[r]), {
                                            id: e
                                        })
                                    }
                                    )));
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "onConnect",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (e.t0 = this.restartInProgress,
                                    e.t0) {
                                        e.next = 5;
                                        break
                                    }
                                    return e.next = 4,
                                    this.restart();
                                case 4:
                                    this.onEnable();
                                case 5:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "onDisconnect",
                value: function() {
                    this.onDisable()
                }
            }, {
                key: "checkPending",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (!this.relayer.transportExplicitlyClosed) {
                                        e.next = 2;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 2:
                                    return t = [],
                                    this.pending.forEach((function(e) {
                                        t.push(e)
                                    }
                                    )),
                                    e.next = 6,
                                    this.batchSubscribe(t);
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "registerEventListeners",
                value: function() {
                    var e = this;
                    this.relayer.core.heartbeat.on(k.HEARTBEAT_EVENTS.pulse, (0,
                    s.Z)((0,
                    n.Z)().mark((function t() {
                        return (0,
                        n.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    e.checkPending();
                                case 2:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t)
                    }
                    )))),
                    this.relayer.on(ln, (0,
                    s.Z)((0,
                    n.Z)().mark((function t() {
                        return (0,
                        n.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    e.onConnect();
                                case 2:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t)
                    }
                    )))),
                    this.relayer.on(pn, (function() {
                        e.onDisconnect()
                    }
                    )),
                    this.events.on(wn, function() {
                        var t = (0,
                        s.Z)((0,
                        n.Z)().mark((function t(r) {
                            var s;
                            return (0,
                            n.Z)().wrap((function(t) {
                                for (; ; )
                                    switch (t.prev = t.next) {
                                    case 0:
                                        return s = wn,
                                        e.logger.info("Emitting ".concat(s)),
                                        e.logger.debug({
                                            type: "event",
                                            event: s,
                                            data: r
                                        }),
                                        t.next = 5,
                                        e.persist();
                                    case 5:
                                    case "end":
                                        return t.stop()
                                    }
                            }
                            ), t)
                        }
                        )));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }()),
                    this.events.on(xn, function() {
                        var t = (0,
                        s.Z)((0,
                        n.Z)().mark((function t(r) {
                            var s;
                            return (0,
                            n.Z)().wrap((function(t) {
                                for (; ; )
                                    switch (t.prev = t.next) {
                                    case 0:
                                        return s = xn,
                                        e.logger.info("Emitting ".concat(s)),
                                        e.logger.debug({
                                            type: "event",
                                            event: s,
                                            data: r
                                        }),
                                        t.next = 5,
                                        e.persist();
                                    case 5:
                                    case "end":
                                        return t.stop()
                                    }
                            }
                            ), t)
                        }
                        )));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }())
                }
            }, {
                key: "isInitialized",
                value: function() {
                    if (!this.initialized) {
                        var e = ze("NOT_INITIALIZED", this.name).message;
                        throw new Error(e)
                    }
                }
            }, {
                key: "restartToComplete",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t = this;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (e.t0 = this.restartInProgress,
                                    !e.t0) {
                                        e.next = 4;
                                        break
                                    }
                                    return e.next = 4,
                                    new Promise((function(e) {
                                        var r = setInterval((function() {
                                            t.restartInProgress || (clearInterval(r),
                                            e())
                                        }
                                        ), t.pollingInterval)
                                    }
                                    ));
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }]),
            r
        }(x.sY)
          , Yn = Object.defineProperty
          , $n = Object.getOwnPropertySymbols
          , Xn = Object.prototype.hasOwnProperty
          , Qn = Object.prototype.propertyIsEnumerable
          , es = function(e, t, r) {
            return t in e ? Yn(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r
            }) : e[t] = r
        }
          , ts = function(e, t) {
            for (var r in t || (t = {}))
                Xn.call(t, r) && es(e, r, t[r]);
            if ($n) {
                var n, s = (0,
                u.Z)($n(t));
                try {
                    for (s.s(); !(n = s.n()).done; ) {
                        r = n.value;
                        Qn.call(t, r) && es(e, r, t[r])
                    }
                } catch (i) {
                    s.e(i)
                } finally {
                    s.f()
                }
            }
            return e
        }
          , rs = function(e) {
            (0,
            f.Z)(r, e);
            var t = (0,
            d.Z)(r);
            function r(e) {
                var a;
                return (0,
                i.Z)(this, r),
                (a = t.call(this, e)).protocol = "wc",
                a.version = 2,
                a.events = new m.EventEmitter,
                a.name = "relayer",
                a.transportExplicitlyClosed = !1,
                a.initialized = !1,
                a.reconnecting = !1,
                a.connectionStatusPollingInterval = 20,
                a.staleConnectionErrors = ["socket hang up", "socket stalled"],
                a.request = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.logger.debug("Publishing Request Payload"),
                                    e.prev = 1,
                                    e.next = 4,
                                    a.toEstablishConnection();
                                case 4:
                                    return e.next = 6,
                                    a.provider.request(t);
                                case 6:
                                    return e.abrupt("return", e.sent);
                                case 9:
                                    throw e.prev = 9,
                                    e.t0 = e.catch(1),
                                    a.logger.debug("Failed to Publish Request"),
                                    a.logger.error(e.t0),
                                    e.t0;
                                case 12:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[1, 9]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.core = e.core,
                a.logger = typeof e.logger < "u" && "string" != typeof e.logger ? (0,
                w.generateChildLogger)(e.logger, a.name) : p()((0,
                w.getDefaultLoggerOptions)({
                    level: e.logger || "error"
                })),
                a.messages = new Bn(a.logger,e.core),
                a.subscriber = new Wn((0,
                h.Z)(a),a.logger),
                a.publisher = new qn((0,
                h.Z)(a),a.logger),
                a.relayUrl = (null === e || void 0 === e ? void 0 : e.relayUrl) || cn,
                a.projectId = e.projectId,
                a.provider = {},
                a
            }
            return (0,
            a.Z)(r, [{
                key: "init",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return this.logger.trace("Initialized"),
                                    e.next = 3,
                                    this.createProvider();
                                case 3:
                                    return e.next = 5,
                                    Promise.all([this.messages.init(), this.transportOpen(), this.subscriber.init()]);
                                case 5:
                                    this.registerEventListeners(),
                                    this.initialized = !0;
                                case 7:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "context",
                get: function() {
                    return (0,
                    w.getLoggerContext)(this.logger)
                }
            }, {
                key: "connected",
                get: function() {
                    return this.provider.connection.connected
                }
            }, {
                key: "connecting",
                get: function() {
                    return this.provider.connection.connecting
                }
            }, {
                key: "publish",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r, s) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return this.isInitialized(),
                                    e.next = 3,
                                    this.publisher.publish(t, r, s);
                                case 3:
                                    return e.next = 5,
                                    this.recordMessageEvent({
                                        topic: t,
                                        message: r,
                                        publishedAt: Date.now()
                                    });
                                case 5:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t, r, n) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "subscribe",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var i, a = this;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return this.isInitialized(),
                                    i = "",
                                    e.next = 4,
                                    Promise.all([new Promise((function(e) {
                                        a.subscriber.once(wn, (function(r) {
                                            r.topic === t && e()
                                        }
                                        ))
                                    }
                                    )), new Promise(function() {
                                        var e = (0,
                                        s.Z)((0,
                                        n.Z)().mark((function e(s) {
                                            return (0,
                                            n.Z)().wrap((function(e) {
                                                for (; ; )
                                                    switch (e.prev = e.next) {
                                                    case 0:
                                                        return e.next = 2,
                                                        a.subscriber.subscribe(t, r);
                                                    case 2:
                                                        i = e.sent,
                                                        s();
                                                    case 4:
                                                    case "end":
                                                        return e.stop()
                                                    }
                                            }
                                            ), e)
                                        }
                                        )));
                                        return function(t) {
                                            return e.apply(this, arguments)
                                        }
                                    }())]);
                                case 4:
                                    return e.abrupt("return", i);
                                case 5:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "unsubscribe",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return this.isInitialized(),
                                    e.next = 3,
                                    this.subscriber.unsubscribe(t, r);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "on",
                value: function(e, t) {
                    this.events.on(e, t)
                }
            }, {
                key: "once",
                value: function(e, t) {
                    this.events.once(e, t)
                }
            }, {
                key: "off",
                value: function(e, t) {
                    this.events.off(e, t)
                }
            }, {
                key: "removeListener",
                value: function(e, t) {
                    this.events.removeListener(e, t)
                }
            }, {
                key: "transportClose",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (this.transportExplicitlyClosed = !0,
                                    e.t0 = this.connected,
                                    !e.t0) {
                                        e.next = 6;
                                        break
                                    }
                                    return e.next = 5,
                                    this.provider.disconnect();
                                case 5:
                                    this.events.emit(dn);
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "transportOpen",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, i = this;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (this.reconnecting) {
                                        e.next = 23;
                                        break
                                    }
                                    return this.relayUrl = t || this.relayUrl,
                                    this.transportExplicitlyClosed = !1,
                                    this.reconnecting = !0,
                                    e.prev = 2,
                                    e.t0 = Promise,
                                    e.t1 = new Promise((function(e) {
                                        i.initialized || e(),
                                        i.subscriber.once(Zn, (function() {
                                            e()
                                        }
                                        ))
                                    }
                                    )),
                                    e.next = 7,
                                    Promise.race([new Promise(function() {
                                        var e = (0,
                                        s.Z)((0,
                                        n.Z)().mark((function e(t, r) {
                                            return (0,
                                            n.Z)().wrap((function(e) {
                                                for (; ; )
                                                    switch (e.prev = e.next) {
                                                    case 0:
                                                        return e.next = 2,
                                                        xe(i.provider.connect(), 5e3, "socket stalled").catch((function(e) {
                                                            return r(e)
                                                        }
                                                        )).then((function() {
                                                            return t()
                                                        }
                                                        )).finally((function() {
                                                            return i.removeListener(dn, i.rejectTransportOpen)
                                                        }
                                                        ));
                                                    case 2:
                                                    case "end":
                                                        return e.stop()
                                                    }
                                            }
                                            ), e)
                                        }
                                        )));
                                        return function(t, r) {
                                            return e.apply(this, arguments)
                                        }
                                    }()), new Promise((function(e) {
                                        return i.once(dn, i.rejectTransportOpen)
                                    }
                                    ))]);
                                case 7:
                                    return e.t2 = e.sent,
                                    e.t3 = [e.t1, e.t2],
                                    e.next = 11,
                                    e.t0.all.call(e.t0, e.t3);
                                case 11:
                                    e.next = 20;
                                    break;
                                case 13:
                                    if (e.prev = 13,
                                    e.t4 = e.catch(2),
                                    this.logger.error(e.t4),
                                    r = e.t4,
                                    this.isConnectionStalled(r.message)) {
                                        e.next = 19;
                                        break
                                    }
                                    throw e.t4;
                                case 19:
                                    this.events.emit(dn);
                                case 20:
                                    return e.prev = 20,
                                    this.reconnecting = !1,
                                    e.finish(20);
                                case 23:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[2, 13, 20, 23]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "restartTransport",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (e.t0 = this.transportExplicitlyClosed,
                                    e.t0) {
                                        e.next = 9;
                                        break
                                    }
                                    return this.relayUrl = t || this.relayUrl,
                                    e.next = 5,
                                    this.transportClose();
                                case 5:
                                    return e.next = 7,
                                    this.createProvider();
                                case 7:
                                    return e.next = 9,
                                    this.transportOpen();
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "isConnectionStalled",
                value: function(e) {
                    return this.staleConnectionErrors.some((function(t) {
                        return e.includes(t)
                    }
                    ))
                }
            }, {
                key: "rejectTransportOpen",
                value: function() {
                    throw new Error("closeTransport called before connection was established")
                }
            }, {
                key: "createProvider",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.core.crypto.signJWT(this.relayUrl);
                                case 2:
                                    t = e.sent,
                                    this.provider = new yt(new wt(me({
                                        sdkVersion: "2.5.2",
                                        protocol: this.protocol,
                                        version: this.version,
                                        relayUrl: this.relayUrl,
                                        projectId: this.projectId,
                                        auth: t,
                                        useOnCloseEvent: !0
                                    }))),
                                    this.registerProviderListeners();
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "recordMessageEvent",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return r = t.topic,
                                    s = t.message,
                                    e.next = 3,
                                    this.messages.set(r, s);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "shouldIgnoreMessageEvent",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return r = t.topic,
                                    s = t.message,
                                    e.next = 3,
                                    this.subscriber.isSubscribed(r);
                                case 3:
                                    if (!e.sent) {
                                        e.next = 7;
                                        break
                                    }
                                    e.t0 = this.messages.has(r, s),
                                    e.next = 8;
                                    break;
                                case 7:
                                    e.t0 = !0;
                                case 8:
                                    return e.abrupt("return", e.t0);
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "onProviderPayload",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, a, o, c;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (this.logger.debug("Incoming Relay Payload"),
                                    this.logger.trace({
                                        type: "payload",
                                        direction: "incoming",
                                        payload: t
                                    }),
                                    !(0,
                                    mt.isJsonRpcRequest)(t)) {
                                        e.next = 11;
                                        break
                                    }
                                    if (t.method.endsWith("_subscription")) {
                                        e.next = 3;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 3:
                                    return r = t.params,
                                    s = r.data,
                                    i = s.topic,
                                    a = s.message,
                                    o = s.publishedAt,
                                    c = {
                                        topic: i,
                                        message: a,
                                        publishedAt: o
                                    },
                                    this.logger.debug("Emitting Relayer Payload"),
                                    this.logger.trace(ts({
                                        type: "event",
                                        event: r.id
                                    }, c)),
                                    this.events.emit(r.id, c),
                                    e.next = 9,
                                    this.acknowledgePayload(t);
                                case 9:
                                    return e.next = 11,
                                    this.onMessageEvent(c);
                                case 11:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "onMessageEvent",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.shouldIgnoreMessageEvent(t);
                                case 2:
                                    if (e.t0 = e.sent,
                                    e.t0) {
                                        e.next = 7;
                                        break
                                    }
                                    return this.events.emit(un, t),
                                    e.next = 7,
                                    this.recordMessageEvent(t);
                                case 7:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "acknowledgePayload",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return r = (0,
                                    mt.formatJsonRpcResult)(t.id, !0),
                                    e.next = 3,
                                    this.provider.connection.send(r);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "registerProviderListeners",
                value: function() {
                    var e = this;
                    this.provider.on(gn, (function(t) {
                        return e.onProviderPayload(t)
                    }
                    )),
                    this.provider.on(mn, (function() {
                        e.events.emit(ln)
                    }
                    )),
                    this.provider.on(yn, (function() {
                        e.onProviderDisconnect()
                    }
                    )),
                    this.provider.on(bn, (function(t) {
                        e.logger.error(t),
                        e.events.emit(hn, t)
                    }
                    ))
                }
            }, {
                key: "registerEventListeners",
                value: function() {
                    var e = this;
                    this.events.on(fn, (0,
                    s.Z)((0,
                    n.Z)().mark((function t() {
                        return (0,
                        n.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    e.restartTransport();
                                case 2:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t)
                    }
                    ))))
                }
            }, {
                key: "onProviderDisconnect",
                value: function() {
                    this.events.emit(pn),
                    this.attemptToReconnect()
                }
            }, {
                key: "attemptToReconnect",
                value: function() {
                    var e = this;
                    this.transportExplicitlyClosed || setTimeout((0,
                    s.Z)((0,
                    n.Z)().mark((function t() {
                        return (0,
                        n.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2,
                                    e.restartTransport();
                                case 2:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t)
                    }
                    ))), (0,
                    O.toMiliseconds)(kn))
                }
            }, {
                key: "isInitialized",
                value: function() {
                    if (!this.initialized) {
                        var e = ze("NOT_INITIALIZED", this.name).message;
                        throw new Error(e)
                    }
                }
            }, {
                key: "toEstablishConnection",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t = this;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (this.connected) {
                                        e.next = 7;
                                        break
                                    }
                                    if (!this.connecting) {
                                        e.next = 5;
                                        break
                                    }
                                    return e.next = 4,
                                    new Promise((function(e) {
                                        var r = setInterval((function() {
                                            t.connected && (clearInterval(r),
                                            e())
                                        }
                                        ), t.connectionStatusPollingInterval)
                                    }
                                    ));
                                case 4:
                                    return e.abrupt("return", e.sent);
                                case 5:
                                    return e.next = 7,
                                    this.restartTransport();
                                case 7:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }]),
            r
        }(x.oe)
          , ns = Object.defineProperty
          , ss = Object.getOwnPropertySymbols
          , is = Object.prototype.hasOwnProperty
          , as = Object.prototype.propertyIsEnumerable
          , os = function(e, t, r) {
            return t in e ? ns(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r
            }) : e[t] = r
        }
          , cs = function(e, t) {
            for (var r in t || (t = {}))
                is.call(t, r) && os(e, r, t[r]);
            if (ss) {
                var n, s = (0,
                u.Z)(ss(t));
                try {
                    for (s.s(); !(n = s.n()).done; ) {
                        r = n.value;
                        as.call(t, r) && os(e, r, t[r])
                    }
                } catch (i) {
                    s.e(i)
                } finally {
                    s.f()
                }
            }
            return e
        }
          , us = function(e) {
            (0,
            f.Z)(r, e);
            var t = (0,
            d.Z)(r);
            function r(e, a, o) {
                var c, u = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : tn, l = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : void 0;
                return (0,
                i.Z)(this, r),
                (c = t.call(this, e, a, o, u)).core = e,
                c.logger = a,
                c.name = o,
                c.map = new Map,
                c.version = "0.3",
                c.cached = [],
                c.initialized = !1,
                c.storagePrefix = tn,
                c.init = (0,
                s.Z)((0,
                n.Z)().mark((function e() {
                    return (0,
                    n.Z)().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (e.t0 = c.initialized,
                                e.t0) {
                                    e.next = 8;
                                    break
                                }
                                return c.logger.trace("Initialized"),
                                e.next = 5,
                                c.restore();
                            case 5:
                                c.cached.forEach((function(e) {
                                    c.getKey && null !== e && !Ve(e) ? c.map.set(c.getKey(e), e) : Ye(e) ? c.map.set(e.id, e) : $e(e) && c.map.set(e.topic, e)
                                }
                                )),
                                c.cached = [],
                                c.initialized = !0;
                            case 8:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                ))),
                c.set = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (c.isInitialized(),
                                    !c.map.has(t)) {
                                        e.next = 6;
                                        break
                                    }
                                    return e.next = 4,
                                    c.update(t, r);
                                case 4:
                                    e.next = 11;
                                    break;
                                case 6:
                                    return c.logger.debug("Setting value"),
                                    c.logger.trace({
                                        type: "method",
                                        method: "set",
                                        key: t,
                                        value: r
                                    }),
                                    c.map.set(t, r),
                                    e.next = 11,
                                    c.persist();
                                case 11:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                c.get = function(e) {
                    return c.isInitialized(),
                    c.logger.debug("Getting value"),
                    c.logger.trace({
                        type: "method",
                        method: "get",
                        key: e
                    }),
                    c.getData(e)
                }
                ,
                c.getAll = function(e) {
                    return c.isInitialized(),
                    e ? c.values.filter((function(t) {
                        return Object.keys(e).every((function(r) {
                            return Et()(t[r], e[r])
                        }
                        ))
                    }
                    )) : c.values
                }
                ,
                c.update = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return c.isInitialized(),
                                    c.logger.debug("Updating value"),
                                    c.logger.trace({
                                        type: "method",
                                        method: "update",
                                        key: t,
                                        update: r
                                    }),
                                    s = cs(cs({}, c.getData(t)), r),
                                    c.map.set(t, s),
                                    e.next = 5,
                                    c.persist();
                                case 5:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                c.delete = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (c.isInitialized(),
                                    e.t0 = c.map.has(t),
                                    !e.t0) {
                                        e.next = 8;
                                        break
                                    }
                                    return c.logger.debug("Deleting value"),
                                    c.logger.trace({
                                        type: "method",
                                        method: "delete",
                                        key: t,
                                        reason: r
                                    }),
                                    c.map.delete(t),
                                    e.next = 8,
                                    c.persist();
                                case 8:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                c.logger = (0,
                w.generateChildLogger)(a, c.name),
                c.storagePrefix = u,
                c.getKey = l,
                c
            }
            return (0,
            a.Z)(r, [{
                key: "context",
                get: function() {
                    return (0,
                    w.getLoggerContext)(this.logger)
                }
            }, {
                key: "storageKey",
                get: function() {
                    return this.storagePrefix + this.version + "//" + this.name
                }
            }, {
                key: "length",
                get: function() {
                    return this.map.size
                }
            }, {
                key: "keys",
                get: function() {
                    return Array.from(this.map.keys())
                }
            }, {
                key: "values",
                get: function() {
                    return Array.from(this.map.values())
                }
            }, {
                key: "setDataStore",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.core.storage.setItem(this.storageKey, t);
                                case 2:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getDataStore",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.core.storage.getItem(this.storageKey);
                                case 2:
                                    return e.abrupt("return", e.sent);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getData",
                value: function(e) {
                    var t = this.map.get(e);
                    if (!t) {
                        var r = ze("NO_MATCHING_KEY", "".concat(this.name, ": ").concat(e)).message;
                        throw this.logger.error(r),
                        new Error(r)
                    }
                    return t
                }
            }, {
                key: "persist",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.setDataStore(this.values);
                                case 2:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "restore",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t, r, s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0,
                                    e.next = 3,
                                    this.getDataStore();
                                case 3:
                                    if (!(typeof (t = e.sent) > "u") && t.length) {
                                        e.next = 6;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 6:
                                    if (!this.map.size) {
                                        e.next = 9;
                                        break
                                    }
                                    throw r = ze("RESTORE_WILL_OVERRIDE", this.name),
                                    s = r.message,
                                    this.logger.error(s),
                                    new Error(s);
                                case 9:
                                    this.cached = t,
                                    this.logger.debug("Successfully Restored value for ".concat(this.name)),
                                    this.logger.trace({
                                        type: "method",
                                        method: "restore",
                                        value: this.values
                                    }),
                                    e.next = 15;
                                    break;
                                case 12:
                                    e.prev = 12,
                                    e.t0 = e.catch(0),
                                    this.logger.debug("Failed to Restore value for ".concat(this.name)),
                                    this.logger.error(e.t0);
                                case 15:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[0, 12]])
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "isInitialized",
                value: function() {
                    if (!this.initialized) {
                        var e = ze("NOT_INITIALIZED", this.name).message;
                        throw new Error(e)
                    }
                }
            }]),
            r
        }(x.pZ)
          , ls = function() {
            function e(t, r) {
                var a = this;
                (0,
                i.Z)(this, e),
                this.core = t,
                this.logger = r,
                this.name = "pairing",
                this.version = "0.3",
                this.events = new (y()),
                this.initialized = !1,
                this.storagePrefix = tn,
                this.ignoredPayloadTypes = [K],
                this.registeredMethods = [],
                this.init = (0,
                s.Z)((0,
                n.Z)().mark((function e() {
                    return (0,
                    n.Z)().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (e.t0 = a.initialized,
                                e.t0) {
                                    e.next = 10;
                                    break
                                }
                                return e.next = 4,
                                a.pairings.init();
                            case 4:
                                return e.next = 6,
                                a.cleanup();
                            case 6:
                                a.registerRelayerEvents(),
                                a.registerExpirerEvents(),
                                a.initialized = !0,
                                a.logger.trace("Initialized");
                            case 10:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                ))),
                this.register = function(e) {
                    var t = e.methods;
                    a.isInitialized(),
                    a.registeredMethods = (0,
                    c.Z)(new Set([].concat((0,
                    c.Z)(a.registeredMethods), (0,
                    c.Z)(t))))
                }
                ,
                this.create = (0,
                s.Z)((0,
                n.Z)().mark((function e() {
                    var t, r, s, i, o, c;
                    return (0,
                    n.Z)().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return a.isInitialized(),
                                t = W(),
                                e.next = 4,
                                a.core.crypto.setSymKey(t);
                            case 4:
                                return r = e.sent,
                                s = _e(O.FIVE_MINUTES),
                                o = {
                                    topic: r,
                                    expiry: s,
                                    relay: i = {
                                        protocol: "irn"
                                    },
                                    active: !1
                                },
                                c = Be({
                                    protocol: a.core.protocol,
                                    version: a.core.version,
                                    topic: r,
                                    symKey: t,
                                    relay: i
                                }),
                                e.next = 11,
                                a.pairings.set(r, o);
                            case 11:
                                return e.next = 13,
                                a.core.relayer.subscribe(r);
                            case 13:
                                return a.core.expirer.set(r, s),
                                e.abrupt("return", {
                                    topic: r,
                                    uri: c
                                });
                            case 15:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                ))),
                this.pair = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o, c, u;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (a.isInitialized(),
                                    a.isValidPair(t),
                                    r = De(t.uri),
                                    s = r.topic,
                                    i = r.symKey,
                                    o = r.relay,
                                    !a.pairings.keys.includes(s)) {
                                        e.next = 4;
                                        break
                                    }
                                    throw new Error("Pairing already exists: ".concat(s));
                                case 4:
                                    if (!a.core.crypto.hasKeys(s)) {
                                        e.next = 6;
                                        break
                                    }
                                    throw new Error("Keychain already exists: ".concat(s));
                                case 6:
                                    return c = _e(O.FIVE_MINUTES),
                                    u = {
                                        topic: s,
                                        relay: o,
                                        expiry: c,
                                        active: !1
                                    },
                                    e.next = 9,
                                    a.pairings.set(s, u);
                                case 9:
                                    return e.next = 11,
                                    a.core.crypto.setSymKey(i, s);
                                case 11:
                                    return e.next = 13,
                                    a.core.relayer.subscribe(s, {
                                        relay: o
                                    });
                                case 13:
                                    if (a.core.expirer.set(s, c),
                                    e.t0 = t.activatePairing,
                                    !e.t0) {
                                        e.next = 18;
                                        break
                                    }
                                    return e.next = 18,
                                    a.activate({
                                        topic: s
                                    });
                                case 18:
                                    return e.abrupt("return", u);
                                case 19:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.activate = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return r = t.topic,
                                    a.isInitialized(),
                                    s = _e(O.THIRTY_DAYS),
                                    e.next = 5,
                                    a.pairings.update(r, {
                                        active: !0,
                                        expiry: s
                                    });
                                case 5:
                                    a.core.expirer.set(r, s);
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.ping = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o, c, u;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.isInitialized(),
                                    e.next = 3,
                                    a.isValidPing(t);
                                case 3:
                                    if (r = t.topic,
                                    !a.pairings.keys.includes(r)) {
                                        e.next = 15;
                                        break
                                    }
                                    return e.next = 7,
                                    a.sendRequest(r, "wc_pairingPing", {});
                                case 7:
                                    return s = e.sent,
                                    i = we(),
                                    o = i.done,
                                    c = i.resolve,
                                    u = i.reject,
                                    a.events.once(Ie("pairing_ping", s), (function(e) {
                                        var t = e.error;
                                        t ? u(t) : c()
                                    }
                                    )),
                                    e.next = 15,
                                    o();
                                case 15:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.updateExpiry = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return r = t.topic,
                                    s = t.expiry,
                                    a.isInitialized(),
                                    e.next = 4,
                                    a.pairings.update(r, {
                                        expiry: s
                                    });
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.updateMetadata = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return r = t.topic,
                                    s = t.metadata,
                                    a.isInitialized(),
                                    e.next = 4,
                                    a.pairings.update(r, {
                                        peerMetadata: s
                                    });
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.getPairings = function() {
                    return a.isInitialized(),
                    a.pairings.values
                }
                ,
                this.disconnect = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.isInitialized(),
                                    e.next = 3,
                                    a.isValidDisconnect(t);
                                case 3:
                                    if (r = t.topic,
                                    e.t0 = a.pairings.keys.includes(r),
                                    !e.t0) {
                                        e.next = 10;
                                        break
                                    }
                                    return e.next = 8,
                                    a.sendRequest(r, "wc_pairingDelete", He("USER_DISCONNECTED"));
                                case 8:
                                    return e.next = 10,
                                    a.deletePairing(r);
                                case 10:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.sendRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r, s) {
                        var i, o, c;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return i = (0,
                                    mt.formatJsonRpcRequest)(r, s),
                                    e.next = 3,
                                    a.core.crypto.encode(t, i);
                                case 3:
                                    return o = e.sent,
                                    c = Pn[r].req,
                                    a.core.history.set(t, i),
                                    e.next = 8,
                                    a.core.relayer.publish(t, o, c);
                                case 8:
                                    return e.abrupt("return", i.id);
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r, n) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.sendResult = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r, s) {
                        var i, o, c, u;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return i = (0,
                                    mt.formatJsonRpcResult)(t, s),
                                    e.next = 3,
                                    a.core.crypto.encode(r, i);
                                case 3:
                                    return o = e.sent,
                                    e.next = 6,
                                    a.core.history.get(r, t);
                                case 6:
                                    return c = e.sent,
                                    u = Pn[c.request.method].res,
                                    e.next = 10,
                                    a.core.relayer.publish(r, o, u);
                                case 10:
                                    return e.next = 12,
                                    a.core.history.resolve(i);
                                case 12:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r, n) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.sendError = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r, s) {
                        var i, o, c, u;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return i = (0,
                                    mt.formatJsonRpcError)(t, s),
                                    e.next = 3,
                                    a.core.crypto.encode(r, i);
                                case 3:
                                    return o = e.sent,
                                    e.next = 6,
                                    a.core.history.get(r, t);
                                case 6:
                                    return c = e.sent,
                                    u = Pn[c.request.method] ? Pn[c.request.method].res : Pn.unregistered_method.res,
                                    e.next = 10,
                                    a.core.relayer.publish(r, o, u);
                                case 10:
                                    return e.next = 12,
                                    a.core.history.resolve(i);
                                case 12:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r, n) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.deletePairing = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    a.core.relayer.unsubscribe(t);
                                case 2:
                                    return e.next = 4,
                                    Promise.all([a.pairings.delete(t, He("USER_DISCONNECTED")), a.core.crypto.deleteSymKey(t), r ? Promise.resolve() : a.core.expirer.del(t)]);
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.cleanup = (0,
                s.Z)((0,
                n.Z)().mark((function e() {
                    var t;
                    return (0,
                    n.Z)().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return t = a.pairings.getAll().filter((function(e) {
                                    return Pe(e.expiry)
                                }
                                )),
                                e.next = 3,
                                Promise.all(t.map((function(e) {
                                    return a.deletePairing(e.topic)
                                }
                                )));
                            case 3:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                ))),
                this.onRelayEventRequest = function(e) {
                    var t = e.topic
                      , r = e.payload
                      , n = r.method;
                    if (a.pairings.keys.includes(t))
                        switch (n) {
                        case "wc_pairingPing":
                            return a.onPairingPingRequest(t, r);
                        case "wc_pairingDelete":
                            return a.onPairingDeleteRequest(t, r);
                        default:
                            return a.onUnknownRpcMethodRequest(t, r)
                        }
                }
                ,
                this.onRelayEventResponse = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return r = t.topic,
                                    s = t.payload,
                                    e.next = 4,
                                    a.core.history.get(r, s.id);
                                case 4:
                                    if (i = e.sent.request.method,
                                    !a.pairings.keys.includes(r)) {
                                        e.next = 11;
                                        break
                                    }
                                    e.t0 = i,
                                    e.next = "wc_pairingPing" === e.t0 ? 9 : 10;
                                    break;
                                case 9:
                                    return e.abrupt("return", a.onPairingPingResponse(r, s));
                                case 10:
                                    return e.abrupt("return", a.onUnknownRpcMethodResponse(i));
                                case 11:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.onPairingPingRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return s = r.id,
                                    e.prev = 1,
                                    a.isValidPing({
                                        topic: t
                                    }),
                                    e.next = 5,
                                    a.sendResult(s, t, !0);
                                case 5:
                                    a.events.emit("pairing_ping", {
                                        id: s,
                                        topic: t
                                    }),
                                    e.next = 13;
                                    break;
                                case 8:
                                    return e.prev = 8,
                                    e.t0 = e.catch(1),
                                    e.next = 12,
                                    a.sendError(s, t, e.t0);
                                case 12:
                                    a.logger.error(e.t0);
                                case 13:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[1, 8]])
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.onPairingPingResponse = function(e, t) {
                    var r = t.id;
                    setTimeout((function() {
                        (0,
                        mt.isJsonRpcResult)(t) ? a.events.emit(Ie("pairing_ping", r), {}) : (0,
                        mt.isJsonRpcError)(t) && a.events.emit(Ie("pairing_ping", r), {
                            error: t.error
                        })
                    }
                    ), 500)
                }
                ,
                this.onPairingDeleteRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return s = r.id,
                                    e.prev = 1,
                                    a.isValidDisconnect({
                                        topic: t
                                    }),
                                    e.next = 5,
                                    a.deletePairing(t);
                                case 5:
                                    a.events.emit("pairing_delete", {
                                        id: s,
                                        topic: t
                                    }),
                                    e.next = 13;
                                    break;
                                case 8:
                                    return e.prev = 8,
                                    e.t0 = e.catch(1),
                                    e.next = 12,
                                    a.sendError(s, t, e.t0);
                                case 12:
                                    a.logger.error(e.t0);
                                case 13:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[1, 8]])
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.onUnknownRpcMethodRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s, i, o;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (s = r.id,
                                    i = r.method,
                                    e.prev = 1,
                                    !a.registeredMethods.includes(i)) {
                                        e.next = 4;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 4:
                                    return o = He("WC_METHOD_UNSUPPORTED", i),
                                    e.next = 7,
                                    a.sendError(s, t, o);
                                case 7:
                                    a.logger.error(o),
                                    e.next = 15;
                                    break;
                                case 10:
                                    return e.prev = 10,
                                    e.t0 = e.catch(1),
                                    e.next = 14,
                                    a.sendError(s, t, e.t0);
                                case 14:
                                    a.logger.error(e.t0);
                                case 15:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[1, 10]])
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.onUnknownRpcMethodResponse = function(e) {
                    a.registeredMethods.includes(e) || a.logger.error(He("WC_METHOD_UNSUPPORTED", e))
                }
                ,
                this.isValidPair = function(e) {
                    if (!at(e)) {
                        var t = ze("MISSING_OR_INVALID", "pair() params: ".concat(e)).message;
                        throw new Error(t)
                    }
                    if (!function(e) {
                        if (Ge(e, !1))
                            try {
                                return typeof new URL(e) < "u"
                            } catch (t) {
                                return !1
                            }
                        return !1
                    }(e.uri)) {
                        var r = ze("MISSING_OR_INVALID", "pair() uri: ".concat(e.uri)).message;
                        throw new Error(r)
                    }
                }
                ,
                this.isValidPing = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (at(t)) {
                                        e.next = 3;
                                        break
                                    }
                                    throw r = ze("MISSING_OR_INVALID", "ping() params: ".concat(t)),
                                    s = r.message,
                                    new Error(s);
                                case 3:
                                    return i = t.topic,
                                    e.next = 6,
                                    a.isValidPairingTopic(i);
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.isValidDisconnect = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (at(t)) {
                                        e.next = 3;
                                        break
                                    }
                                    throw r = ze("MISSING_OR_INVALID", "disconnect() params: ".concat(t)),
                                    s = r.message,
                                    new Error(s);
                                case 3:
                                    return i = t.topic,
                                    e.next = 6,
                                    a.isValidPairingTopic(i);
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.isValidPairingTopic = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o, c, u;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (Ge(t, !1)) {
                                        e.next = 3;
                                        break
                                    }
                                    throw r = ze("MISSING_OR_INVALID", "pairing topic should be a string: ".concat(t)),
                                    s = r.message,
                                    new Error(s);
                                case 3:
                                    if (a.pairings.keys.includes(t)) {
                                        e.next = 6;
                                        break
                                    }
                                    throw i = ze("NO_MATCHING_KEY", "pairing topic doesn't exist: ".concat(t)),
                                    o = i.message,
                                    new Error(o);
                                case 6:
                                    if (!Pe(a.pairings.get(t).expiry)) {
                                        e.next = 11;
                                        break
                                    }
                                    return e.next = 9,
                                    a.deletePairing(t);
                                case 9:
                                    throw c = ze("EXPIRED", "pairing topic: ".concat(t)),
                                    u = c.message,
                                    new Error(u);
                                case 11:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.core = t,
                this.logger = (0,
                w.generateChildLogger)(r, this.name),
                this.pairings = new us(this.core,this.logger,this.name,this.storagePrefix)
            }
            return (0,
            a.Z)(e, [{
                key: "context",
                get: function() {
                    return (0,
                    w.getLoggerContext)(this.logger)
                }
            }, {
                key: "isInitialized",
                value: function() {
                    if (!this.initialized) {
                        var e = ze("NOT_INITIALIZED", this.name).message;
                        throw new Error(e)
                    }
                }
            }, {
                key: "registerRelayerEvents",
                value: function() {
                    var e = this;
                    this.core.relayer.on(un, function() {
                        var t = (0,
                        s.Z)((0,
                        n.Z)().mark((function t(r) {
                            var s, i, a;
                            return (0,
                            n.Z)().wrap((function(t) {
                                for (; ; )
                                    switch (t.prev = t.next) {
                                    case 0:
                                        if (s = r.topic,
                                        i = r.message,
                                        !e.ignoredPayloadTypes.includes(e.core.crypto.getPayloadType(i))) {
                                            t.next = 3;
                                            break
                                        }
                                        return t.abrupt("return");
                                    case 3:
                                        return t.next = 5,
                                        e.core.crypto.decode(s, i);
                                    case 5:
                                        if (a = t.sent,
                                        !(0,
                                        mt.isJsonRpcRequest)(a)) {
                                            t.next = 10;
                                            break
                                        }
                                        e.core.history.set(s, a),
                                        e.onRelayEventRequest({
                                            topic: s,
                                            payload: a
                                        }),
                                        t.next = 15;
                                        break;
                                    case 10:
                                        if (t.t0 = (0,
                                        mt.isJsonRpcResponse)(a),
                                        !t.t0) {
                                            t.next = 15;
                                            break
                                        }
                                        return t.next = 14,
                                        e.core.history.resolve(a);
                                    case 14:
                                        e.onRelayEventResponse({
                                            topic: s,
                                            payload: a
                                        });
                                    case 15:
                                    case "end":
                                        return t.stop()
                                    }
                            }
                            ), t)
                        }
                        )));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }())
                }
            }, {
                key: "registerExpirerEvents",
                value: function() {
                    var e = this;
                    this.core.expirer.on(Cn, function() {
                        var t = (0,
                        s.Z)((0,
                        n.Z)().mark((function t(r) {
                            var s, i;
                            return (0,
                            n.Z)().wrap((function(t) {
                                for (; ; )
                                    switch (t.prev = t.next) {
                                    case 0:
                                        if (s = Ze(r.target),
                                        i = s.topic,
                                        t.t0 = i && e.pairings.keys.includes(i),
                                        !t.t0) {
                                            t.next = 6;
                                            break
                                        }
                                        return t.next = 5,
                                        e.deletePairing(i, !0);
                                    case 5:
                                        e.events.emit("pairing_expire", {
                                            topic: i
                                        });
                                    case 6:
                                    case "end":
                                        return t.stop()
                                    }
                            }
                            ), t)
                        }
                        )));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }())
                }
            }]),
            e
        }()
          , ps = function(e) {
            (0,
            f.Z)(r, e);
            var t = (0,
            d.Z)(r);
            function r(e, a) {
                var o;
                return (0,
                i.Z)(this, r),
                (o = t.call(this, e, a)).core = e,
                o.logger = a,
                o.records = new Map,
                o.events = new m.EventEmitter,
                o.name = "history",
                o.version = "0.3",
                o.cached = [],
                o.initialized = !1,
                o.storagePrefix = tn,
                o.init = (0,
                s.Z)((0,
                n.Z)().mark((function e() {
                    return (0,
                    n.Z)().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (e.t0 = o.initialized,
                                e.t0) {
                                    e.next = 9;
                                    break
                                }
                                return o.logger.trace("Initialized"),
                                e.next = 5,
                                o.restore();
                            case 5:
                                o.cached.forEach((function(e) {
                                    return o.records.set(e.id, e)
                                }
                                )),
                                o.cached = [],
                                o.registerEventListeners(),
                                o.initialized = !0;
                            case 9:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                ))),
                o.set = function(e, t, r) {
                    if (o.isInitialized(),
                    o.logger.debug("Setting JSON-RPC request history record"),
                    o.logger.trace({
                        type: "method",
                        method: "set",
                        topic: e,
                        request: t,
                        chainId: r
                    }),
                    !o.records.has(t.id)) {
                        var n = {
                            id: t.id,
                            topic: e,
                            request: {
                                method: t.method,
                                params: t.params || null
                            },
                            chainId: r
                        };
                        o.records.set(n.id, n),
                        o.events.emit(In, n)
                    }
                }
                ,
                o.resolve = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (o.isInitialized(),
                                    o.logger.debug("Updating JSON-RPC response history record"),
                                    o.logger.trace({
                                        type: "method",
                                        method: "update",
                                        response: t
                                    }),
                                    o.records.has(t.id)) {
                                        e.next = 2;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 2:
                                    return e.next = 4,
                                    o.getRecord(t.id);
                                case 4:
                                    typeof (r = e.sent).response > "u" && (r.response = (0,
                                    mt.isJsonRpcError)(t) ? {
                                        error: t.error
                                    } : {
                                        result: t.result
                                    },
                                    o.records.set(r.id, r),
                                    o.events.emit(Nn, r));
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                o.get = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return o.isInitialized(),
                                    o.logger.debug("Getting record"),
                                    o.logger.trace({
                                        type: "method",
                                        method: "get",
                                        topic: t,
                                        id: r
                                    }),
                                    e.next = 5,
                                    o.getRecord(r);
                                case 5:
                                    return e.abrupt("return", e.sent);
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                o.delete = function(e, t) {
                    o.isInitialized(),
                    o.logger.debug("Deleting record"),
                    o.logger.trace({
                        type: "method",
                        method: "delete",
                        id: t
                    }),
                    o.values.forEach((function(r) {
                        if (r.topic === e) {
                            if (typeof t < "u" && r.id !== t)
                                return;
                            o.records.delete(r.id),
                            o.events.emit(Rn, r)
                        }
                    }
                    ))
                }
                ,
                o.exists = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (o.isInitialized(),
                                    !o.records.has(r)) {
                                        e.next = 9;
                                        break
                                    }
                                    return e.next = 4,
                                    o.getRecord(r);
                                case 4:
                                    e.t1 = e.sent.topic,
                                    e.t2 = t,
                                    e.t0 = e.t1 === e.t2,
                                    e.next = 10;
                                    break;
                                case 9:
                                    e.t0 = !1;
                                case 10:
                                    return e.abrupt("return", e.t0);
                                case 11:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                o.on = function(e, t) {
                    o.events.on(e, t)
                }
                ,
                o.once = function(e, t) {
                    o.events.once(e, t)
                }
                ,
                o.off = function(e, t) {
                    o.events.off(e, t)
                }
                ,
                o.removeListener = function(e, t) {
                    o.events.removeListener(e, t)
                }
                ,
                o.logger = (0,
                w.generateChildLogger)(a, o.name),
                o
            }
            return (0,
            a.Z)(r, [{
                key: "context",
                get: function() {
                    return (0,
                    w.getLoggerContext)(this.logger)
                }
            }, {
                key: "storageKey",
                get: function() {
                    return this.storagePrefix + this.version + "//" + this.name
                }
            }, {
                key: "size",
                get: function() {
                    return this.records.size
                }
            }, {
                key: "keys",
                get: function() {
                    return Array.from(this.records.keys())
                }
            }, {
                key: "values",
                get: function() {
                    return Array.from(this.records.values())
                }
            }, {
                key: "pending",
                get: function() {
                    var e = [];
                    return this.values.forEach((function(t) {
                        if (!(typeof t.response < "u")) {
                            var r = {
                                topic: t.topic,
                                request: (0,
                                mt.formatJsonRpcRequest)(t.request.method, t.request.params, t.id),
                                chainId: t.chainId
                            };
                            return e.push(r)
                        }
                    }
                    )),
                    e
                }
            }, {
                key: "setJsonRpcRecords",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.core.storage.setItem(this.storageKey, t);
                                case 2:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getJsonRpcRecords",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.core.storage.getItem(this.storageKey);
                                case 2:
                                    return e.abrupt("return", e.sent);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getRecord",
                value: function(e) {
                    this.isInitialized();
                    var t = this.records.get(e);
                    if (!t) {
                        var r = ze("NO_MATCHING_KEY", "".concat(this.name, ": ").concat(e)).message;
                        throw new Error(r)
                    }
                    return t
                }
            }, {
                key: "persist",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.setJsonRpcRecords(this.values);
                                case 2:
                                    this.events.emit(Sn);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "restore",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t, r, s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0,
                                    e.next = 3,
                                    this.getJsonRpcRecords();
                                case 3:
                                    if (!(typeof (t = e.sent) > "u") && t.length) {
                                        e.next = 6;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 6:
                                    if (!this.records.size) {
                                        e.next = 9;
                                        break
                                    }
                                    throw r = ze("RESTORE_WILL_OVERRIDE", this.name),
                                    s = r.message,
                                    this.logger.error(s),
                                    new Error(s);
                                case 9:
                                    this.cached = t,
                                    this.logger.debug("Successfully Restored records for ".concat(this.name)),
                                    this.logger.trace({
                                        type: "method",
                                        method: "restore",
                                        records: this.values
                                    }),
                                    e.next = 15;
                                    break;
                                case 12:
                                    e.prev = 12,
                                    e.t0 = e.catch(0),
                                    this.logger.debug("Failed to Restore records for ".concat(this.name)),
                                    this.logger.error(e.t0);
                                case 15:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[0, 12]])
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "registerEventListeners",
                value: function() {
                    var e = this;
                    this.events.on(In, (function(t) {
                        var r = In;
                        e.logger.info("Emitting ".concat(r)),
                        e.logger.debug({
                            type: "event",
                            event: r,
                            record: t
                        }),
                        e.persist()
                    }
                    )),
                    this.events.on(Nn, (function(t) {
                        var r = Nn;
                        e.logger.info("Emitting ".concat(r)),
                        e.logger.debug({
                            type: "event",
                            event: r,
                            record: t
                        }),
                        e.persist()
                    }
                    )),
                    this.events.on(Rn, (function(t) {
                        var r = Rn;
                        e.logger.info("Emitting ".concat(r)),
                        e.logger.debug({
                            type: "event",
                            event: r,
                            record: t
                        }),
                        e.persist()
                    }
                    ))
                }
            }, {
                key: "isInitialized",
                value: function() {
                    if (!this.initialized) {
                        var e = ze("NOT_INITIALIZED", this.name).message;
                        throw new Error(e)
                    }
                }
            }]),
            r
        }(x.yy)
          , hs = function(e) {
            (0,
            f.Z)(r, e);
            var t = (0,
            d.Z)(r);
            function r(e, a) {
                var o;
                return (0,
                i.Z)(this, r),
                (o = t.call(this, e, a)).core = e,
                o.logger = a,
                o.expirations = new Map,
                o.events = new m.EventEmitter,
                o.name = "expirer",
                o.version = "0.3",
                o.cached = [],
                o.initialized = !1,
                o.storagePrefix = tn,
                o.init = (0,
                s.Z)((0,
                n.Z)().mark((function e() {
                    return (0,
                    n.Z)().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (e.t0 = o.initialized,
                                e.t0) {
                                    e.next = 9;
                                    break
                                }
                                return o.logger.trace("Initialized"),
                                e.next = 5,
                                o.restore();
                            case 5:
                                o.cached.forEach((function(e) {
                                    return o.expirations.set(e.target, e)
                                }
                                )),
                                o.cached = [],
                                o.registerEventListeners(),
                                o.initialized = !0;
                            case 9:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                ))),
                o.has = function(e) {
                    try {
                        var t = o.formatTarget(e);
                        return typeof o.getExpiration(t) < "u"
                    } catch (r) {
                        return !1
                    }
                }
                ,
                o.set = function(e, t) {
                    o.isInitialized();
                    var r = o.formatTarget(e)
                      , n = {
                        target: r,
                        expiry: t
                    };
                    o.expirations.set(r, n),
                    o.checkExpiry(r, n),
                    o.events.emit(Tn, {
                        target: r,
                        expiration: n
                    })
                }
                ,
                o.get = function(e) {
                    o.isInitialized();
                    var t = o.formatTarget(e);
                    return o.getExpiration(t)
                }
                ,
                o.del = function(e) {
                    if (o.isInitialized(),
                    o.has(e)) {
                        var t = o.formatTarget(e)
                          , r = o.getExpiration(t);
                        o.expirations.delete(t),
                        o.events.emit(On, {
                            target: t,
                            expiration: r
                        })
                    }
                }
                ,
                o.on = function(e, t) {
                    o.events.on(e, t)
                }
                ,
                o.once = function(e, t) {
                    o.events.once(e, t)
                }
                ,
                o.off = function(e, t) {
                    o.events.off(e, t)
                }
                ,
                o.removeListener = function(e, t) {
                    o.events.removeListener(e, t)
                }
                ,
                o.logger = (0,
                w.generateChildLogger)(a, o.name),
                o
            }
            return (0,
            a.Z)(r, [{
                key: "context",
                get: function() {
                    return (0,
                    w.getLoggerContext)(this.logger)
                }
            }, {
                key: "storageKey",
                get: function() {
                    return this.storagePrefix + this.version + "//" + this.name
                }
            }, {
                key: "length",
                get: function() {
                    return this.expirations.size
                }
            }, {
                key: "keys",
                get: function() {
                    return Array.from(this.expirations.keys())
                }
            }, {
                key: "values",
                get: function() {
                    return Array.from(this.expirations.values())
                }
            }, {
                key: "formatTarget",
                value: function(e) {
                    if ("string" == typeof e)
                        return function(e) {
                            return Ee("topic", e)
                        }(e);
                    if ("number" == typeof e)
                        return function(e) {
                            return Ee("id", e)
                        }(e);
                    var t = ze("UNKNOWN_TYPE", "Target type: ".concat(typeof e)).message;
                    throw new Error(t)
                }
            }, {
                key: "setExpirations",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.core.storage.setItem(this.storageKey, t);
                                case 2:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getExpirations",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.core.storage.getItem(this.storageKey);
                                case 2:
                                    return e.abrupt("return", e.sent);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "persist",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.setExpirations(this.values);
                                case 2:
                                    this.events.emit(Ln);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "restore",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t, r, s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0,
                                    e.next = 3,
                                    this.getExpirations();
                                case 3:
                                    if (!(typeof (t = e.sent) > "u") && t.length) {
                                        e.next = 6;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 6:
                                    if (!this.expirations.size) {
                                        e.next = 9;
                                        break
                                    }
                                    throw r = ze("RESTORE_WILL_OVERRIDE", this.name),
                                    s = r.message,
                                    this.logger.error(s),
                                    new Error(s);
                                case 9:
                                    this.cached = t,
                                    this.logger.debug("Successfully Restored expirations for ".concat(this.name)),
                                    this.logger.trace({
                                        type: "method",
                                        method: "restore",
                                        expirations: this.values
                                    }),
                                    e.next = 15;
                                    break;
                                case 12:
                                    e.prev = 12,
                                    e.t0 = e.catch(0),
                                    this.logger.debug("Failed to Restore expirations for ".concat(this.name)),
                                    this.logger.error(e.t0);
                                case 15:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[0, 12]])
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getExpiration",
                value: function(e) {
                    var t = this.expirations.get(e);
                    if (!t) {
                        var r = ze("NO_MATCHING_KEY", "".concat(this.name, ": ").concat(e)).message;
                        throw this.logger.error(r),
                        new Error(r)
                    }
                    return t
                }
            }, {
                key: "checkExpiry",
                value: function(e, t) {
                    var r = t.expiry;
                    (0,
                    O.toMiliseconds)(r) - Date.now() <= 0 && this.expire(e, t)
                }
            }, {
                key: "expire",
                value: function(e, t) {
                    this.expirations.delete(e),
                    this.events.emit(Cn, {
                        target: e,
                        expiration: t
                    })
                }
            }, {
                key: "checkExpirations",
                value: function() {
                    var e = this;
                    this.core.relayer.connected && this.expirations.forEach((function(t, r) {
                        return e.checkExpiry(r, t)
                    }
                    ))
                }
            }, {
                key: "registerEventListeners",
                value: function() {
                    var e = this;
                    this.core.heartbeat.on(k.HEARTBEAT_EVENTS.pulse, (function() {
                        return e.checkExpirations()
                    }
                    )),
                    this.events.on(Tn, (function(t) {
                        var r = Tn;
                        e.logger.info("Emitting ".concat(r)),
                        e.logger.debug({
                            type: "event",
                            event: r,
                            data: t
                        }),
                        e.persist()
                    }
                    )),
                    this.events.on(Cn, (function(t) {
                        var r = Cn;
                        e.logger.info("Emitting ".concat(r)),
                        e.logger.debug({
                            type: "event",
                            event: r,
                            data: t
                        }),
                        e.persist()
                    }
                    )),
                    this.events.on(On, (function(t) {
                        var r = On;
                        e.logger.info("Emitting ".concat(r)),
                        e.logger.debug({
                            type: "event",
                            event: r,
                            data: t
                        }),
                        e.persist()
                    }
                    ))
                }
            }, {
                key: "isInitialized",
                value: function() {
                    if (!this.initialized) {
                        var e = ze("NOT_INITIALIZED", this.name).message;
                        throw new Error(e)
                    }
                }
            }]),
            r
        }(x.D3)
          , fs = Object.defineProperty
          , ds = Object.getOwnPropertySymbols
          , vs = Object.prototype.hasOwnProperty
          , gs = Object.prototype.propertyIsEnumerable
          , ms = function(e, t, r) {
            return t in e ? fs(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r
            }) : e[t] = r
        }
          , ys = function(e, t) {
            for (var r in t || (t = {}))
                vs.call(t, r) && ms(e, r, t[r]);
            if (ds) {
                var n, s = (0,
                u.Z)(ds(t));
                try {
                    for (s.s(); !(n = s.n()).done; ) {
                        r = n.value;
                        gs.call(t, r) && ms(e, r, t[r])
                    }
                } catch (i) {
                    s.e(i)
                } finally {
                    s.f()
                }
            }
            return e
        }
          , bs = function(e) {
            (0,
            f.Z)(r, e);
            var t = (0,
            d.Z)(r);
            function r(e) {
                var n;
                (0,
                i.Z)(this, r),
                (n = t.call(this, e)).protocol = "wc",
                n.version = 2,
                n.name = en,
                n.events = new m.EventEmitter,
                n.initialized = !1,
                n.on = function(e, t) {
                    return n.events.on(e, t)
                }
                ,
                n.once = function(e, t) {
                    return n.events.once(e, t)
                }
                ,
                n.off = function(e, t) {
                    return n.events.off(e, t)
                }
                ,
                n.removeListener = function(e, t) {
                    return n.events.removeListener(e, t)
                }
                ,
                n.projectId = null === e || void 0 === e ? void 0 : e.projectId,
                n.relayUrl = (null === e || void 0 === e ? void 0 : e.relayUrl) || cn;
                var s = typeof (null === e || void 0 === e ? void 0 : e.logger) < "u" && "string" != typeof (null === e || void 0 === e ? void 0 : e.logger) ? e.logger : p()((0,
                w.getDefaultLoggerOptions)({
                    level: (null === e || void 0 === e ? void 0 : e.logger) || rn
                }));
                return n.logger = (0,
                w.generateChildLogger)(s, n.name),
                n.heartbeat = new k.HeartBeat,
                n.crypto = new Dn((0,
                h.Z)(n),n.logger,null === e || void 0 === e ? void 0 : e.keychain),
                n.history = new ps((0,
                h.Z)(n),n.logger),
                n.expirer = new hs((0,
                h.Z)(n),n.logger),
                n.storage = null != e && e.storage ? e.storage : new b.ZP(ys(ys({}, nn), null === e || void 0 === e ? void 0 : e.storageOptions)),
                n.relayer = new rs({
                    core: (0,
                    h.Z)(n),
                    logger: n.logger,
                    relayUrl: n.relayUrl,
                    projectId: n.projectId
                }),
                n.pairing = new ls((0,
                h.Z)(n),n.logger),
                n
            }
            return (0,
            a.Z)(r, [{
                key: "context",
                get: function() {
                    return (0,
                    w.getLoggerContext)(this.logger)
                }
            }, {
                key: "start",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (e.t0 = this.initialized,
                                    e.t0) {
                                        e.next = 4;
                                        break
                                    }
                                    return e.next = 4,
                                    this.initialize();
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "initialize",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return this.logger.trace("Initialized"),
                                    e.prev = 1,
                                    e.next = 4,
                                    this.crypto.init();
                                case 4:
                                    return e.next = 6,
                                    this.history.init();
                                case 6:
                                    return e.next = 8,
                                    this.expirer.init();
                                case 8:
                                    return e.next = 10,
                                    this.relayer.init();
                                case 10:
                                    return e.next = 12,
                                    this.heartbeat.init();
                                case 12:
                                    return e.next = 14,
                                    this.pairing.init();
                                case 14:
                                    this.initialized = !0,
                                    this.logger.info("Core Initialization Success"),
                                    e.next = 21;
                                    break;
                                case 18:
                                    throw e.prev = 18,
                                    e.t0 = e.catch(1),
                                    this.logger.warn("Core Initialization Failure at epoch ".concat(Date.now()), e.t0),
                                    this.logger.error(e.t0.message),
                                    e.t0;
                                case 21:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[1, 18]])
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }], [{
                key: "init",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return s = new r(t),
                                    e.next = 3,
                                    s.initialize();
                                case 3:
                                    return e.abrupt("return", s);
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }]),
            r
        }(x.N1)
          , ks = bs
          , ws = "client"
          , xs = "".concat("wc", "@").concat(2, ":").concat(ws, ":")
          , Es = ws
          , Zs = "error"
          , _s = (O.THIRTY_DAYS,
        "Proposal expired")
          , Ps = O.SEVEN_DAYS
          , Is = {
            wc_sessionPropose: {
                req: {
                    ttl: O.FIVE_MINUTES,
                    prompt: !0,
                    tag: 1100
                },
                res: {
                    ttl: O.FIVE_MINUTES,
                    prompt: !1,
                    tag: 1101
                }
            },
            wc_sessionSettle: {
                req: {
                    ttl: O.FIVE_MINUTES,
                    prompt: !1,
                    tag: 1102
                },
                res: {
                    ttl: O.FIVE_MINUTES,
                    prompt: !1,
                    tag: 1103
                }
            },
            wc_sessionUpdate: {
                req: {
                    ttl: O.ONE_DAY,
                    prompt: !1,
                    tag: 1104
                },
                res: {
                    ttl: O.ONE_DAY,
                    prompt: !1,
                    tag: 1105
                }
            },
            wc_sessionExtend: {
                req: {
                    ttl: O.ONE_DAY,
                    prompt: !1,
                    tag: 1106
                },
                res: {
                    ttl: O.ONE_DAY,
                    prompt: !1,
                    tag: 1107
                }
            },
            wc_sessionRequest: {
                req: {
                    ttl: O.FIVE_MINUTES,
                    prompt: !0,
                    tag: 1108
                },
                res: {
                    ttl: O.FIVE_MINUTES,
                    prompt: !1,
                    tag: 1109
                }
            },
            wc_sessionEvent: {
                req: {
                    ttl: O.FIVE_MINUTES,
                    prompt: !0,
                    tag: 1110
                },
                res: {
                    ttl: O.FIVE_MINUTES,
                    prompt: !1,
                    tag: 1111
                }
            },
            wc_sessionDelete: {
                req: {
                    ttl: O.ONE_DAY,
                    prompt: !1,
                    tag: 1112
                },
                res: {
                    ttl: O.ONE_DAY,
                    prompt: !1,
                    tag: 1113
                }
            },
            wc_sessionPing: {
                req: {
                    ttl: O.THIRTY_SECONDS,
                    prompt: !1,
                    tag: 1114
                },
                res: {
                    ttl: O.THIRTY_SECONDS,
                    prompt: !1,
                    tag: 1115
                }
            }
        }
          , Ns = {
            min: O.FIVE_MINUTES,
            max: O.SEVEN_DAYS
        }
          , Rs = Object.defineProperty
          , Ss = Object.defineProperties
          , Ts = Object.getOwnPropertyDescriptors
          , Os = Object.getOwnPropertySymbols
          , Cs = Object.prototype.hasOwnProperty
          , Ls = Object.prototype.propertyIsEnumerable
          , As = function(e, t, r) {
            return t in e ? Rs(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r
            }) : e[t] = r
        }
          , Ds = function(e, t) {
            for (var r in t || (t = {}))
                Cs.call(t, r) && As(e, r, t[r]);
            if (Os) {
                var n, s = (0,
                u.Z)(Os(t));
                try {
                    for (s.s(); !(n = s.n()).done; ) {
                        r = n.value;
                        Ls.call(t, r) && As(e, r, t[r])
                    }
                } catch (i) {
                    s.e(i)
                } finally {
                    s.f()
                }
            }
            return e
        }
          , Bs = function(e, t) {
            return Ss(e, Ts(t))
        }
          , qs = function(e) {
            (0,
            f.Z)(r, e);
            var t = (0,
            d.Z)(r);
            function r(e) {
                var a;
                return (0,
                i.Z)(this, r),
                (a = t.call(this, e)).name = "engine",
                a.events = new (y()),
                a.initialized = !1,
                a.ignoredPayloadTypes = [K],
                a.init = (0,
                s.Z)((0,
                n.Z)().mark((function e() {
                    return (0,
                    n.Z)().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (e.t0 = a.initialized,
                                e.t0) {
                                    e.next = 8;
                                    break
                                }
                                return e.next = 4,
                                a.cleanup();
                            case 4:
                                a.registerRelayerEvents(),
                                a.registerExpirerEvents(),
                                a.client.core.pairing.register({
                                    methods: Object.keys(Is)
                                }),
                                a.initialized = !0;
                            case 8:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                ))),
                a.connect = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, i, o, c, u, l, p, h, f, d, v, g, m, y, b, k, w, x, E, Z, _, P;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.isInitialized(),
                                    r = Bs(Ds({}, t), {
                                        requiredNamespaces: t.requiredNamespaces || {},
                                        optionalNamespaces: t.optionalNamespaces || {}
                                    }),
                                    e.next = 4,
                                    a.isValidConnect(r);
                                case 4:
                                    if (i = r.pairingTopic,
                                    o = r.requiredNamespaces,
                                    c = r.optionalNamespaces,
                                    u = r.sessionProperties,
                                    l = r.relays,
                                    f = !1,
                                    (p = i) && (f = a.client.core.pairing.pairings.get(p).active),
                                    p && f) {
                                        e.next = 13;
                                        break
                                    }
                                    return e.next = 9,
                                    a.client.core.pairing.create();
                                case 9:
                                    d = e.sent,
                                    v = d.topic,
                                    g = d.uri,
                                    p = v,
                                    h = g;
                                case 13:
                                    return e.next = 15,
                                    a.client.core.crypto.generateKeyPair();
                                case 15:
                                    if (m = e.sent,
                                    y = Ds({
                                        requiredNamespaces: o,
                                        optionalNamespaces: c,
                                        relays: null !== l && void 0 !== l ? l : [{
                                            protocol: "irn"
                                        }],
                                        proposer: {
                                            publicKey: m,
                                            metadata: a.client.metadata
                                        }
                                    }, u && {
                                        sessionProperties: u
                                    }),
                                    b = we(O.FIVE_MINUTES, _s),
                                    k = b.reject,
                                    w = b.resolve,
                                    x = b.done,
                                    a.events.once(Ie("session_connect"), function() {
                                        var e = (0,
                                        s.Z)((0,
                                        n.Z)().mark((function e(t) {
                                            var r, s, i;
                                            return (0,
                                            n.Z)().wrap((function(e) {
                                                for (; ; )
                                                    switch (e.prev = e.next) {
                                                    case 0:
                                                        if (r = t.error,
                                                        s = t.session,
                                                        !r) {
                                                            e.next = 5;
                                                            break
                                                        }
                                                        k(r),
                                                        e.next = 17;
                                                        break;
                                                    case 5:
                                                        if (!s) {
                                                            e.next = 17;
                                                            break
                                                        }
                                                        return s.self.publicKey = m,
                                                        i = Bs(Ds({}, s), {
                                                            requiredNamespaces: s.requiredNamespaces,
                                                            optionalNamespaces: s.optionalNamespaces
                                                        }),
                                                        e.next = 10,
                                                        a.client.session.set(s.topic, i);
                                                    case 10:
                                                        return e.next = 12,
                                                        a.setExpiry(s.topic, s.expiry);
                                                    case 12:
                                                        if (e.t0 = p,
                                                        !e.t0) {
                                                            e.next = 16;
                                                            break
                                                        }
                                                        return e.next = 16,
                                                        a.client.core.pairing.updateMetadata({
                                                            topic: p,
                                                            metadata: s.peer.metadata
                                                        });
                                                    case 16:
                                                        w(i);
                                                    case 17:
                                                    case "end":
                                                        return e.stop()
                                                    }
                                            }
                                            ), e)
                                        }
                                        )));
                                        return function(t) {
                                            return e.apply(this, arguments)
                                        }
                                    }()),
                                    p) {
                                        e.next = 24;
                                        break
                                    }
                                    throw E = ze("NO_MATCHING_KEY", "connect() pairing topic: ".concat(p)),
                                    Z = E.message,
                                    new Error(Z);
                                case 24:
                                    return e.next = 26,
                                    a.sendRequest(p, "wc_sessionPropose", y);
                                case 26:
                                    return _ = e.sent,
                                    P = _e(O.FIVE_MINUTES),
                                    e.next = 30,
                                    a.setProposal(_, Ds({
                                        id: _,
                                        expiry: P
                                    }, y));
                                case 30:
                                    return e.abrupt("return", {
                                        uri: h,
                                        approval: x
                                    });
                                case 31:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.pair = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.isInitialized(),
                                    e.next = 3,
                                    a.client.core.pairing.pair(t);
                                case 3:
                                    return e.abrupt("return", e.sent);
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.approve = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o, c, u, l, p, h, f, d, v, g, m, y, b, k, w, x;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.isInitialized(),
                                    e.next = 3,
                                    a.isValidApprove(t);
                                case 3:
                                    return r = t.id,
                                    s = t.relayProtocol,
                                    i = t.namespaces,
                                    o = t.sessionProperties,
                                    c = a.client.proposal.get(r),
                                    u = c.pairingTopic,
                                    l = c.proposer,
                                    p = c.requiredNamespaces,
                                    h = c.optionalNamespaces,
                                    Fe(p) || (p = Ue(i, "approve()")),
                                    e.next = 8,
                                    a.client.core.crypto.generateKeyPair();
                                case 8:
                                    return f = e.sent,
                                    d = l.publicKey,
                                    e.next = 12,
                                    a.client.core.crypto.generateSharedKey(f, d);
                                case 12:
                                    if (v = e.sent,
                                    e.t0 = u && r,
                                    !e.t0) {
                                        e.next = 23;
                                        break
                                    }
                                    return e.next = 17,
                                    a.client.core.pairing.updateMetadata({
                                        topic: u,
                                        metadata: l.metadata
                                    });
                                case 17:
                                    return e.next = 19,
                                    a.sendResult(r, u, {
                                        relay: {
                                            protocol: null !== s && void 0 !== s ? s : "irn"
                                        },
                                        responderPublicKey: f
                                    });
                                case 19:
                                    return e.next = 21,
                                    a.client.proposal.delete(r, He("USER_DISCONNECTED"));
                                case 21:
                                    return e.next = 23,
                                    a.client.core.pairing.activate({
                                        topic: u
                                    });
                                case 23:
                                    return g = Ds({
                                        relay: {
                                            protocol: null !== s && void 0 !== s ? s : "irn"
                                        },
                                        namespaces: i,
                                        requiredNamespaces: p,
                                        optionalNamespaces: h,
                                        controller: {
                                            publicKey: f,
                                            metadata: a.client.metadata
                                        },
                                        expiry: _e(Ps)
                                    }, o && {
                                        sessionProperties: o
                                    }),
                                    e.next = 26,
                                    a.client.core.relayer.subscribe(v);
                                case 26:
                                    return e.next = 28,
                                    a.sendRequest(v, "wc_sessionSettle", g);
                                case 28:
                                    return m = e.sent,
                                    y = we(),
                                    b = y.done,
                                    k = y.resolve,
                                    w = y.reject,
                                    a.events.once(Ie("session_approve", m), (function(e) {
                                        var t = e.error;
                                        t ? w(t) : k(a.client.session.get(v))
                                    }
                                    )),
                                    x = Bs(Ds({}, g), {
                                        topic: v,
                                        acknowledged: !1,
                                        self: g.controller,
                                        peer: {
                                            publicKey: l.publicKey,
                                            metadata: l.metadata
                                        },
                                        controller: f
                                    }),
                                    e.next = 37,
                                    a.client.session.set(v, x);
                                case 37:
                                    return e.next = 39,
                                    a.setExpiry(v, _e(Ps));
                                case 39:
                                    return e.abrupt("return", {
                                        topic: v,
                                        acknowledged: b
                                    });
                                case 40:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.reject = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.isInitialized(),
                                    e.next = 3,
                                    a.isValidReject(t);
                                case 3:
                                    if (r = t.id,
                                    s = t.reason,
                                    i = a.client.proposal.get(r),
                                    o = i.pairingTopic,
                                    e.t0 = o,
                                    !e.t0) {
                                        e.next = 10;
                                        break
                                    }
                                    return e.next = 8,
                                    a.sendError(r, o, s);
                                case 8:
                                    return e.next = 10,
                                    a.client.proposal.delete(r, He("USER_DISCONNECTED"));
                                case 10:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.update = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o, c, u, l;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.isInitialized(),
                                    e.next = 3,
                                    a.isValidUpdate(t);
                                case 3:
                                    return r = t.topic,
                                    s = t.namespaces,
                                    e.next = 7,
                                    a.sendRequest(r, "wc_sessionUpdate", {
                                        namespaces: s
                                    });
                                case 7:
                                    return i = e.sent,
                                    o = we(),
                                    c = o.done,
                                    u = o.resolve,
                                    l = o.reject,
                                    a.events.once(Ie("session_update", i), (function(e) {
                                        var t = e.error;
                                        t ? l(t) : u()
                                    }
                                    )),
                                    e.next = 15,
                                    a.client.session.update(r, {
                                        namespaces: s
                                    });
                                case 15:
                                    return e.abrupt("return", {
                                        acknowledged: c
                                    });
                                case 16:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.extend = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o, c, u;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.isInitialized(),
                                    e.next = 3,
                                    a.isValidExtend(t);
                                case 3:
                                    return r = t.topic,
                                    e.next = 6,
                                    a.sendRequest(r, "wc_sessionExtend", {});
                                case 6:
                                    return s = e.sent,
                                    i = we(),
                                    o = i.done,
                                    c = i.resolve,
                                    u = i.reject,
                                    a.events.once(Ie("session_extend", s), (function(e) {
                                        var t = e.error;
                                        t ? u(t) : c()
                                    }
                                    )),
                                    e.next = 14,
                                    a.setExpiry(r, _e(Ps));
                                case 14:
                                    return e.abrupt("return", {
                                        acknowledged: o
                                    });
                                case 15:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.request = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o, c, u, l, p, h;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.isInitialized(),
                                    e.next = 3,
                                    a.isValidRequest(t);
                                case 3:
                                    return r = t.chainId,
                                    s = t.request,
                                    i = t.topic,
                                    o = t.expiry,
                                    e.next = 9,
                                    a.sendRequest(i, "wc_sessionRequest", {
                                        request: s,
                                        chainId: r
                                    }, o);
                                case 9:
                                    return c = e.sent,
                                    u = we(o),
                                    l = u.done,
                                    p = u.resolve,
                                    h = u.reject,
                                    a.events.once(Ie("session_request", c), (function(e) {
                                        var t = e.error
                                          , r = e.result;
                                        t ? h(t) : p(r)
                                    }
                                    )),
                                    a.client.events.emit("session_request_sent", {
                                        topic: i,
                                        request: s,
                                        chainId: r,
                                        id: c
                                    }),
                                    e.next = 18,
                                    l();
                                case 18:
                                    return e.abrupt("return", e.sent);
                                case 19:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.respond = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.isInitialized(),
                                    e.next = 3,
                                    a.isValidRespond(t);
                                case 3:
                                    if (r = t.topic,
                                    s = t.response,
                                    i = s.id,
                                    !(0,
                                    mt.isJsonRpcResult)(s)) {
                                        e.next = 9;
                                        break
                                    }
                                    return e.next = 7,
                                    a.sendResult(i, r, s.result);
                                case 7:
                                    e.next = 13;
                                    break;
                                case 9:
                                    if (e.t0 = (0,
                                    mt.isJsonRpcError)(s),
                                    !e.t0) {
                                        e.next = 13;
                                        break
                                    }
                                    return e.next = 13,
                                    a.sendError(i, r, s.error);
                                case 13:
                                    a.deletePendingSessionRequest(t.response.id, {
                                        message: "fulfilled",
                                        code: 0
                                    });
                                case 14:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.ping = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o, c, u;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.isInitialized(),
                                    e.next = 3,
                                    a.isValidPing(t);
                                case 3:
                                    if (r = t.topic,
                                    !a.client.session.keys.includes(r)) {
                                        e.next = 17;
                                        break
                                    }
                                    return e.next = 7,
                                    a.sendRequest(r, "wc_sessionPing", {});
                                case 7:
                                    return s = e.sent,
                                    i = we(),
                                    o = i.done,
                                    c = i.resolve,
                                    u = i.reject,
                                    a.events.once(Ie("session_ping", s), (function(e) {
                                        var t = e.error;
                                        t ? u(t) : c()
                                    }
                                    )),
                                    e.next = 15,
                                    o();
                                case 15:
                                    e.next = 21;
                                    break;
                                case 17:
                                    if (e.t0 = a.client.core.pairing.pairings.keys.includes(r),
                                    !e.t0) {
                                        e.next = 21;
                                        break
                                    }
                                    return e.next = 21,
                                    a.client.core.pairing.ping({
                                        topic: r
                                    });
                                case 21:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.emit = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.isInitialized(),
                                    e.next = 3,
                                    a.isValidEmit(t);
                                case 3:
                                    return r = t.topic,
                                    s = t.event,
                                    i = t.chainId,
                                    e.next = 6,
                                    a.sendRequest(r, "wc_sessionEvent", {
                                        event: s,
                                        chainId: i
                                    });
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.disconnect = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return a.isInitialized(),
                                    e.next = 3,
                                    a.isValidDisconnect(t);
                                case 3:
                                    if (r = t.topic,
                                    !a.client.session.keys.includes(r)) {
                                        e.next = 11;
                                        break
                                    }
                                    return e.next = 7,
                                    a.sendRequest(r, "wc_sessionDelete", He("USER_DISCONNECTED"));
                                case 7:
                                    return e.next = 9,
                                    a.deleteSession(r);
                                case 9:
                                    e.next = 13;
                                    break;
                                case 11:
                                    return e.next = 13,
                                    a.client.core.pairing.disconnect({
                                        topic: r
                                    });
                                case 13:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.find = function(e) {
                    return a.isInitialized(),
                    a.client.session.getAll().filter((function(t) {
                        return function(e, t) {
                            var r = t.requiredNamespaces
                              , n = Object.keys(e.namespaces)
                              , s = Object.keys(r)
                              , i = !0;
                            return !!ye(s, n) && (n.forEach((function(t) {
                                var n = e.namespaces[t]
                                  , s = n.accounts
                                  , a = n.methods
                                  , o = n.events
                                  , c = qe(s)
                                  , u = r[t];
                                (!ye(q(t, u), c) || !ye(u.methods, a) || !ye(u.events, o)) && (i = !1)
                            }
                            )),
                            i)
                        }(t, e)
                    }
                    ))
                }
                ,
                a.getPendingSessionRequests = function() {
                    return a.isInitialized(),
                    a.client.pendingRequest.getAll()
                }
                ,
                a.deleteSession = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s, i;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return s = a.client.session.get(t),
                                    i = s.self,
                                    e.next = 3,
                                    a.client.core.relayer.unsubscribe(t);
                                case 3:
                                    return e.next = 5,
                                    Promise.all([a.client.session.delete(t, He("USER_DISCONNECTED")), a.client.core.crypto.deleteKeyPair(i.publicKey), a.client.core.crypto.deleteSymKey(t), r ? Promise.resolve() : a.client.core.expirer.del(t)]);
                                case 5:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.deleteProposal = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    Promise.all([a.client.proposal.delete(t, He("USER_DISCONNECTED")), r ? Promise.resolve() : a.client.core.expirer.del(t)]);
                                case 2:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.deletePendingSessionRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s, i = arguments;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return s = i.length > 2 && void 0 !== i[2] && i[2],
                                    e.next = 3,
                                    Promise.all([a.client.pendingRequest.delete(t, r), s ? Promise.resolve() : a.client.core.expirer.del(t)]);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.setExpiry = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (e.t0 = a.client.session.keys.includes(t),
                                    !e.t0) {
                                        e.next = 4;
                                        break
                                    }
                                    return e.next = 4,
                                    a.client.session.update(t, {
                                        expiry: r
                                    });
                                case 4:
                                    a.client.core.expirer.set(t, r);
                                case 5:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.setProposal = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    a.client.proposal.set(t, r);
                                case 2:
                                    a.client.core.expirer.set(t, r.expiry);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.setPendingSessionRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return r = Is.wc_sessionRequest.req.ttl,
                                    s = t.id,
                                    i = t.topic,
                                    o = t.params,
                                    e.next = 3,
                                    a.client.pendingRequest.set(s, {
                                        id: s,
                                        topic: i,
                                        params: o
                                    });
                                case 3:
                                    r && a.client.core.expirer.set(s, _e(r));
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.sendRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r, s, i) {
                        var o, c, u;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return o = (0,
                                    mt.formatJsonRpcRequest)(r, s),
                                    e.next = 3,
                                    a.client.core.crypto.encode(t, o);
                                case 3:
                                    return c = e.sent,
                                    u = Is[r].req,
                                    e.abrupt("return", (i && (u.ttl = i),
                                    a.client.core.history.set(t, o),
                                    a.client.core.relayer.publish(t, c, u),
                                    o.id));
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r, n, s) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.sendResult = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r, s) {
                        var i, o, c, u;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return i = (0,
                                    mt.formatJsonRpcResult)(t, s),
                                    e.next = 3,
                                    a.client.core.crypto.encode(r, i);
                                case 3:
                                    return o = e.sent,
                                    e.next = 6,
                                    a.client.core.history.get(r, t);
                                case 6:
                                    return c = e.sent,
                                    u = Is[c.request.method].res,
                                    a.client.core.relayer.publish(r, o, u),
                                    e.next = 11,
                                    a.client.core.history.resolve(i);
                                case 11:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r, n) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.sendError = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r, s) {
                        var i, o, c, u;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return i = (0,
                                    mt.formatJsonRpcError)(t, s),
                                    e.next = 3,
                                    a.client.core.crypto.encode(r, i);
                                case 3:
                                    return o = e.sent,
                                    e.next = 6,
                                    a.client.core.history.get(r, t);
                                case 6:
                                    return c = e.sent,
                                    u = Is[c.request.method].res,
                                    a.client.core.relayer.publish(r, o, u),
                                    e.next = 11,
                                    a.client.core.history.resolve(i);
                                case 11:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r, n) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.cleanup = (0,
                s.Z)((0,
                n.Z)().mark((function e() {
                    var t, r;
                    return (0,
                    n.Z)().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return t = [],
                                r = [],
                                a.client.session.getAll().forEach((function(e) {
                                    Pe(e.expiry) && t.push(e.topic)
                                }
                                )),
                                a.client.proposal.getAll().forEach((function(e) {
                                    Pe(e.expiry) && r.push(e.id)
                                }
                                )),
                                e.next = 5,
                                Promise.all([].concat((0,
                                c.Z)(t.map((function(e) {
                                    return a.deleteSession(e)
                                }
                                ))), (0,
                                c.Z)(r.map((function(e) {
                                    return a.deleteProposal(e)
                                }
                                )))));
                            case 5:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                ))),
                a.onRelayEventRequest = function(e) {
                    var t = e.topic
                      , r = e.payload
                      , n = r.method;
                    switch (n) {
                    case "wc_sessionPropose":
                        return a.onSessionProposeRequest(t, r);
                    case "wc_sessionSettle":
                        return a.onSessionSettleRequest(t, r);
                    case "wc_sessionUpdate":
                        return a.onSessionUpdateRequest(t, r);
                    case "wc_sessionExtend":
                        return a.onSessionExtendRequest(t, r);
                    case "wc_sessionPing":
                        return a.onSessionPingRequest(t, r);
                    case "wc_sessionDelete":
                        return a.onSessionDeleteRequest(t, r);
                    case "wc_sessionRequest":
                        return a.onSessionRequest(t, r);
                    case "wc_sessionEvent":
                        return a.onSessionEventRequest(t, r);
                    default:
                        return a.client.logger.info("Unsupported request method ".concat(n))
                    }
                }
                ,
                a.onRelayEventResponse = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return r = t.topic,
                                    s = t.payload,
                                    e.next = 4,
                                    a.client.core.history.get(r, s.id);
                                case 4:
                                    i = e.sent.request.method,
                                    e.t0 = i,
                                    e.next = "wc_sessionPropose" === e.t0 ? 8 : "wc_sessionSettle" === e.t0 ? 9 : "wc_sessionUpdate" === e.t0 ? 10 : "wc_sessionExtend" === e.t0 ? 11 : "wc_sessionPing" === e.t0 ? 12 : "wc_sessionRequest" === e.t0 ? 13 : 14;
                                    break;
                                case 8:
                                    return e.abrupt("return", a.onSessionProposeResponse(r, s));
                                case 9:
                                    return e.abrupt("return", a.onSessionSettleResponse(r, s));
                                case 10:
                                    return e.abrupt("return", a.onSessionUpdateResponse(r, s));
                                case 11:
                                    return e.abrupt("return", a.onSessionExtendResponse(r, s));
                                case 12:
                                    return e.abrupt("return", a.onSessionPingResponse(r, s));
                                case 13:
                                    return e.abrupt("return", a.onSessionRequestResponse(r, s));
                                case 14:
                                    return e.abrupt("return", a.client.logger.info("Unsupported response method ".concat(i)));
                                case 15:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.onSessionProposeRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s, i, o, c;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return s = r.params,
                                    i = r.id,
                                    e.prev = 1,
                                    a.isValidConnect(Ds({}, r.params)),
                                    o = _e(O.FIVE_MINUTES),
                                    c = Ds({
                                        id: i,
                                        pairingTopic: t,
                                        expiry: o
                                    }, s),
                                    e.next = 6,
                                    a.setProposal(i, c);
                                case 6:
                                    a.client.events.emit("session_proposal", {
                                        id: i,
                                        params: c
                                    }),
                                    e.next = 14;
                                    break;
                                case 9:
                                    return e.prev = 9,
                                    e.t0 = e.catch(1),
                                    e.next = 13,
                                    a.sendError(i, t, e.t0);
                                case 13:
                                    a.client.logger.error(e.t0);
                                case 14:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[1, 9]])
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.onSessionProposeResponse = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s, i, o, c, u, l, p;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (s = r.id,
                                    !(0,
                                    mt.isJsonRpcResult)(r)) {
                                        e.next = 22;
                                        break
                                    }
                                    return i = r.result,
                                    a.client.logger.trace({
                                        type: "method",
                                        method: "onSessionProposeResponse",
                                        result: i
                                    }),
                                    o = a.client.proposal.get(s),
                                    a.client.logger.trace({
                                        type: "method",
                                        method: "onSessionProposeResponse",
                                        proposal: o
                                    }),
                                    c = o.proposer.publicKey,
                                    a.client.logger.trace({
                                        type: "method",
                                        method: "onSessionProposeResponse",
                                        selfPublicKey: c
                                    }),
                                    u = i.responderPublicKey,
                                    a.client.logger.trace({
                                        type: "method",
                                        method: "onSessionProposeResponse",
                                        peerPublicKey: u
                                    }),
                                    e.next = 12,
                                    a.client.core.crypto.generateSharedKey(c, u);
                                case 12:
                                    return l = e.sent,
                                    a.client.logger.trace({
                                        type: "method",
                                        method: "onSessionProposeResponse",
                                        sessionTopic: l
                                    }),
                                    e.next = 16,
                                    a.client.core.relayer.subscribe(l);
                                case 16:
                                    return p = e.sent,
                                    a.client.logger.trace({
                                        type: "method",
                                        method: "onSessionProposeResponse",
                                        subscriptionId: p
                                    }),
                                    e.next = 20,
                                    a.client.core.pairing.activate({
                                        topic: t
                                    });
                                case 20:
                                    e.next = 27;
                                    break;
                                case 22:
                                    if (e.t0 = (0,
                                    mt.isJsonRpcError)(r),
                                    !e.t0) {
                                        e.next = 27;
                                        break
                                    }
                                    return e.next = 26,
                                    a.client.proposal.delete(s, He("USER_DISCONNECTED"));
                                case 26:
                                    a.events.emit(Ie("session_connect"), {
                                        error: r.error
                                    });
                                case 27:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.onSessionSettleRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s, i, o, c, u, l, p, h, f, d, v;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return s = r.id,
                                    i = r.params,
                                    e.prev = 1,
                                    a.isValidSessionSettleRequest(i),
                                    o = r.params,
                                    c = o.relay,
                                    u = o.controller,
                                    l = o.expiry,
                                    p = o.namespaces,
                                    h = o.requiredNamespaces,
                                    f = o.optionalNamespaces,
                                    d = o.sessionProperties,
                                    v = Ds({
                                        topic: t,
                                        relay: c,
                                        expiry: l,
                                        namespaces: p,
                                        acknowledged: !0,
                                        requiredNamespaces: h,
                                        optionalNamespaces: f,
                                        controller: u.publicKey,
                                        self: {
                                            publicKey: "",
                                            metadata: a.client.metadata
                                        },
                                        peer: {
                                            publicKey: u.publicKey,
                                            metadata: u.metadata
                                        }
                                    }, d && {
                                        sessionProperties: d
                                    }),
                                    e.next = 6,
                                    a.sendResult(r.id, t, !0);
                                case 6:
                                    a.events.emit(Ie("session_connect"), {
                                        session: v
                                    }),
                                    e.next = 14;
                                    break;
                                case 9:
                                    return e.prev = 9,
                                    e.t0 = e.catch(1),
                                    e.next = 13,
                                    a.sendError(s, t, e.t0);
                                case 13:
                                    a.client.logger.error(e.t0);
                                case 14:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[1, 9]])
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.onSessionSettleResponse = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (s = r.id,
                                    !(0,
                                    mt.isJsonRpcResult)(r)) {
                                        e.next = 7;
                                        break
                                    }
                                    return e.next = 4,
                                    a.client.session.update(t, {
                                        acknowledged: !0
                                    });
                                case 4:
                                    a.events.emit(Ie("session_approve", s), {}),
                                    e.next = 12;
                                    break;
                                case 7:
                                    if (e.t0 = (0,
                                    mt.isJsonRpcError)(r),
                                    !e.t0) {
                                        e.next = 12;
                                        break
                                    }
                                    return e.next = 11,
                                    a.client.session.delete(t, He("USER_DISCONNECTED"));
                                case 11:
                                    a.events.emit(Ie("session_approve", s), {
                                        error: r.error
                                    });
                                case 12:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.onSessionUpdateRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s, i;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return s = r.params,
                                    i = r.id,
                                    e.prev = 1,
                                    a.isValidUpdate(Ds({
                                        topic: t
                                    }, s)),
                                    e.next = 5,
                                    a.client.session.update(t, {
                                        namespaces: s.namespaces
                                    });
                                case 5:
                                    return e.next = 7,
                                    a.sendResult(i, t, !0);
                                case 7:
                                    a.client.events.emit("session_update", {
                                        id: i,
                                        topic: t,
                                        params: s
                                    }),
                                    e.next = 15;
                                    break;
                                case 10:
                                    return e.prev = 10,
                                    e.t0 = e.catch(1),
                                    e.next = 14,
                                    a.sendError(i, t, e.t0);
                                case 14:
                                    a.client.logger.error(e.t0);
                                case 15:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[1, 10]])
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.onSessionUpdateResponse = function(e, t) {
                    var r = t.id;
                    (0,
                    mt.isJsonRpcResult)(t) ? a.events.emit(Ie("session_update", r), {}) : (0,
                    mt.isJsonRpcError)(t) && a.events.emit(Ie("session_update", r), {
                        error: t.error
                    })
                }
                ,
                a.onSessionExtendRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return s = r.id,
                                    e.prev = 1,
                                    a.isValidExtend({
                                        topic: t
                                    }),
                                    e.next = 5,
                                    a.setExpiry(t, _e(Ps));
                                case 5:
                                    return e.next = 7,
                                    a.sendResult(s, t, !0);
                                case 7:
                                    a.client.events.emit("session_extend", {
                                        id: s,
                                        topic: t
                                    }),
                                    e.next = 15;
                                    break;
                                case 10:
                                    return e.prev = 10,
                                    e.t0 = e.catch(1),
                                    e.next = 14,
                                    a.sendError(s, t, e.t0);
                                case 14:
                                    a.client.logger.error(e.t0);
                                case 15:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[1, 10]])
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.onSessionExtendResponse = function(e, t) {
                    var r = t.id;
                    (0,
                    mt.isJsonRpcResult)(t) ? a.events.emit(Ie("session_extend", r), {}) : (0,
                    mt.isJsonRpcError)(t) && a.events.emit(Ie("session_extend", r), {
                        error: t.error
                    })
                }
                ,
                a.onSessionPingRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return s = r.id,
                                    e.prev = 1,
                                    a.isValidPing({
                                        topic: t
                                    }),
                                    e.next = 5,
                                    a.sendResult(s, t, !0);
                                case 5:
                                    a.client.events.emit("session_ping", {
                                        id: s,
                                        topic: t
                                    }),
                                    e.next = 13;
                                    break;
                                case 8:
                                    return e.prev = 8,
                                    e.t0 = e.catch(1),
                                    e.next = 12,
                                    a.sendError(s, t, e.t0);
                                case 12:
                                    a.client.logger.error(e.t0);
                                case 13:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[1, 8]])
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.onSessionPingResponse = function(e, t) {
                    var r = t.id;
                    setTimeout((function() {
                        (0,
                        mt.isJsonRpcResult)(t) ? a.events.emit(Ie("session_ping", r), {}) : (0,
                        mt.isJsonRpcError)(t) && a.events.emit(Ie("session_ping", r), {
                            error: t.error
                        })
                    }
                    ), 500)
                }
                ,
                a.onSessionDeleteRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var i;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return i = r.id,
                                    e.prev = 1,
                                    a.isValidDisconnect({
                                        topic: t,
                                        reason: r.params
                                    }),
                                    a.client.core.relayer.once(vn, (0,
                                    s.Z)((0,
                                    n.Z)().mark((function e() {
                                        return (0,
                                        n.Z)().wrap((function(e) {
                                            for (; ; )
                                                switch (e.prev = e.next) {
                                                case 0:
                                                    return e.next = 2,
                                                    a.deleteSession(t);
                                                case 2:
                                                case "end":
                                                    return e.stop()
                                                }
                                        }
                                        ), e)
                                    }
                                    )))),
                                    e.next = 6,
                                    a.sendResult(i, t, !0);
                                case 6:
                                    a.client.events.emit("session_delete", {
                                        id: i,
                                        topic: t
                                    }),
                                    e.next = 14;
                                    break;
                                case 9:
                                    return e.prev = 9,
                                    e.t0 = e.catch(1),
                                    e.next = 13,
                                    a.sendError(i, t, e.t0);
                                case 13:
                                    a.client.logger.error(e.t0);
                                case 14:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[1, 9]])
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.onSessionRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s, i;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return s = r.id,
                                    i = r.params,
                                    e.prev = 1,
                                    a.isValidRequest(Ds({
                                        topic: t
                                    }, i)),
                                    e.next = 5,
                                    a.setPendingSessionRequest({
                                        id: s,
                                        topic: t,
                                        params: i
                                    });
                                case 5:
                                    a.client.events.emit("session_request", {
                                        id: s,
                                        topic: t,
                                        params: i
                                    }),
                                    e.next = 13;
                                    break;
                                case 8:
                                    return e.prev = 8,
                                    e.t0 = e.catch(1),
                                    e.next = 12,
                                    a.sendError(s, t, e.t0);
                                case 12:
                                    a.client.logger.error(e.t0);
                                case 13:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[1, 8]])
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.onSessionRequestResponse = function(e, t) {
                    var r = t.id;
                    (0,
                    mt.isJsonRpcResult)(t) ? a.events.emit(Ie("session_request", r), {
                        result: t.result
                    }) : (0,
                    mt.isJsonRpcError)(t) && a.events.emit(Ie("session_request", r), {
                        error: t.error
                    })
                }
                ,
                a.onSessionEventRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s, i;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    s = r.id,
                                    i = r.params,
                                    e.prev = 1,
                                    a.isValidEmit(Ds({
                                        topic: t
                                    }, i)),
                                    a.client.events.emit("session_event", {
                                        id: s,
                                        topic: t,
                                        params: i
                                    }),
                                    e.next = 10;
                                    break;
                                case 5:
                                    return e.prev = 5,
                                    e.t0 = e.catch(1),
                                    e.next = 9,
                                    a.sendError(s, t, e.t0);
                                case 9:
                                    a.client.logger.error(e.t0);
                                case 10:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[1, 5]])
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.isValidConnect = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o, c, u, l, p, h;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (at(t)) {
                                        e.next = 3;
                                        break
                                    }
                                    throw r = ze("MISSING_OR_INVALID", "connect() params: ".concat(JSON.stringify(t))),
                                    s = r.message,
                                    new Error(s);
                                case 3:
                                    if (i = t.pairingTopic,
                                    o = t.requiredNamespaces,
                                    c = t.optionalNamespaces,
                                    u = t.sessionProperties,
                                    l = t.relays,
                                    e.t0 = Ve(i),
                                    e.t0) {
                                        e.next = 8;
                                        break
                                    }
                                    return e.next = 8,
                                    a.isValidPairingTopic(i);
                                case 8:
                                    if (st(l, !0)) {
                                        e.next = 11;
                                        break
                                    }
                                    throw p = ze("MISSING_OR_INVALID", "connect() relays: ".concat(l)),
                                    h = p.message,
                                    new Error(h);
                                case 11:
                                    !Ve(o) && 0 !== Fe(o) && a.validateNamespaces(o, "requiredNamespaces"),
                                    !Ve(c) && 0 !== Fe(c) && a.validateNamespaces(c, "optionalNamespaces"),
                                    Ve(u) || a.validateSessionProps(u, "sessionProperties");
                                case 12:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.validateNamespaces = function(e, t) {
                    var r = function(e, t, r) {
                        var n = null;
                        if (e && Fe(e)) {
                            var s = tt(e, t);
                            s && (n = s);
                            var i = Qe(e, t);
                            i && (n = i)
                        } else
                            n = ze("MISSING_OR_INVALID", "".concat(t, ", ").concat(r, " should be an object with data"));
                        return n
                    }(e, "connect()", t);
                    if (r)
                        throw new Error(r.message)
                }
                ,
                a.isValidApprove = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o, c, u, l, p, h;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (at(t)) {
                                        e.next = 2;
                                        break
                                    }
                                    throw new Error(ze("MISSING_OR_INVALID", "approve() params: ".concat(t)).message);
                                case 2:
                                    return r = t.id,
                                    s = t.namespaces,
                                    i = t.relayProtocol,
                                    o = t.sessionProperties,
                                    e.next = 5,
                                    a.isValidProposalId(r);
                                case 5:
                                    if (c = a.client.proposal.get(r),
                                    !(u = rt(s, "approve()"))) {
                                        e.next = 8;
                                        break
                                    }
                                    throw new Error(u.message);
                                case 8:
                                    if (!(l = dt(c.requiredNamespaces, s, "approve()"))) {
                                        e.next = 11;
                                        break
                                    }
                                    throw new Error(l.message);
                                case 11:
                                    if (Ge(i, !0)) {
                                        e.next = 14;
                                        break
                                    }
                                    throw p = ze("MISSING_OR_INVALID", "approve() relayProtocol: ".concat(i)),
                                    h = p.message,
                                    new Error(h);
                                case 14:
                                    Ve(o) || a.validateSessionProps(o, "sessionProperties");
                                case 15:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.isValidReject = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o, c, u;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (at(t)) {
                                        e.next = 3;
                                        break
                                    }
                                    throw r = ze("MISSING_OR_INVALID", "reject() params: ".concat(t)),
                                    s = r.message,
                                    new Error(s);
                                case 3:
                                    return i = t.id,
                                    o = t.reason,
                                    e.next = 6,
                                    a.isValidProposalId(i);
                                case 6:
                                    if (ot(o)) {
                                        e.next = 9;
                                        break
                                    }
                                    throw c = ze("MISSING_OR_INVALID", "reject() reason: ".concat(JSON.stringify(o))),
                                    u = c.message,
                                    new Error(u);
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.isValidSessionSettleRequest = function(e) {
                    if (!at(e)) {
                        var t = ze("MISSING_OR_INVALID", "onSessionSettleRequest() params: ".concat(e)).message;
                        throw new Error(t)
                    }
                    var r = e.relay
                      , n = e.controller
                      , s = e.namespaces
                      , i = e.expiry;
                    if (!nt(r)) {
                        var a = ze("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string").message;
                        throw new Error(a)
                    }
                    var o = function(e, t) {
                        var r = null;
                        return Ge(null === e || void 0 === e ? void 0 : e.publicKey, !1) || (r = ze("MISSING_OR_INVALID", "".concat(t, " controller public key should be a string"))),
                        r
                    }(n, "onSessionSettleRequest()");
                    if (o)
                        throw new Error(o.message);
                    var c = rt(s, "onSessionSettleRequest()");
                    if (c)
                        throw new Error(c.message);
                    if (Pe(i)) {
                        var u = ze("EXPIRED", "onSessionSettleRequest()").message;
                        throw new Error(u)
                    }
                }
                ,
                a.isValidUpdate = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o, c, u, l;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (at(t)) {
                                        e.next = 3;
                                        break
                                    }
                                    throw r = ze("MISSING_OR_INVALID", "update() params: ".concat(t)),
                                    s = r.message,
                                    new Error(s);
                                case 3:
                                    return i = t.topic,
                                    o = t.namespaces,
                                    e.next = 6,
                                    a.isValidSessionTopic(i);
                                case 6:
                                    if (c = a.client.session.get(i),
                                    !(u = rt(o, "update()"))) {
                                        e.next = 9;
                                        break
                                    }
                                    throw new Error(u.message);
                                case 9:
                                    if (!(l = dt(c.requiredNamespaces, o, "update()"))) {
                                        e.next = 12;
                                        break
                                    }
                                    throw new Error(l.message);
                                case 12:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.isValidExtend = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (at(t)) {
                                        e.next = 3;
                                        break
                                    }
                                    throw r = ze("MISSING_OR_INVALID", "extend() params: ".concat(t)),
                                    s = r.message,
                                    new Error(s);
                                case 3:
                                    return i = t.topic,
                                    e.next = 6,
                                    a.isValidSessionTopic(i);
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.isValidRequest = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o, c, u, l, p, h, f, d, v, g, m, y, b;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (at(t)) {
                                        e.next = 3;
                                        break
                                    }
                                    throw r = ze("MISSING_OR_INVALID", "request() params: ".concat(t)),
                                    s = r.message,
                                    new Error(s);
                                case 3:
                                    return i = t.topic,
                                    o = t.request,
                                    c = t.chainId,
                                    u = t.expiry,
                                    e.next = 6,
                                    a.isValidSessionTopic(i);
                                case 6:
                                    if (l = a.client.session.get(i),
                                    pt(p = l.namespaces, c)) {
                                        e.next = 10;
                                        break
                                    }
                                    throw h = ze("MISSING_OR_INVALID", "request() chainId: ".concat(c)),
                                    f = h.message,
                                    new Error(f);
                                case 10:
                                    if (ct(o)) {
                                        e.next = 13;
                                        break
                                    }
                                    throw d = ze("MISSING_OR_INVALID", "request() ".concat(JSON.stringify(o))),
                                    v = d.message,
                                    new Error(v);
                                case 13:
                                    if (ht(p, c, o.method)) {
                                        e.next = 16;
                                        break
                                    }
                                    throw g = ze("MISSING_OR_INVALID", "request() method: ".concat(o.method)),
                                    m = g.message,
                                    new Error(m);
                                case 16:
                                    if (!u || gt(u, Ns)) {
                                        e.next = 19;
                                        break
                                    }
                                    throw y = ze("MISSING_OR_INVALID", "request() expiry: ".concat(u, ". Expiry must be a number (in seconds) between ").concat(Ns.min, " and ").concat(Ns.max)),
                                    b = y.message,
                                    new Error(b);
                                case 19:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.isValidRespond = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o, c, u;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (at(t)) {
                                        e.next = 3;
                                        break
                                    }
                                    throw r = ze("MISSING_OR_INVALID", "respond() params: ".concat(t)),
                                    s = r.message,
                                    new Error(s);
                                case 3:
                                    return i = t.topic,
                                    o = t.response,
                                    e.next = 6,
                                    a.isValidSessionTopic(i);
                                case 6:
                                    if (ut(o)) {
                                        e.next = 9;
                                        break
                                    }
                                    throw c = ze("MISSING_OR_INVALID", "respond() response: ".concat(JSON.stringify(o))),
                                    u = c.message,
                                    new Error(u);
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.isValidPing = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (at(t)) {
                                        e.next = 3;
                                        break
                                    }
                                    throw r = ze("MISSING_OR_INVALID", "ping() params: ".concat(t)),
                                    s = r.message,
                                    new Error(s);
                                case 3:
                                    return i = t.topic,
                                    e.next = 6,
                                    a.isValidSessionOrPairingTopic(i);
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.isValidEmit = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, o, c, u, l, p, h, f, d, v, g;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (at(t)) {
                                        e.next = 3;
                                        break
                                    }
                                    throw r = ze("MISSING_OR_INVALID", "emit() params: ".concat(t)),
                                    s = r.message,
                                    new Error(s);
                                case 3:
                                    return i = t.topic,
                                    o = t.event,
                                    c = t.chainId,
                                    e.next = 6,
                                    a.isValidSessionTopic(i);
                                case 6:
                                    if (u = a.client.session.get(i),
                                    pt(l = u.namespaces, c)) {
                                        e.next = 10;
                                        break
                                    }
                                    throw p = ze("MISSING_OR_INVALID", "emit() chainId: ".concat(c)),
                                    h = p.message,
                                    new Error(h);
                                case 10:
                                    if (lt(o)) {
                                        e.next = 13;
                                        break
                                    }
                                    throw f = ze("MISSING_OR_INVALID", "emit() event: ".concat(JSON.stringify(o))),
                                    d = f.message,
                                    new Error(d);
                                case 13:
                                    if (ft(l, c, o.name)) {
                                        e.next = 16;
                                        break
                                    }
                                    throw v = ze("MISSING_OR_INVALID", "emit() event: ".concat(JSON.stringify(o))),
                                    g = v.message,
                                    new Error(g);
                                case 16:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.isValidDisconnect = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (at(t)) {
                                        e.next = 3;
                                        break
                                    }
                                    throw r = ze("MISSING_OR_INVALID", "disconnect() params: ".concat(t)),
                                    s = r.message,
                                    new Error(s);
                                case 3:
                                    return i = t.topic,
                                    e.next = 6,
                                    a.isValidSessionOrPairingTopic(i);
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.validateSessionProps = function(e, t) {
                    Object.values(e).forEach((function(e) {
                        if (!Ge(e, !1)) {
                            var r = ze("MISSING_OR_INVALID", "".concat(t, " must be in Record<string, string> format. Received: ").concat(JSON.stringify(e))).message;
                            throw new Error(r)
                        }
                    }
                    ))
                }
                ,
                a
            }
            return (0,
            a.Z)(r, [{
                key: "isInitialized",
                value: function() {
                    if (!this.initialized) {
                        var e = ze("NOT_INITIALIZED", this.name).message;
                        throw new Error(e)
                    }
                }
            }, {
                key: "registerRelayerEvents",
                value: function() {
                    var e = this;
                    this.client.core.relayer.on(un, function() {
                        var t = (0,
                        s.Z)((0,
                        n.Z)().mark((function t(r) {
                            var s, i, a;
                            return (0,
                            n.Z)().wrap((function(t) {
                                for (; ; )
                                    switch (t.prev = t.next) {
                                    case 0:
                                        if (s = r.topic,
                                        i = r.message,
                                        !e.ignoredPayloadTypes.includes(e.client.core.crypto.getPayloadType(i))) {
                                            t.next = 3;
                                            break
                                        }
                                        return t.abrupt("return");
                                    case 3:
                                        return t.next = 5,
                                        e.client.core.crypto.decode(s, i);
                                    case 5:
                                        if (a = t.sent,
                                        !(0,
                                        mt.isJsonRpcRequest)(a)) {
                                            t.next = 10;
                                            break
                                        }
                                        e.client.core.history.set(s, a),
                                        e.onRelayEventRequest({
                                            topic: s,
                                            payload: a
                                        }),
                                        t.next = 15;
                                        break;
                                    case 10:
                                        if (t.t0 = (0,
                                        mt.isJsonRpcResponse)(a),
                                        !t.t0) {
                                            t.next = 15;
                                            break
                                        }
                                        return t.next = 14,
                                        e.client.core.history.resolve(a);
                                    case 14:
                                        e.onRelayEventResponse({
                                            topic: s,
                                            payload: a
                                        });
                                    case 15:
                                    case "end":
                                        return t.stop()
                                    }
                            }
                            ), t)
                        }
                        )));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }())
                }
            }, {
                key: "registerExpirerEvents",
                value: function() {
                    var e = this;
                    this.client.core.expirer.on(Cn, function() {
                        var t = (0,
                        s.Z)((0,
                        n.Z)().mark((function t(r) {
                            var s, i, a;
                            return (0,
                            n.Z)().wrap((function(t) {
                                for (; ; )
                                    switch (t.prev = t.next) {
                                    case 0:
                                        if (s = Ze(r.target),
                                        i = s.topic,
                                        !(a = s.id) || !e.client.pendingRequest.keys.includes(a)) {
                                            t.next = 5;
                                            break
                                        }
                                        return t.next = 4,
                                        e.deletePendingSessionRequest(a, ze("EXPIRED"), !0);
                                    case 4:
                                        return t.abrupt("return", t.sent);
                                    case 5:
                                        if (!i) {
                                            t.next = 13;
                                            break
                                        }
                                        if (t.t0 = e.client.session.keys.includes(i),
                                        !t.t0) {
                                            t.next = 11;
                                            break
                                        }
                                        return t.next = 10,
                                        e.deleteSession(i, !0);
                                    case 10:
                                        e.client.events.emit("session_expire", {
                                            topic: i
                                        });
                                    case 11:
                                        t.next = 18;
                                        break;
                                    case 13:
                                        if (t.t1 = a,
                                        !t.t1) {
                                            t.next = 18;
                                            break
                                        }
                                        return t.next = 17,
                                        e.deleteProposal(a, !0);
                                    case 17:
                                        e.client.events.emit("proposal_expire", {
                                            id: a
                                        });
                                    case 18:
                                    case "end":
                                        return t.stop()
                                    }
                            }
                            ), t)
                        }
                        )));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }())
                }
            }, {
                key: "isValidPairingTopic",
                value: function(e) {
                    if (!Ge(e, !1)) {
                        var t = ze("MISSING_OR_INVALID", "pairing topic should be a string: ".concat(e)).message;
                        throw new Error(t)
                    }
                    if (!this.client.core.pairing.pairings.keys.includes(e)) {
                        var r = ze("NO_MATCHING_KEY", "pairing topic doesn't exist: ".concat(e)).message;
                        throw new Error(r)
                    }
                    if (Pe(this.client.core.pairing.pairings.get(e).expiry)) {
                        var n = ze("EXPIRED", "pairing topic: ".concat(e)).message;
                        throw new Error(n)
                    }
                }
            }, {
                key: "isValidSessionTopic",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, a, o, c;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (Ge(t, !1)) {
                                        e.next = 3;
                                        break
                                    }
                                    throw r = ze("MISSING_OR_INVALID", "session topic should be a string: ".concat(t)),
                                    s = r.message,
                                    new Error(s);
                                case 3:
                                    if (this.client.session.keys.includes(t)) {
                                        e.next = 6;
                                        break
                                    }
                                    throw i = ze("NO_MATCHING_KEY", "session topic doesn't exist: ".concat(t)),
                                    a = i.message,
                                    new Error(a);
                                case 6:
                                    if (!Pe(this.client.session.get(t).expiry)) {
                                        e.next = 11;
                                        break
                                    }
                                    return e.next = 9,
                                    this.deleteSession(t);
                                case 9:
                                    throw o = ze("EXPIRED", "session topic: ".concat(t)),
                                    c = o.message,
                                    new Error(c);
                                case 11:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "isValidSessionOrPairingTopic",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, a;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (!this.client.session.keys.includes(t)) {
                                        e.next = 5;
                                        break
                                    }
                                    return e.next = 3,
                                    this.isValidSessionTopic(t);
                                case 3:
                                    e.next = 16;
                                    break;
                                case 5:
                                    if (!this.client.core.pairing.pairings.keys.includes(t)) {
                                        e.next = 9;
                                        break
                                    }
                                    this.isValidPairingTopic(t),
                                    e.next = 16;
                                    break;
                                case 9:
                                    if (!Ge(t, !1)) {
                                        e.next = 14;
                                        break
                                    }
                                    throw r = ze("NO_MATCHING_KEY", "session or pairing topic doesn't exist: ".concat(t)),
                                    s = r.message,
                                    new Error(s);
                                case 14:
                                    throw i = ze("MISSING_OR_INVALID", "session or pairing topic should be a string: ".concat(t)),
                                    a = i.message,
                                    new Error(a);
                                case 16:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "isValidProposalId",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, a, o, c;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (it(t)) {
                                        e.next = 3;
                                        break
                                    }
                                    throw r = ze("MISSING_OR_INVALID", "proposal id should be a number: ".concat(t)),
                                    s = r.message,
                                    new Error(s);
                                case 3:
                                    if (this.client.proposal.keys.includes(t)) {
                                        e.next = 6;
                                        break
                                    }
                                    throw i = ze("NO_MATCHING_KEY", "proposal id doesn't exist: ".concat(t)),
                                    a = i.message,
                                    new Error(a);
                                case 6:
                                    if (!Pe(this.client.proposal.get(t).expiry)) {
                                        e.next = 11;
                                        break
                                    }
                                    return e.next = 9,
                                    this.deleteProposal(t);
                                case 9:
                                    throw o = ze("EXPIRED", "proposal id: ".concat(t)),
                                    c = o.message,
                                    new Error(c);
                                case 11:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }]),
            r
        }(x.W3)
          , Us = function(e) {
            (0,
            f.Z)(r, e);
            var t = (0,
            d.Z)(r);
            function r(e, n) {
                var s;
                return (0,
                i.Z)(this, r),
                (s = t.call(this, e, n, "proposal", xs)).core = e,
                s.logger = n,
                s
            }
            return (0,
            a.Z)(r)
        }(us)
          , js = function(e) {
            (0,
            f.Z)(r, e);
            var t = (0,
            d.Z)(r);
            function r(e, n) {
                var s;
                return (0,
                i.Z)(this, r),
                (s = t.call(this, e, n, "session", xs)).core = e,
                s.logger = n,
                s
            }
            return (0,
            a.Z)(r)
        }(us)
          , Ms = function(e) {
            (0,
            f.Z)(r, e);
            var t = (0,
            d.Z)(r);
            function r(e, n) {
                var s;
                return (0,
                i.Z)(this, r),
                (s = t.call(this, e, n, "request", xs, (function(e) {
                    return e.id
                }
                ))).core = e,
                s.logger = n,
                s
            }
            return (0,
            a.Z)(r)
        }(us)
          , zs = function(e) {
            (0,
            f.Z)(r, e);
            var t = (0,
            d.Z)(r);
            function r(e) {
                var a;
                (0,
                i.Z)(this, r),
                (a = t.call(this, e)).protocol = "wc",
                a.version = 2,
                a.name = Es,
                a.events = new m.EventEmitter,
                a.on = function(e, t) {
                    return a.events.on(e, t)
                }
                ,
                a.once = function(e, t) {
                    return a.events.once(e, t)
                }
                ,
                a.off = function(e, t) {
                    return a.events.off(e, t)
                }
                ,
                a.removeListener = function(e, t) {
                    return a.events.removeListener(e, t)
                }
                ,
                a.removeAllListeners = function(e) {
                    return a.events.removeAllListeners(e)
                }
                ,
                a.connect = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0,
                                    e.next = 3,
                                    a.engine.connect(t);
                                case 3:
                                    return e.abrupt("return", e.sent);
                                case 6:
                                    throw e.prev = 6,
                                    e.t0 = e.catch(0),
                                    a.logger.error(e.t0.message),
                                    e.t0;
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[0, 6]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.pair = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0,
                                    e.next = 3,
                                    a.engine.pair(t);
                                case 3:
                                    return e.abrupt("return", e.sent);
                                case 6:
                                    throw e.prev = 6,
                                    e.t0 = e.catch(0),
                                    a.logger.error(e.t0.message),
                                    e.t0;
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[0, 6]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.approve = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0,
                                    e.next = 3,
                                    a.engine.approve(t);
                                case 3:
                                    return e.abrupt("return", e.sent);
                                case 6:
                                    throw e.prev = 6,
                                    e.t0 = e.catch(0),
                                    a.logger.error(e.t0.message),
                                    e.t0;
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[0, 6]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.reject = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0,
                                    e.next = 3,
                                    a.engine.reject(t);
                                case 3:
                                    return e.abrupt("return", e.sent);
                                case 6:
                                    throw e.prev = 6,
                                    e.t0 = e.catch(0),
                                    a.logger.error(e.t0.message),
                                    e.t0;
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[0, 6]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.update = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0,
                                    e.next = 3,
                                    a.engine.update(t);
                                case 3:
                                    return e.abrupt("return", e.sent);
                                case 6:
                                    throw e.prev = 6,
                                    e.t0 = e.catch(0),
                                    a.logger.error(e.t0.message),
                                    e.t0;
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[0, 6]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.extend = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0,
                                    e.next = 3,
                                    a.engine.extend(t);
                                case 3:
                                    return e.abrupt("return", e.sent);
                                case 6:
                                    throw e.prev = 6,
                                    e.t0 = e.catch(0),
                                    a.logger.error(e.t0.message),
                                    e.t0;
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[0, 6]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.request = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0,
                                    e.next = 3,
                                    a.engine.request(t);
                                case 3:
                                    return e.abrupt("return", e.sent);
                                case 6:
                                    throw e.prev = 6,
                                    e.t0 = e.catch(0),
                                    a.logger.error(e.t0.message),
                                    e.t0;
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[0, 6]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.respond = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0,
                                    e.next = 3,
                                    a.engine.respond(t);
                                case 3:
                                    return e.abrupt("return", e.sent);
                                case 6:
                                    throw e.prev = 6,
                                    e.t0 = e.catch(0),
                                    a.logger.error(e.t0.message),
                                    e.t0;
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[0, 6]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.ping = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0,
                                    e.next = 3,
                                    a.engine.ping(t);
                                case 3:
                                    return e.abrupt("return", e.sent);
                                case 6:
                                    throw e.prev = 6,
                                    e.t0 = e.catch(0),
                                    a.logger.error(e.t0.message),
                                    e.t0;
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[0, 6]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.emit = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0,
                                    e.next = 3,
                                    a.engine.emit(t);
                                case 3:
                                    return e.abrupt("return", e.sent);
                                case 6:
                                    throw e.prev = 6,
                                    e.t0 = e.catch(0),
                                    a.logger.error(e.t0.message),
                                    e.t0;
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[0, 6]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.disconnect = function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.prev = 0,
                                    e.next = 3,
                                    a.engine.disconnect(t);
                                case 3:
                                    return e.abrupt("return", e.sent);
                                case 6:
                                    throw e.prev = 6,
                                    e.t0 = e.catch(0),
                                    a.logger.error(e.t0.message),
                                    e.t0;
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, null, [[0, 6]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                a.find = function(e) {
                    try {
                        return a.engine.find(e)
                    } catch (t) {
                        throw a.logger.error(t.message),
                        t
                    }
                }
                ,
                a.getPendingSessionRequests = function() {
                    try {
                        return a.engine.getPendingSessionRequests()
                    } catch (e) {
                        throw a.logger.error(e.message),
                        e
                    }
                }
                ,
                a.name = (null === e || void 0 === e ? void 0 : e.name) || Es,
                a.metadata = (null === e || void 0 === e ? void 0 : e.metadata) || (0,
                L.D)() || {
                    name: "",
                    description: "",
                    url: "",
                    icons: [""]
                };
                var o = typeof (null === e || void 0 === e ? void 0 : e.logger) < "u" && "string" != typeof (null === e || void 0 === e ? void 0 : e.logger) ? e.logger : p()((0,
                w.getDefaultLoggerOptions)({
                    level: (null === e || void 0 === e ? void 0 : e.logger) || Zs
                }));
                return a.core = (null === e || void 0 === e ? void 0 : e.core) || new ks(e),
                a.logger = (0,
                w.generateChildLogger)(o, a.name),
                a.session = new js(a.core,a.logger),
                a.proposal = new Us(a.core,a.logger),
                a.pendingRequest = new Ms(a.core,a.logger),
                a.engine = new qs((0,
                h.Z)(a)),
                a
            }
            return (0,
            a.Z)(r, [{
                key: "context",
                get: function() {
                    return (0,
                    w.getLoggerContext)(this.logger)
                }
            }, {
                key: "pairing",
                get: function() {
                    return this.core.pairing.pairings
                }
            }, {
                key: "initialize",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return this.logger.trace("Initialized"),
                                    e.prev = 1,
                                    e.next = 4,
                                    this.core.start();
                                case 4:
                                    return e.next = 6,
                                    this.session.init();
                                case 6:
                                    return e.next = 8,
                                    this.proposal.init();
                                case 8:
                                    return e.next = 10,
                                    this.pendingRequest.init();
                                case 10:
                                    return e.next = 12,
                                    this.engine.init();
                                case 12:
                                    this.logger.info("SignClient Initialization Success"),
                                    e.next = 18;
                                    break;
                                case 15:
                                    throw e.prev = 15,
                                    e.t0 = e.catch(1),
                                    this.logger.info("SignClient Initialization Failure"),
                                    this.logger.error(e.t0.message),
                                    e.t0;
                                case 18:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[1, 15]])
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }], [{
                key: "init",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return s = new r(t),
                                    e.next = 3,
                                    s.initialize();
                                case 3:
                                    return e.abrupt("return", s);
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }]),
            r
        }(x.lV)
          , Hs = function(e) {
            (0,
            f.Z)(r, e);
            var t = (0,
            d.Z)(r);
            function r(e) {
                var n;
                return (0,
                i.Z)(this, r),
                (n = t.call(this, e)).events = new m.EventEmitter,
                n.hasRegisteredEventListeners = !1,
                n.connection = n.setConnection(e),
                n.connection.connected && n.registerEventListeners(),
                n
            }
            return (0,
            a.Z)(r, [{
                key: "connect",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t, r = arguments;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return t = r.length > 0 && void 0 !== r[0] ? r[0] : this.connection,
                                    e.next = 3,
                                    this.open(t);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "disconnect",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.close();
                                case 2:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "on",
                value: function(e, t) {
                    this.events.on(e, t)
                }
            }, {
                key: "once",
                value: function(e, t) {
                    this.events.once(e, t)
                }
            }, {
                key: "off",
                value: function(e, t) {
                    this.events.off(e, t)
                }
            }, {
                key: "removeListener",
                value: function(e, t) {
                    this.events.removeListener(e, t)
                }
            }, {
                key: "request",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.abrupt("return", this.requestStrict((0,
                                    mt.formatJsonRpcRequest)(t.method, t.params || [], (0,
                                    mt.getBigIntRpcId)().toString()), r));
                                case 1:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "requestStrict",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var i = this;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.abrupt("return", new Promise(function() {
                                        var e = (0,
                                        s.Z)((0,
                                        n.Z)().mark((function e(s, a) {
                                            return (0,
                                            n.Z)().wrap((function(e) {
                                                for (; ; )
                                                    switch (e.prev = e.next) {
                                                    case 0:
                                                        if (i.connection.connected) {
                                                            e.next = 9;
                                                            break
                                                        }
                                                        return e.prev = 1,
                                                        e.next = 4,
                                                        i.open();
                                                    case 4:
                                                        e.next = 9;
                                                        break;
                                                    case 6:
                                                        e.prev = 6,
                                                        e.t0 = e.catch(1),
                                                        a(e.t0);
                                                    case 9:
                                                        return i.events.on("".concat(t.id), (function(e) {
                                                            (0,
                                                            mt.isJsonRpcError)(e) ? a(e.error) : s(e.result)
                                                        }
                                                        )),
                                                        e.prev = 10,
                                                        e.next = 13,
                                                        i.connection.send(t, r);
                                                    case 13:
                                                        e.next = 18;
                                                        break;
                                                    case 15:
                                                        e.prev = 15,
                                                        e.t1 = e.catch(10),
                                                        a(e.t1);
                                                    case 18:
                                                    case "end":
                                                        return e.stop()
                                                    }
                                            }
                                            ), e, null, [[1, 6], [10, 15]])
                                        }
                                        )));
                                        return function(t, r) {
                                            return e.apply(this, arguments)
                                        }
                                    }()));
                                case 1:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "setConnection",
                value: function() {
                    return arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.connection
                }
            }, {
                key: "onPayload",
                value: function(e) {
                    this.events.emit("payload", e),
                    (0,
                    mt.isJsonRpcResponse)(e) ? this.events.emit("".concat(e.id), e) : this.events.emit("message", {
                        type: e.method,
                        data: e.params
                    })
                }
            }, {
                key: "onClose",
                value: function(e) {
                    e && 3e3 === e.code && this.events.emit("error", new Error("WebSocket connection closed abnormally with code: ".concat(e.code, " ").concat(e.reason ? "(".concat(e.reason, ")") : ""))),
                    this.events.emit("disconnect")
                }
            }, {
                key: "open",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t, r = arguments;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (t = r.length > 0 && void 0 !== r[0] ? r[0] : this.connection,
                                    this.connection !== t || !this.connection.connected) {
                                        e.next = 3;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 3:
                                    if (this.connection.connected && this.close(),
                                    "string" !== typeof t) {
                                        e.next = 8;
                                        break
                                    }
                                    return e.next = 7,
                                    this.connection.open(t);
                                case 7:
                                    t = this.connection;
                                case 8:
                                    return this.connection = this.setConnection(t),
                                    e.next = 11,
                                    this.connection.open();
                                case 11:
                                    this.registerEventListeners(),
                                    this.events.emit("connect");
                                case 13:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "close",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.connection.close();
                                case 2:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "registerEventListeners",
                value: function() {
                    var e = this;
                    this.hasRegisteredEventListeners || (this.connection.on("payload", (function(t) {
                        return e.onPayload(t)
                    }
                    )),
                    this.connection.on("close", (function(t) {
                        return e.onClose(t)
                    }
                    )),
                    this.connection.on("error", (function(t) {
                        return e.events.emit("error", t)
                    }
                    )),
                    this.connection.on("register_error", (function(t) {
                        return e.onClose()
                    }
                    )),
                    this.hasRegisteredEventListeners = !0)
                }
            }]),
            r
        }(mt.IJsonRpcProvider)
          , Ks = r(17507)
          , Fs = "error"
          , Vs = "".concat("wc", "@", 2, ":").concat("universal_provider", ":")
          , Gs = "default_chain_changed"
          , Js = Object.defineProperty
          , Ws = Object.getOwnPropertySymbols
          , Ys = Object.prototype.hasOwnProperty
          , $s = Object.prototype.propertyIsEnumerable
          , Xs = function(e, t, r) {
            return t in e ? Js(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r
            }) : e[t] = r
        }
          , Qs = function(e, t) {
            for (var r in t || (t = {}))
                Ys.call(t, r) && Xs(e, r, t[r]);
            if (Ws) {
                var n, s = (0,
                u.Z)(Ws(t));
                try {
                    for (s.s(); !(n = s.n()).done; ) {
                        r = n.value;
                        $s.call(t, r) && Xs(e, r, t[r])
                    }
                } catch (i) {
                    s.e(i)
                } finally {
                    s.f()
                }
            }
            return e
        };
        function ei(e, t, r) {
            var n, s = ti(e);
            return t.rpcMap && (n = t.rpcMap[s]),
            n || (n = "".concat("https://rpc.walletconnect.com/v1", "?chainId=eip155:").concat(s, "&projectId=").concat(r)),
            n
        }
        function ti(e) {
            return e.includes("eip155") ? Number(e.split(":")[1]) : Number(e)
        }
        function ri(e) {
            var t, r, n, s, i = {};
            if (!Fe(e))
                return i;
            for (var a = 0, c = Object.entries(e); a < c.length; a++) {
                var u = (0,
                o.Z)(c[a], 2)
                  , l = u[0]
                  , p = u[1]
                  , h = ni(l) ? [l] : p.chains
                  , f = p.methods || []
                  , d = p.events || []
                  , v = si(l);
                i[v] = {
                    chains: ii(h, null == (t = i[v]) ? void 0 : t.chains),
                    methods: ii(f, null == (r = i[v]) ? void 0 : r.methods),
                    events: ii(d, null == (n = i[v]) ? void 0 : n.events),
                    rpcMap: Qs(Qs({}, null == (s = i[v]) ? void 0 : s.rpcMap), p.rpcMap)
                }
            }
            return i
        }
        function ni(e) {
            return e.includes(":")
        }
        function si(e) {
            return ni(e) ? e.split(":")[0] : e
        }
        function ii() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
              , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
            return (0,
            c.Z)(new Set([].concat((0,
            c.Z)(e), (0,
            c.Z)(t))))
        }
        var ai = function(e, t) {
            e.on("session_request_sent", (function r(n) {
                n.request !== t.request || n.topic !== t.topic || (e.events.removeListener("session_request_sent", r),
                function(e) {
                    if (typeof window < "u")
                        try {
                            var t = window.localStorage.getItem("WALLETCONNECT_DEEPLINK_CHOICE");
                            if (t) {
                                var r = JSON.parse(t)
                                  , n = null === r || void 0 === r ? void 0 : r.href;
                                if ("string" == typeof n) {
                                    n.endsWith("/") && n.slice(0, -1);
                                    var s = "".concat(n, "/wc?requestId=").concat(e.id, "&sessionTopic=").concat(e.topic);
                                    window.open(s, "_self", "noreferrer noopener")
                                }
                            }
                        } catch (t) {
                            console.error(t)
                        }
                }(t))
            }
            ))
        };
        var oi = function() {
            function e(t) {
                (0,
                i.Z)(this, e),
                this.name = "eip155",
                this.namespace = t.namespace,
                this.client = t.client,
                this.events = t.events,
                this.httpProviders = this.createHttpProviders(),
                this.chainId = parseInt(this.getDefaultChain())
            }
            return (0,
            a.Z)(e, [{
                key: "request",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    e.t0 = t.request.method,
                                    e.next = "eth_requestAccounts" === e.t0 ? 3 : "eth_accounts" === e.t0 ? 4 : "wallet_switchEthereumChain" === e.t0 ? 5 : "eth_chainId" === e.t0 ? 6 : 7;
                                    break;
                                case 3:
                                case 4:
                                    return e.abrupt("return", this.getAccounts());
                                case 5:
                                    return e.abrupt("return", (this.handleSwitchChain(t.request.params ? null == (r = t.request.params[0]) ? void 0 : r.chainId : "0x0"),
                                    null));
                                case 6:
                                    return e.abrupt("return", parseInt(this.getDefaultChain()));
                                case 7:
                                    if (!this.namespace.methods.includes(t.request.method)) {
                                        e.next = 14;
                                        break
                                    }
                                    return ai(this.client, t),
                                    e.next = 11,
                                    this.client.request(t);
                                case 11:
                                    e.t1 = e.sent,
                                    e.next = 15;
                                    break;
                                case 14:
                                    e.t1 = this.getHttpProvider().request(t.request);
                                case 15:
                                    return e.abrupt("return", e.t1);
                                case 16:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "updateNamespace",
                value: function(e) {
                    this.namespace = Object.assign(this.namespace, e)
                }
            }, {
                key: "setDefaultChain",
                value: function(e, t) {
                    var r = ti(e);
                    if (!this.httpProviders[r]) {
                        var n = t || ei("".concat(this.name, ":").concat(r), this.namespace, this.client.core.projectId);
                        if (!n)
                            throw new Error("No RPC url provided for chainId: ".concat(r));
                        this.setHttpProvider(r, n)
                    }
                    this.chainId = r,
                    this.events.emit(Gs, "".concat(this.name, ":").concat(r))
                }
            }, {
                key: "requestAccounts",
                value: function() {
                    return this.getAccounts()
                }
            }, {
                key: "getDefaultChain",
                value: function() {
                    if (this.chainId)
                        return this.chainId.toString();
                    if (this.namespace.defaultChain)
                        return this.namespace.defaultChain;
                    var e = this.namespace.chains[0];
                    if (!e)
                        throw new Error("ChainId not found");
                    return e.split(":")[1]
                }
            }, {
                key: "createHttpProvider",
                value: function(e, t) {
                    var r = t || ei("".concat(this.name, ":").concat(e), this.namespace, this.client.core.projectId);
                    return typeof r > "u" ? void 0 : new Hs(new Ks.k(r))
                }
            }, {
                key: "setHttpProvider",
                value: function(e, t) {
                    var r = this.createHttpProvider(e, t);
                    r && (this.httpProviders[e] = r)
                }
            }, {
                key: "createHttpProviders",
                value: function() {
                    var e = this
                      , t = {};
                    return this.namespace.chains.forEach((function(r) {
                        var n, s = ti(r);
                        t[s] = e.createHttpProvider(s, null == (n = e.namespace.rpcMap) ? void 0 : n[r])
                    }
                    )),
                    t
                }
            }, {
                key: "getAccounts",
                value: function() {
                    var e = this
                      , t = this.namespace.accounts;
                    return t ? (0,
                    c.Z)(new Set(t.filter((function(t) {
                        return t.split(":")[1] === e.chainId.toString()
                    }
                    )).map((function(e) {
                        return e.split(":")[2]
                    }
                    )))) : []
                }
            }, {
                key: "getHttpProvider",
                value: function() {
                    var e = this.chainId
                      , t = this.httpProviders[e];
                    if (typeof t > "u")
                        throw new Error("JSON-RPC provider for ".concat(e, " not found"));
                    return t
                }
            }, {
                key: "handleSwitchChain",
                value: function(e) {
                    var t = parseInt(e, 16);
                    (function(e, t) {
                        if (!t.includes(e))
                            throw new Error("Chain '".concat(e, "' not approved. Please use one of the following: ").concat(t.toString()))
                    }
                    )("".concat(this.name, ":").concat(t), this.namespace.chains),
                    this.setDefaultChain("".concat(t))
                }
            }]),
            e
        }()
          , ci = function() {
            function e(t) {
                (0,
                i.Z)(this, e),
                this.name = "solana",
                this.namespace = t.namespace,
                this.events = t.events,
                this.client = t.client,
                this.chainId = this.getDefaultChain(),
                this.httpProviders = this.createHttpProviders()
            }
            return (0,
            a.Z)(e, [{
                key: "updateNamespace",
                value: function(e) {
                    this.namespace = Object.assign(this.namespace, e)
                }
            }, {
                key: "requestAccounts",
                value: function() {
                    return this.getAccounts()
                }
            }, {
                key: "request",
                value: function(e) {
                    return this.namespace.methods.includes(e.request.method) ? (ai(this.client, e),
                    this.client.request(e)) : this.getHttpProvider().request(e.request)
                }
            }, {
                key: "setDefaultChain",
                value: function(e, t) {
                    if (!this.httpProviders[e]) {
                        var r = t || ei("".concat(this.name, ":").concat(e), this.namespace, this.client.core.projectId);
                        if (!r)
                            throw new Error("No RPC url provided for chainId: ".concat(e));
                        this.setHttpProvider(e, r)
                    }
                    this.chainId = e,
                    this.events.emit(Gs, "".concat(this.name, ":").concat(this.chainId))
                }
            }, {
                key: "getDefaultChain",
                value: function() {
                    if (this.chainId)
                        return this.chainId;
                    if (this.namespace.defaultChain)
                        return this.namespace.defaultChain;
                    var e = this.namespace.chains[0];
                    if (!e)
                        throw new Error("ChainId not found");
                    return e.split(":")[1]
                }
            }, {
                key: "getAccounts",
                value: function() {
                    var e = this
                      , t = this.namespace.accounts;
                    return t ? (0,
                    c.Z)(new Set(t.filter((function(t) {
                        return t.split(":")[1] === e.chainId.toString()
                    }
                    )).map((function(e) {
                        return e.split(":")[2]
                    }
                    )))) : []
                }
            }, {
                key: "createHttpProviders",
                value: function() {
                    var e = this
                      , t = {};
                    return this.namespace.chains.forEach((function(r) {
                        var n;
                        t[r] = e.createHttpProvider(r, null == (n = e.namespace.rpcMap) ? void 0 : n[r])
                    }
                    )),
                    t
                }
            }, {
                key: "getHttpProvider",
                value: function() {
                    var e = "".concat(this.name, ":").concat(this.chainId)
                      , t = this.httpProviders[e];
                    if (typeof t > "u")
                        throw new Error("JSON-RPC provider for ".concat(e, " not found"));
                    return t
                }
            }, {
                key: "setHttpProvider",
                value: function(e, t) {
                    var r = this.createHttpProvider(e, t);
                    r && (this.httpProviders[e] = r)
                }
            }, {
                key: "createHttpProvider",
                value: function(e, t) {
                    var r = t || ei(e, this.namespace, this.client.core.projectId);
                    return typeof r > "u" ? void 0 : new Hs(new Ks.Z(r))
                }
            }]),
            e
        }()
          , ui = function() {
            function e(t) {
                (0,
                i.Z)(this, e),
                this.name = "cosmos",
                this.namespace = t.namespace,
                this.events = t.events,
                this.client = t.client,
                this.chainId = this.getDefaultChain(),
                this.httpProviders = this.createHttpProviders()
            }
            return (0,
            a.Z)(e, [{
                key: "updateNamespace",
                value: function(e) {
                    this.namespace = Object.assign(this.namespace, e)
                }
            }, {
                key: "requestAccounts",
                value: function() {
                    return this.getAccounts()
                }
            }, {
                key: "getDefaultChain",
                value: function() {
                    if (this.chainId)
                        return this.chainId;
                    if (this.namespace.defaultChain)
                        return this.namespace.defaultChain;
                    var e = this.namespace.chains[0];
                    if (!e)
                        throw new Error("ChainId not found");
                    return e.split(":")[1]
                }
            }, {
                key: "request",
                value: function(e) {
                    return this.namespace.methods.includes(e.request.method) ? (ai(this.client, e),
                    this.client.request(e)) : this.getHttpProvider().request(e.request)
                }
            }, {
                key: "setDefaultChain",
                value: function(e, t) {
                    if (this.chainId = e,
                    !this.httpProviders[e]) {
                        var r = t || ei("".concat(this.name, ":").concat(e), this.namespace, this.client.core.projectId);
                        if (!r)
                            throw new Error("No RPC url provided for chainId: ".concat(e));
                        this.setHttpProvider(e, r)
                    }
                    this.events.emit(Gs, "".concat(this.name, ":").concat(this.chainId))
                }
            }, {
                key: "getAccounts",
                value: function() {
                    var e = this
                      , t = this.namespace.accounts;
                    return t ? (0,
                    c.Z)(new Set(t.filter((function(t) {
                        return t.split(":")[1] === e.chainId.toString()
                    }
                    )).map((function(e) {
                        return e.split(":")[2]
                    }
                    )))) : []
                }
            }, {
                key: "createHttpProviders",
                value: function() {
                    var e = this
                      , t = {};
                    return this.namespace.chains.forEach((function(r) {
                        var n;
                        t[r] = e.createHttpProvider(r, null == (n = e.namespace.rpcMap) ? void 0 : n[r])
                    }
                    )),
                    t
                }
            }, {
                key: "getHttpProvider",
                value: function() {
                    var e = "".concat(this.name, ":").concat(this.chainId)
                      , t = this.httpProviders[e];
                    if (typeof t > "u")
                        throw new Error("JSON-RPC provider for ".concat(e, " not found"));
                    return t
                }
            }, {
                key: "setHttpProvider",
                value: function(e, t) {
                    var r = this.createHttpProvider(e, t);
                    r && (this.httpProviders[e] = r)
                }
            }, {
                key: "createHttpProvider",
                value: function(e, t) {
                    var r = t || ei(e, this.namespace, this.client.core.projectId);
                    return typeof r > "u" ? void 0 : new Hs(new Ks.Z(r))
                }
            }]),
            e
        }()
          , li = function() {
            function e(t) {
                (0,
                i.Z)(this, e),
                this.name = "cip34",
                this.namespace = t.namespace,
                this.events = t.events,
                this.client = t.client,
                this.chainId = this.getDefaultChain(),
                this.httpProviders = this.createHttpProviders()
            }
            return (0,
            a.Z)(e, [{
                key: "updateNamespace",
                value: function(e) {
                    this.namespace = Object.assign(this.namespace, e)
                }
            }, {
                key: "requestAccounts",
                value: function() {
                    return this.getAccounts()
                }
            }, {
                key: "getDefaultChain",
                value: function() {
                    if (this.chainId)
                        return this.chainId;
                    if (this.namespace.defaultChain)
                        return this.namespace.defaultChain;
                    var e = this.namespace.chains[0];
                    if (!e)
                        throw new Error("ChainId not found");
                    return e.split(":")[1]
                }
            }, {
                key: "request",
                value: function(e) {
                    return this.namespace.methods.includes(e.request.method) ? (ai(this.client, e),
                    this.client.request(e)) : this.getHttpProvider().request(e.request)
                }
            }, {
                key: "setDefaultChain",
                value: function(e, t) {
                    if (this.chainId = e,
                    !this.httpProviders[e]) {
                        var r = t || this.getCardanoRPCUrl(e);
                        if (!r)
                            throw new Error("No RPC url provided for chainId: ".concat(e));
                        this.setHttpProvider(e, r)
                    }
                    this.events.emit(Gs, "".concat(this.name, ":").concat(this.chainId))
                }
            }, {
                key: "getAccounts",
                value: function() {
                    var e = this
                      , t = this.namespace.accounts;
                    return t ? (0,
                    c.Z)(new Set(t.filter((function(t) {
                        return t.split(":")[1] === e.chainId.toString()
                    }
                    )).map((function(e) {
                        return e.split(":")[2]
                    }
                    )))) : []
                }
            }, {
                key: "createHttpProviders",
                value: function() {
                    var e = this
                      , t = {};
                    return this.namespace.chains.forEach((function(r) {
                        var n = e.getCardanoRPCUrl(r);
                        t[r] = e.createHttpProvider(r, n)
                    }
                    )),
                    t
                }
            }, {
                key: "getHttpProvider",
                value: function() {
                    var e = "".concat(this.name, ":").concat(this.chainId)
                      , t = this.httpProviders[e];
                    if (typeof t > "u")
                        throw new Error("JSON-RPC provider for ".concat(e, " not found"));
                    return t
                }
            }, {
                key: "getCardanoRPCUrl",
                value: function(e) {
                    var t = this.namespace.rpcMap;
                    if (t)
                        return t[e]
                }
            }, {
                key: "setHttpProvider",
                value: function(e, t) {
                    var r = this.createHttpProvider(e, t);
                    r && (this.httpProviders[e] = r)
                }
            }, {
                key: "createHttpProvider",
                value: function(e, t) {
                    var r = t || this.getCardanoRPCUrl(e);
                    return typeof r > "u" ? void 0 : new Hs(new Ks.Z(r))
                }
            }]),
            e
        }()
          , pi = function() {
            function e(t) {
                (0,
                i.Z)(this, e),
                this.name = "elrond",
                this.namespace = t.namespace,
                this.events = t.events,
                this.client = t.client,
                this.chainId = this.getDefaultChain(),
                this.httpProviders = this.createHttpProviders()
            }
            return (0,
            a.Z)(e, [{
                key: "updateNamespace",
                value: function(e) {
                    this.namespace = Object.assign(this.namespace, e)
                }
            }, {
                key: "requestAccounts",
                value: function() {
                    return this.getAccounts()
                }
            }, {
                key: "request",
                value: function(e) {
                    return this.namespace.methods.includes(e.request.method) ? (ai(this.client, e),
                    this.client.request(e)) : this.getHttpProvider().request(e.request)
                }
            }, {
                key: "setDefaultChain",
                value: function(e, t) {
                    if (!this.httpProviders[e]) {
                        var r = t || ei("".concat(this.name, ":").concat(e), this.namespace, this.client.core.projectId);
                        if (!r)
                            throw new Error("No RPC url provided for chainId: ".concat(e));
                        this.setHttpProvider(e, r)
                    }
                    this.chainId = e,
                    this.events.emit(Gs, "".concat(this.name, ":").concat(this.chainId))
                }
            }, {
                key: "getDefaultChain",
                value: function() {
                    if (this.chainId)
                        return this.chainId;
                    if (this.namespace.defaultChain)
                        return this.namespace.defaultChain;
                    var e = this.namespace.chains[0];
                    if (!e)
                        throw new Error("ChainId not found");
                    return e.split(":")[1]
                }
            }, {
                key: "getAccounts",
                value: function() {
                    var e = this
                      , t = this.namespace.accounts;
                    return t ? (0,
                    c.Z)(new Set(t.filter((function(t) {
                        return t.split(":")[1] === e.chainId.toString()
                    }
                    )).map((function(e) {
                        return e.split(":")[2]
                    }
                    )))) : []
                }
            }, {
                key: "createHttpProviders",
                value: function() {
                    var e = this
                      , t = {};
                    return this.namespace.chains.forEach((function(r) {
                        var n;
                        t[r] = e.createHttpProvider(r, null == (n = e.namespace.rpcMap) ? void 0 : n[r])
                    }
                    )),
                    t
                }
            }, {
                key: "getHttpProvider",
                value: function() {
                    var e = "".concat(this.name, ":").concat(this.chainId)
                      , t = this.httpProviders[e];
                    if (typeof t > "u")
                        throw new Error("JSON-RPC provider for ".concat(e, " not found"));
                    return t
                }
            }, {
                key: "setHttpProvider",
                value: function(e, t) {
                    var r = this.createHttpProvider(e, t);
                    r && (this.httpProviders[e] = r)
                }
            }, {
                key: "createHttpProvider",
                value: function(e, t) {
                    var r = t || ei(e, this.namespace, this.client.core.projectId);
                    return typeof r > "u" ? void 0 : new Hs(new Ks.Z(r))
                }
            }]),
            e
        }()
          , hi = function() {
            function e(t) {
                (0,
                i.Z)(this, e),
                this.name = "multiversx",
                this.namespace = t.namespace,
                this.events = t.events,
                this.client = t.client,
                this.chainId = this.getDefaultChain(),
                this.httpProviders = this.createHttpProviders()
            }
            return (0,
            a.Z)(e, [{
                key: "updateNamespace",
                value: function(e) {
                    this.namespace = Object.assign(this.namespace, e)
                }
            }, {
                key: "requestAccounts",
                value: function() {
                    return this.getAccounts()
                }
            }, {
                key: "request",
                value: function(e) {
                    return this.namespace.methods.includes(e.request.method) ? (ai(this.client, e),
                    this.client.request(e)) : this.getHttpProvider().request(e.request)
                }
            }, {
                key: "setDefaultChain",
                value: function(e, t) {
                    if (!this.httpProviders[e]) {
                        var r = t || ei("".concat(this.name, ":").concat(e), this.namespace, this.client.core.projectId);
                        if (!r)
                            throw new Error("No RPC url provided for chainId: ".concat(e));
                        this.setHttpProvider(e, r)
                    }
                    this.chainId = e,
                    this.events.emit(Gs, "".concat(this.name, ":").concat(this.chainId))
                }
            }, {
                key: "getDefaultChain",
                value: function() {
                    if (this.chainId)
                        return this.chainId;
                    if (this.namespace.defaultChain)
                        return this.namespace.defaultChain;
                    var e = this.namespace.chains[0];
                    if (!e)
                        throw new Error("ChainId not found");
                    return e.split(":")[1]
                }
            }, {
                key: "getAccounts",
                value: function() {
                    var e = this
                      , t = this.namespace.accounts;
                    return t ? (0,
                    c.Z)(new Set(t.filter((function(t) {
                        return t.split(":")[1] === e.chainId.toString()
                    }
                    )).map((function(e) {
                        return e.split(":")[2]
                    }
                    )))) : []
                }
            }, {
                key: "createHttpProviders",
                value: function() {
                    var e = this
                      , t = {};
                    return this.namespace.chains.forEach((function(r) {
                        var n;
                        t[r] = e.createHttpProvider(r, null == (n = e.namespace.rpcMap) ? void 0 : n[r])
                    }
                    )),
                    t
                }
            }, {
                key: "getHttpProvider",
                value: function() {
                    var e = "".concat(this.name, ":").concat(this.chainId)
                      , t = this.httpProviders[e];
                    if (typeof t > "u")
                        throw new Error("JSON-RPC provider for ".concat(e, " not found"));
                    return t
                }
            }, {
                key: "setHttpProvider",
                value: function(e, t) {
                    var r = this.createHttpProvider(e, t);
                    r && (this.httpProviders[e] = r)
                }
            }, {
                key: "createHttpProvider",
                value: function(e, t) {
                    var r = t || ei(e, this.namespace, this.client.core.projectId);
                    return typeof r > "u" ? void 0 : new Hs(new Ks.Z(r))
                }
            }]),
            e
        }()
          , fi = Object.defineProperty
          , di = Object.defineProperties
          , vi = Object.getOwnPropertyDescriptors
          , gi = Object.getOwnPropertySymbols
          , mi = Object.prototype.hasOwnProperty
          , yi = Object.prototype.propertyIsEnumerable
          , bi = function(e, t, r) {
            return t in e ? fi(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r
            }) : e[t] = r
        }
          , ki = function(e, t) {
            for (var r in t || (t = {}))
                mi.call(t, r) && bi(e, r, t[r]);
            if (gi) {
                var n, s = (0,
                u.Z)(gi(t));
                try {
                    for (s.s(); !(n = s.n()).done; ) {
                        r = n.value;
                        yi.call(t, r) && bi(e, r, t[r])
                    }
                } catch (i) {
                    s.e(i)
                } finally {
                    s.f()
                }
            }
            return e
        }
          , wi = function(e, t) {
            return di(e, vi(t))
        }
          , xi = function() {
            function e(t) {
                (0,
                i.Z)(this, e),
                this.events = new (y()),
                this.rpcProviders = {},
                this.shouldAbortPairingAttempt = !1,
                this.maxPairingAttempts = 10,
                this.providerOpts = t,
                this.logger = typeof (null === t || void 0 === t ? void 0 : t.logger) < "u" && "string" != typeof (null === t || void 0 === t ? void 0 : t.logger) ? t.logger : p()((0,
                w.getDefaultLoggerOptions)({
                    level: (null === t || void 0 === t ? void 0 : t.logger) || Fs
                }))
            }
            return (0,
            a.Z)(e, [{
                key: "request",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t, r) {
                        var s, i, a, c;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (s = this.validateChain(r),
                                    i = (0,
                                    o.Z)(s, 2),
                                    a = i[0],
                                    c = i[1],
                                    this.session) {
                                        e.next = 3;
                                        break
                                    }
                                    throw new Error("Please call connect() before request()");
                                case 3:
                                    return e.next = 5,
                                    this.getProvider(a).request({
                                        request: ki({}, t),
                                        chainId: "".concat(a, ":").concat(c),
                                        topic: this.session.topic
                                    });
                                case 5:
                                    return e.abrupt("return", e.sent);
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "sendAsync",
                value: function(e, t, r) {
                    this.request(e, r).then((function(e) {
                        return t(null, e)
                    }
                    )).catch((function(e) {
                        return t(e, void 0)
                    }
                    ))
                }
            }, {
                key: "enable",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (this.client) {
                                        e.next = 2;
                                        break
                                    }
                                    throw new Error("Sign Client not initialized");
                                case 2:
                                    if (e.t0 = this.session,
                                    e.t0) {
                                        e.next = 6;
                                        break
                                    }
                                    return e.next = 6,
                                    this.connect({
                                        namespaces: this.namespaces,
                                        optionalNamespaces: this.optionalNamespaces,
                                        sessionProperties: this.sessionProperties
                                    });
                                case 6:
                                    return e.next = 8,
                                    this.requestAccounts();
                                case 8:
                                    return e.abrupt("return", e.sent);
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "disconnect",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (this.session) {
                                        e.next = 2;
                                        break
                                    }
                                    throw new Error("Please call connect() before enable()");
                                case 2:
                                    return e.next = 4,
                                    this.client.disconnect({
                                        topic: null == (t = this.session) ? void 0 : t.topic,
                                        reason: He("USER_DISCONNECTED")
                                    });
                                case 4:
                                    return e.next = 6,
                                    this.cleanup();
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "connect",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (this.client) {
                                        e.next = 2;
                                        break
                                    }
                                    throw new Error("Sign Client not initialized");
                                case 2:
                                    return this.setNamespaces(t),
                                    e.next = 5,
                                    this.cleanupPendingPairings();
                                case 5:
                                    if (t.skipPairing) {
                                        e.next = 9;
                                        break
                                    }
                                    return e.next = 8,
                                    this.pair(t.pairingTopic);
                                case 8:
                                    return e.abrupt("return", e.sent);
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "on",
                value: function(e, t) {
                    this.events.on(e, t)
                }
            }, {
                key: "once",
                value: function(e, t) {
                    this.events.once(e, t)
                }
            }, {
                key: "removeListener",
                value: function(e, t) {
                    this.events.removeListener(e, t)
                }
            }, {
                key: "off",
                value: function(e, t) {
                    this.events.off(e, t)
                }
            }, {
                key: "isWalletConnect",
                get: function() {
                    return !0
                }
            }, {
                key: "pair",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        var r, s, i, a, o = this;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    this.shouldAbortPairingAttempt = !1,
                                    r = 0;
                                case 2:
                                    if (!this.shouldAbortPairingAttempt) {
                                        e.next = 4;
                                        break
                                    }
                                    throw new Error("Pairing aborted");
                                case 4:
                                    if (!(r >= this.maxPairingAttempts)) {
                                        e.next = 6;
                                        break
                                    }
                                    throw new Error("Max auto pairing attempts reached");
                                case 6:
                                    return e.next = 8,
                                    this.client.connect({
                                        pairingTopic: t,
                                        requiredNamespaces: this.namespaces,
                                        optionalNamespaces: this.optionalNamespaces,
                                        sessionProperties: this.sessionProperties
                                    });
                                case 8:
                                    return s = e.sent,
                                    i = s.uri,
                                    a = s.approval,
                                    i && (this.uri = i,
                                    this.events.emit("display_uri", i)),
                                    e.next = 14,
                                    a().then((function(e) {
                                        o.session = e
                                    }
                                    )).catch((function(e) {
                                        if (e.message !== _s)
                                            throw e;
                                        r++
                                    }
                                    ));
                                case 14:
                                    if (!this.session) {
                                        e.next = 2;
                                        break
                                    }
                                case 15:
                                    return e.abrupt("return", (this.onConnect(),
                                    this.session));
                                case 16:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "setDefaultChain",
                value: function(e, t) {
                    try {
                        var r = this.validateChain(e)
                          , n = (0,
                        o.Z)(r, 2)
                          , s = n[0]
                          , i = n[1];
                        this.getProvider(s).setDefaultChain(i, t)
                    } catch (s) {
                        if (!/Please call connect/.test(s.message))
                            throw s
                    }
                }
            }, {
                key: "cleanupPendingPairings",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t, r, s, i, a, o = arguments;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (t = o.length > 0 && void 0 !== o[0] ? o[0] : {},
                                    this.logger.info("Cleaning up inactive pairings..."),
                                    !Ke(r = this.client.pairing.getAll())) {
                                        e.next = 26;
                                        break
                                    }
                                    s = (0,
                                    u.Z)(r),
                                    e.prev = 5,
                                    s.s();
                                case 7:
                                    if ((i = s.n()).done) {
                                        e.next = 17;
                                        break
                                    }
                                    if (a = i.value,
                                    !t.deletePairings) {
                                        e.next = 13;
                                        break
                                    }
                                    this.client.core.expirer.set(a.topic, 0),
                                    e.next = 15;
                                    break;
                                case 13:
                                    return e.next = 15,
                                    this.client.core.relayer.subscriber.unsubscribe(a.topic);
                                case 15:
                                    e.next = 7;
                                    break;
                                case 17:
                                    e.next = 22;
                                    break;
                                case 19:
                                    e.prev = 19,
                                    e.t0 = e.catch(5),
                                    s.e(e.t0);
                                case 22:
                                    return e.prev = 22,
                                    s.f(),
                                    e.finish(22);
                                case 25:
                                    this.logger.info("Inactive pairings cleared: ".concat(r.length));
                                case 26:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[5, 19, 22, 25]])
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "abortPairingAttempt",
                value: function() {
                    this.shouldAbortPairingAttempt = !0
                }
            }, {
                key: "checkStorage",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.getFromStore("namespaces");
                                case 2:
                                    if (e.t0 = e.sent,
                                    e.t0) {
                                        e.next = 5;
                                        break
                                    }
                                    e.t0 = {};
                                case 5:
                                    return this.namespaces = e.t0,
                                    e.next = 8,
                                    this.getFromStore("optionalNamespaces");
                                case 8:
                                    if (e.t1 = e.sent,
                                    e.t1) {
                                        e.next = 11;
                                        break
                                    }
                                    e.t1 = {};
                                case 11:
                                    if (this.optionalNamespaces = e.t1,
                                    !this.client.session.length) {
                                        e.next = 15;
                                        break
                                    }
                                    t = this.client.session.keys.length - 1,
                                    this.session = this.client.session.get(this.client.session.keys[t]),
                                    this.createProviders();
                                case 15:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "initialize",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return this.logger.trace("Initialized"),
                                    e.next = 3,
                                    this.createClient();
                                case 3:
                                    return e.next = 5,
                                    this.checkStorage();
                                case 5:
                                    this.registerEventListeners();
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "createClient",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (e.t0 = this.providerOpts.client,
                                    e.t0) {
                                        e.next = 5;
                                        break
                                    }
                                    return e.next = 4,
                                    zs.init({
                                        logger: this.providerOpts.logger || Fs,
                                        relayUrl: this.providerOpts.relayUrl || "wss://relay.walletconnect.com",
                                        projectId: this.providerOpts.projectId,
                                        metadata: this.providerOpts.metadata,
                                        storageOptions: this.providerOpts.storageOptions,
                                        name: this.providerOpts.name
                                    });
                                case 4:
                                    e.t0 = e.sent;
                                case 5:
                                    this.client = e.t0,
                                    this.logger.trace("SignClient Initialized");
                                case 7:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "createProviders",
                value: function() {
                    var e = this;
                    if (!this.client)
                        throw new Error("Sign Client not initialized");
                    if (!this.session)
                        throw new Error("Session not initialized. Please call connect() before enable()");
                    (0,
                    c.Z)(new Set(Object.keys(this.session.namespaces).map((function(e) {
                        return si(e)
                    }
                    )))).forEach((function(t) {
                        if (e.session) {
                            var r = function(e, t) {
                                var r = Object.keys(t.namespaces).filter((function(t) {
                                    return t.includes(e)
                                }
                                ));
                                if (!r.length)
                                    return [];
                                var n = [];
                                return r.forEach((function(e) {
                                    var r = t.namespaces[e].accounts;
                                    n.push.apply(n, (0,
                                    c.Z)(r))
                                }
                                )),
                                n
                            }(t, e.session)
                              , n = r.map((function(e) {
                                return "".concat(e.split(":")[0], ":").concat(e.split(":")[1])
                            }
                            ))
                              , s = function(e) {
                                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                                  , r = ri(e)
                                  , n = ri(t);
                                return Qs({}, Object.assign(r, n))
                            }(e.namespaces, e.optionalNamespaces)
                              , i = wi(ki({}, s[t]), {
                                accounts: r,
                                chains: n
                            });
                            switch (t) {
                            case "eip155":
                                e.rpcProviders[t] = new oi({
                                    client: e.client,
                                    namespace: i,
                                    events: e.events
                                });
                                break;
                            case "solana":
                                e.rpcProviders[t] = new ci({
                                    client: e.client,
                                    namespace: i,
                                    events: e.events
                                });
                                break;
                            case "cosmos":
                                e.rpcProviders[t] = new ui({
                                    client: e.client,
                                    namespace: i,
                                    events: e.events
                                });
                                break;
                            case "polkadot":
                                break;
                            case "cip34":
                                e.rpcProviders[t] = new li({
                                    client: e.client,
                                    namespace: i,
                                    events: e.events
                                });
                                break;
                            case "elrond":
                                e.rpcProviders[t] = new pi({
                                    client: e.client,
                                    namespace: i,
                                    events: e.events
                                });
                                break;
                            case "multiversx":
                                e.rpcProviders[t] = new hi({
                                    client: e.client,
                                    namespace: i,
                                    events: e.events
                                })
                            }
                        }
                    }
                    ))
                }
            }, {
                key: "registerEventListeners",
                value: function() {
                    var e = this;
                    if (typeof this.client > "u")
                        throw new Error("Sign Client is not initialized");
                    this.client.on("session_ping", (function(t) {
                        e.events.emit("session_ping", t)
                    }
                    )),
                    this.client.on("session_event", (function(t) {
                        var r = t.params
                          , n = r.event;
                        "accountsChanged" === n.name ? e.events.emit("accountsChanged", n.data) : "chainChanged" === n.name ? e.onChainChanged(r.chainId) : e.events.emit(n.name, n.data),
                        e.events.emit("session_event", t)
                    }
                    )),
                    this.client.on("session_update", (function(t) {
                        var r, n = t.topic, s = t.params, i = s.namespaces, a = null == (r = e.client) ? void 0 : r.session.get(n);
                        e.session = wi(ki({}, a), {
                            namespaces: i
                        }),
                        e.onSessionUpdate(),
                        e.events.emit("session_update", {
                            topic: n,
                            params: s
                        })
                    }
                    )),
                    this.client.on("session_delete", function() {
                        var t = (0,
                        s.Z)((0,
                        n.Z)().mark((function t(r) {
                            return (0,
                            n.Z)().wrap((function(t) {
                                for (; ; )
                                    switch (t.prev = t.next) {
                                    case 0:
                                        return t.next = 2,
                                        e.cleanup();
                                    case 2:
                                        e.events.emit("session_delete", r),
                                        e.events.emit("disconnect", wi(ki({}, He("USER_DISCONNECTED")), {
                                            data: r.topic
                                        }));
                                    case 4:
                                    case "end":
                                        return t.stop()
                                    }
                            }
                            ), t)
                        }
                        )));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }()),
                    this.on(Gs, (function(t) {
                        e.onChainChanged(t, !0)
                    }
                    ))
                }
            }, {
                key: "getProvider",
                value: function(e) {
                    if (!this.rpcProviders[e])
                        throw new Error("Provider not found: ".concat(e));
                    return this.rpcProviders[e]
                }
            }, {
                key: "onSessionUpdate",
                value: function() {
                    var e = this;
                    Object.keys(this.rpcProviders).forEach((function(t) {
                        var r;
                        e.getProvider(t).updateNamespace(null == (r = e.session) ? void 0 : r.namespaces[t])
                    }
                    ))
                }
            }, {
                key: "setNamespaces",
                value: function(e) {
                    var t = e.namespaces
                      , r = e.optionalNamespaces
                      , n = e.sessionProperties;
                    if (!t || !Object.keys(t).length)
                        throw new Error("Namespaces must be not empty");
                    this.namespaces = t,
                    this.optionalNamespaces = r,
                    this.sessionProperties = n,
                    this.persist("namespaces", t),
                    this.persist("optionalNamespaces", r)
                }
            }, {
                key: "validateChain",
                value: function(e) {
                    var t = (null === e || void 0 === e ? void 0 : e.split(":")) || ["", ""]
                      , r = (0,
                    o.Z)(t, 2)
                      , n = r[0]
                      , s = r[1];
                    if (n && !Object.keys(this.namespaces).includes(n))
                        throw new Error("Namespace '".concat(n, "' is not configured. Please call connect() first with namespace config."));
                    if (n && s)
                        return [n, s];
                    var i = Object.keys(this.namespaces)[0];
                    return [i, this.rpcProviders[i].getDefaultChain()]
                }
            }, {
                key: "requestAccounts",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        var t, r, s;
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return t = this.validateChain(),
                                    r = (0,
                                    o.Z)(t, 1),
                                    s = r[0],
                                    e.next = 3,
                                    this.getProvider(s).requestAccounts();
                                case 3:
                                    return e.abrupt("return", e.sent);
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "onChainChanged",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]
                      , r = this.validateChain(e)
                      , n = (0,
                    o.Z)(r, 2)
                      , s = n[0]
                      , i = n[1];
                    t || this.getProvider(s).setDefaultChain(i),
                    this.namespaces[s].defaultChain = i,
                    this.persist("namespaces", this.namespaces),
                    this.events.emit("chainChanged", i)
                }
            }, {
                key: "onConnect",
                value: function() {
                    this.createProviders(),
                    this.events.emit("connect", {
                        session: this.session
                    })
                }
            }, {
                key: "cleanup",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e() {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return this.session = void 0,
                                    e.next = 3,
                                    this.cleanupPendingPairings({
                                        deletePairings: !0
                                    });
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "persist",
                value: function(e, t) {
                    this.client.core.storage.setItem("".concat(Vs, "/").concat(e), t)
                }
            }, {
                key: "getFromStore",
                value: function() {
                    var e = (0,
                    s.Z)((0,
                    n.Z)().mark((function e(t) {
                        return (0,
                        n.Z)().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.client.core.storage.getItem("".concat(Vs, "/").concat(t));
                                case 2:
                                    return e.abrupt("return", e.sent);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }], [{
                key: "init",
                value: function() {
                    var t = (0,
                    s.Z)((0,
                    n.Z)().mark((function t(r) {
                        var s;
                        return (0,
                        n.Z)().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    return s = new e(r),
                                    t.next = 3,
                                    s.initialize();
                                case 3:
                                    return t.abrupt("return", s);
                                case 4:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t)
                    }
                    )));
                    return function(e) {
                        return t.apply(this, arguments)
                    }
                }()
            }]),
            e
        }()
          , Ei = xi
    },
    7289: function(e, t, r) {
        var n = r(38416).default
          , s = r(27424).default
          , i = r(74704).default
          , a = r(861).default
          , o = r(82376)
          , c = r(8271)
          , u = r(94266)
          , l = r(2214)
          , p = Symbol("encodeFragmentIdentifier");
        function h(e) {
            if ("string" !== typeof e || 1 !== e.length)
                throw new TypeError("arrayFormatSeparator must be single character string")
        }
        function f(e, t) {
            return t.encode ? t.strict ? o(e) : encodeURIComponent(e) : e
        }
        function d(e, t) {
            return t.decode ? c(e) : e
        }
        function v(e) {
            return Array.isArray(e) ? e.sort() : "object" === typeof e ? v(Object.keys(e)).sort((function(e, t) {
                return Number(e) - Number(t)
            }
            )).map((function(t) {
                return e[t]
            }
            )) : e
        }
        function g(e) {
            var t = e.indexOf("#");
            return -1 !== t && (e = e.slice(0, t)),
            e
        }
        function m(e) {
            var t = (e = g(e)).indexOf("?");
            return -1 === t ? "" : e.slice(t + 1)
        }
        function y(e, t) {
            return t.parseNumbers && !Number.isNaN(Number(e)) && "string" === typeof e && "" !== e.trim() ? e = Number(e) : !t.parseBooleans || null === e || "true" !== e.toLowerCase() && "false" !== e.toLowerCase() || (e = "true" === e.toLowerCase()),
            e
        }
        function b(e, t) {
            h((t = Object.assign({
                decode: !0,
                sort: !0,
                arrayFormat: "none",
                arrayFormatSeparator: ",",
                parseNumbers: !1,
                parseBooleans: !1
            }, t)).arrayFormatSeparator);
            var r = function(e) {
                var t;
                switch (e.arrayFormat) {
                case "index":
                    return function(e, r, n) {
                        t = /\[(\d*)\]$/.exec(e),
                        e = e.replace(/\[\d*\]$/, ""),
                        t ? (void 0 === n[e] && (n[e] = {}),
                        n[e][t[1]] = r) : n[e] = r
                    }
                    ;
                case "bracket":
                    return function(e, r, n) {
                        t = /(\[\])$/.exec(e),
                        e = e.replace(/\[\]$/, ""),
                        t ? void 0 !== n[e] ? n[e] = [].concat(n[e], r) : n[e] = [r] : n[e] = r
                    }
                    ;
                case "colon-list-separator":
                    return function(e, r, n) {
                        t = /(:list)$/.exec(e),
                        e = e.replace(/:list$/, ""),
                        t ? void 0 !== n[e] ? n[e] = [].concat(n[e], r) : n[e] = [r] : n[e] = r
                    }
                    ;
                case "comma":
                case "separator":
                    return function(t, r, n) {
                        var s = "string" === typeof r && r.includes(e.arrayFormatSeparator)
                          , i = "string" === typeof r && !s && d(r, e).includes(e.arrayFormatSeparator);
                        r = i ? d(r, e) : r;
                        var a = s || i ? r.split(e.arrayFormatSeparator).map((function(t) {
                            return d(t, e)
                        }
                        )) : null === r ? r : d(r, e);
                        n[t] = a
                    }
                    ;
                case "bracket-separator":
                    return function(t, r, n) {
                        var s = /(\[\])$/.test(t);
                        if (t = t.replace(/\[\]$/, ""),
                        s) {
                            var i = null === r ? [] : r.split(e.arrayFormatSeparator).map((function(t) {
                                return d(t, e)
                            }
                            ));
                            void 0 !== n[t] ? n[t] = [].concat(n[t], i) : n[t] = i
                        } else
                            n[t] = r ? d(r, e) : r
                    }
                    ;
                default:
                    return function(e, t, r) {
                        void 0 !== r[e] ? r[e] = [].concat(r[e], t) : r[e] = t
                    }
                }
            }(t)
              , n = Object.create(null);
            if ("string" !== typeof e)
                return n;
            if (!(e = e.trim().replace(/^[?#&]/, "")))
                return n;
            var a, o = i(e.split("&"));
            try {
                for (o.s(); !(a = o.n()).done; ) {
                    var c = a.value;
                    if ("" !== c) {
                        var l = u(t.decode ? c.replace(/\+/g, " ") : c, "=")
                          , p = s(l, 2)
                          , f = p[0]
                          , g = p[1];
                        g = void 0 === g ? null : ["comma", "separator", "bracket-separator"].includes(t.arrayFormat) ? g : d(g, t),
                        r(d(f, t), g, n)
                    }
                }
            } catch (_) {
                o.e(_)
            } finally {
                o.f()
            }
            for (var m = 0, b = Object.keys(n); m < b.length; m++) {
                var k = b[m]
                  , w = n[k];
                if ("object" === typeof w && null !== w)
                    for (var x = 0, E = Object.keys(w); x < E.length; x++) {
                        var Z = E[x];
                        w[Z] = y(w[Z], t)
                    }
                else
                    n[k] = y(w, t)
            }
            return !1 === t.sort ? n : (!0 === t.sort ? Object.keys(n).sort() : Object.keys(n).sort(t.sort)).reduce((function(e, t) {
                var r = n[t];
                return Boolean(r) && "object" === typeof r && !Array.isArray(r) ? e[t] = v(r) : e[t] = r,
                e
            }
            ), Object.create(null))
        }
        t.extract = m,
        t.parse = b,
        t.stringify = function(e, t) {
            if (!e)
                return "";
            h((t = Object.assign({
                encode: !0,
                strict: !0,
                arrayFormat: "none",
                arrayFormatSeparator: ","
            }, t)).arrayFormatSeparator);
            for (var r = function(r) {
                return t.skipNull && (null === (n = e[r]) || void 0 === n) || t.skipEmptyString && "" === e[r];
                var n
            }, n = function(e) {
                switch (e.arrayFormat) {
                case "index":
                    return function(t) {
                        return function(r, n) {
                            var s = r.length;
                            return void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : [].concat(a(r), null === n ? [[f(t, e), "[", s, "]"].join("")] : [[f(t, e), "[", f(s, e), "]=", f(n, e)].join("")])
                        }
                    }
                    ;
                case "bracket":
                    return function(t) {
                        return function(r, n) {
                            return void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : [].concat(a(r), null === n ? [[f(t, e), "[]"].join("")] : [[f(t, e), "[]=", f(n, e)].join("")])
                        }
                    }
                    ;
                case "colon-list-separator":
                    return function(t) {
                        return function(r, n) {
                            return void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : [].concat(a(r), null === n ? [[f(t, e), ":list="].join("")] : [[f(t, e), ":list=", f(n, e)].join("")])
                        }
                    }
                    ;
                case "comma":
                case "separator":
                case "bracket-separator":
                    var t = "bracket-separator" === e.arrayFormat ? "[]=" : "=";
                    return function(r) {
                        return function(n, s) {
                            return void 0 === s || e.skipNull && null === s || e.skipEmptyString && "" === s ? n : (s = null === s ? "" : s,
                            0 === n.length ? [[f(r, e), t, f(s, e)].join("")] : [[n, f(s, e)].join(e.arrayFormatSeparator)])
                        }
                    }
                    ;
                default:
                    return function(t) {
                        return function(r, n) {
                            return void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : [].concat(a(r), null === n ? [f(t, e)] : [[f(t, e), "=", f(n, e)].join("")])
                        }
                    }
                }
            }(t), s = {}, i = 0, o = Object.keys(e); i < o.length; i++) {
                var c = o[i];
                r(c) || (s[c] = e[c])
            }
            var u = Object.keys(s);
            return !1 !== t.sort && u.sort(t.sort),
            u.map((function(r) {
                var s = e[r];
                return void 0 === s ? "" : null === s ? f(r, t) : Array.isArray(s) ? 0 === s.length && "bracket-separator" === t.arrayFormat ? f(r, t) + "[]" : s.reduce(n(r), []).join("&") : f(r, t) + "=" + f(s, t)
            }
            )).filter((function(e) {
                return e.length > 0
            }
            )).join("&")
        }
        ,
        t.parseUrl = function(e, t) {
            t = Object.assign({
                decode: !0
            }, t);
            var r = u(e, "#")
              , n = s(r, 2)
              , i = n[0]
              , a = n[1];
            return Object.assign({
                url: i.split("?")[0] || "",
                query: b(m(e), t)
            }, t && t.parseFragmentIdentifier && a ? {
                fragmentIdentifier: d(a, t)
            } : {})
        }
        ,
        t.stringifyUrl = function(e, r) {
            r = Object.assign(n({
                encode: !0,
                strict: !0
            }, p, !0), r);
            var s = g(e.url).split("?")[0] || ""
              , i = t.extract(e.url)
              , a = t.parse(i, {
                sort: !1
            })
              , o = Object.assign(a, e.query)
              , c = t.stringify(o, r);
            c && (c = "?".concat(c));
            var u = function(e) {
                var t = ""
                  , r = e.indexOf("#");
                return -1 !== r && (t = e.slice(r)),
                t
            }(e.url);
            return e.fragmentIdentifier && (u = "#".concat(r[p] ? f(e.fragmentIdentifier, r) : e.fragmentIdentifier)),
            "".concat(s).concat(c).concat(u)
        }
        ,
        t.pick = function(e, r, s) {
            s = Object.assign(n({
                parseFragmentIdentifier: !0
            }, p, !1), s);
            var i = t.parseUrl(e, s)
              , a = i.url
              , o = i.query
              , c = i.fragmentIdentifier;
            return t.stringifyUrl({
                url: a,
                query: l(o, r),
                fragmentIdentifier: c
            }, s)
        }
        ,
        t.exclude = function(e, r, n) {
            var s = Array.isArray(r) ? function(e) {
                return !r.includes(e)
            }
            : function(e, t) {
                return !r(e, t)
            }
            ;
            return t.pick(e, s, n)
        }
    },
    57889: function(e, t, r) {
        var n = r(13012).default
          , s = r(17061).default
          , i = r(42122).default
          , a = r(17156).default
          , o = r(56690).default
          , c = r(89728).default
          , u = r(61655).default
          , l = r(26389).default
          , p = r(41588).default
          , h = r(73808).default;
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.Web3Provider = t.Provider = void 0;
        var f = r(68174)
          , d = f.providers.Formatter
          , v = r(28786)
          , g = r(87840)
          , m = r(11561)
          , y = r(15090)
          , b = r(516)
          , k = null
          , w = function(e) {
            u(r, e);
            var t = l(r);
            function r(e, n) {
                var s;
                o(this, r),
                (s = t.call(this, e, n)).pollingInterval = 500;
                var i = s.formatter.blockTag.bind(s.formatter);
                return s.formatter.blockTag = function(e) {
                    return "committed" == e || "finalized" == e ? e : i(e)
                }
                ,
                s.contractAddresses = {},
                s.formatter.transaction = y.parseTransaction,
                s
            }
            return c(r, [{
                key: "getTransactionReceipt",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r, n = this;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return e.next = 4,
                                    t;
                                case 4:
                                    return t = e.sent,
                                    r = {
                                        transactionHash: this.formatter.hash(t, !0)
                                    },
                                    e.abrupt("return", (0,
                                    v.poll)(a(s().mark((function e() {
                                        var a, o, c, u;
                                        return s().wrap((function(e) {
                                            for (; ; )
                                                switch (e.prev = e.next) {
                                                case 0:
                                                    return e.next = 2,
                                                    n.perform("getTransactionReceipt", r);
                                                case 2:
                                                    if (null != (a = e.sent)) {
                                                        e.next = 7;
                                                        break
                                                    }
                                                    if (null != n._emitted["t:" + t]) {
                                                        e.next = 6;
                                                        break
                                                    }
                                                    return e.abrupt("return", null);
                                                case 6:
                                                    return e.abrupt("return", void 0);
                                                case 7:
                                                    if (null != a.blockNumber || null == a.status || !f.BigNumber.from(a.status).isZero()) {
                                                        e.next = 9;
                                                        break
                                                    }
                                                    return e.abrupt("return", i(i({}, n.formatter.receipt(i(i({}, a), {}, {
                                                        confirmations: 1,
                                                        blockNumber: 0,
                                                        blockHash: f.ethers.constants.HashZero
                                                    }))), {}, {
                                                        blockNumber: null,
                                                        blockHash: null,
                                                        l1BatchNumber: null,
                                                        l1BatchTxIndex: null
                                                    }));
                                                case 9:
                                                    if (null != a.blockHash) {
                                                        e.next = 13;
                                                        break
                                                    }
                                                    return e.abrupt("return", void 0);
                                                case 13:
                                                    if (null != (o = n.formatter.receipt(a)).blockNumber) {
                                                        e.next = 18;
                                                        break
                                                    }
                                                    o.confirmations = 0,
                                                    e.next = 25;
                                                    break;
                                                case 18:
                                                    if (null != o.confirmations) {
                                                        e.next = 25;
                                                        break
                                                    }
                                                    return e.next = 21,
                                                    n._getInternalBlockNumber(100 + 2 * n.pollingInterval);
                                                case 21:
                                                    c = e.sent,
                                                    (u = c - o.blockNumber + 1) <= 0 && (u = 1),
                                                    o.confirmations = u;
                                                case 25:
                                                    return e.abrupt("return", o);
                                                case 26:
                                                case "end":
                                                    return e.stop()
                                                }
                                        }
                                        ), e)
                                    }
                                    ))), {
                                        oncePoll: this
                                    }));
                                case 7:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getBlock",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.abrupt("return", this._getBlock(t, !1));
                                case 1:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getBlockWithTransactions",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.abrupt("return", this._getBlock(t, !0));
                                case 1:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getBalance",
                value: function() {
                    var e = a(s().mark((function e(t, n, i) {
                        var a, o;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (a = this.formatter.blockTag(n),
                                    null != i && !(0,
                                    y.isETH)(i)) {
                                        e.next = 7;
                                        break
                                    }
                                    return e.next = 4,
                                    p(h(r.prototype), "getBalance", this).call(this, t, a);
                                case 4:
                                case 11:
                                    return e.abrupt("return", e.sent);
                                case 7:
                                    return e.prev = 7,
                                    o = g.IERC20MetadataFactory.connect(i, this),
                                    e.next = 11,
                                    o.balanceOf(t, {
                                        blockTag: a
                                    });
                                case 14:
                                    return e.prev = 14,
                                    e.t0 = e.catch(7),
                                    e.abrupt("return", f.BigNumber.from(0));
                                case 17:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[7, 14]])
                    }
                    )));
                    return function(t, r, n) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "l2TokenAddress",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r, n;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (t != y.ETH_ADDRESS) {
                                        e.next = 4;
                                        break
                                    }
                                    return e.abrupt("return", y.ETH_ADDRESS);
                                case 4:
                                    return e.next = 6,
                                    this.getDefaultBridgeAddresses();
                                case 6:
                                    return r = e.sent.erc20L2,
                                    n = g.IL2BridgeFactory.connect(r, this),
                                    e.next = 10,
                                    n.l2TokenAddress(t);
                                case 10:
                                    return e.abrupt("return", e.sent);
                                case 11:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "l1TokenAddress",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r, n;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (t != y.ETH_ADDRESS) {
                                        e.next = 4;
                                        break
                                    }
                                    return e.abrupt("return", y.ETH_ADDRESS);
                                case 4:
                                    return e.next = 6,
                                    this.getDefaultBridgeAddresses();
                                case 6:
                                    return r = e.sent.erc20L2,
                                    n = g.IL2BridgeFactory.connect(r, this),
                                    e.next = 10,
                                    n.l1TokenAddress(t);
                                case 10:
                                    return e.abrupt("return", e.sent);
                                case 11:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "estimateGas",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r, n;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return e.next = 4,
                                    f.utils.resolveProperties({
                                        transaction: this._getTransactionRequest(t)
                                    });
                                case 4:
                                    return r = e.sent,
                                    null != t.customData && (r.transaction.customData = t.customData),
                                    e.next = 8,
                                    this.perform("estimateGas", r);
                                case 8:
                                    return n = e.sent,
                                    e.prev = 9,
                                    e.abrupt("return", f.BigNumber.from(n));
                                case 13:
                                    throw e.prev = 13,
                                    e.t0 = e.catch(9),
                                    new Error("bad result from backend (estimateGas): ".concat(n));
                                case 16:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[9, 13]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "estimateGasL1",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var n, i;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.getNetwork();
                                case 2:
                                    return e.next = 4,
                                    f.utils.resolveProperties({
                                        transaction: this._getTransactionRequest(t)
                                    });
                                case 4:
                                    return n = e.sent,
                                    null != t.customData && (n.transaction.customData = t.customData),
                                    e.next = 8,
                                    this.send("zks_estimateGasL1ToL2", [r.hexlifyTransaction(n.transaction, {
                                        from: !0
                                    })]);
                                case 8:
                                    return i = e.sent,
                                    e.prev = 9,
                                    e.abrupt("return", f.BigNumber.from(i));
                                case 13:
                                    throw e.prev = 13,
                                    e.t0 = e.catch(9),
                                    new Error("bad result from backend (zks_estimateGasL1ToL2): ".concat(i));
                                case 16:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[9, 13]])
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getGasPrice",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r, n;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return r = t ? [t] : [],
                                    e.next = 3,
                                    this.send("eth_gasPrice", r);
                                case 3:
                                    return n = e.sent,
                                    e.abrupt("return", f.BigNumber.from(n));
                                case 5:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getMessageProof",
                value: function() {
                    var e = a(s().mark((function e(t, r, n, i) {
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.send("zks_getL2ToL1MsgProof", [f.BigNumber.from(t).toNumber(), r, f.ethers.utils.hexlify(n), i]);
                                case 2:
                                    return e.abrupt("return", e.sent);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t, r, n, s) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getLogProof",
                value: function() {
                    var e = a(s().mark((function e(t, r) {
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.send("zks_getL2ToL1LogProof", [f.ethers.utils.hexlify(t), r]);
                                case 2:
                                    return e.abrupt("return", e.sent);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getL1BatchBlockRange",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.send("zks_getL1BatchBlockRange", [t]);
                                case 2:
                                    if (null != (r = e.sent)) {
                                        e.next = 5;
                                        break
                                    }
                                    return e.abrupt("return", null);
                                case 5:
                                    return e.abrupt("return", [parseInt(r[0], 16), parseInt(r[1], 16)]);
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getMainContractAddress",
                value: function() {
                    var e = a(s().mark((function e() {
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (this.contractAddresses.mainContract) {
                                        e.next = 4;
                                        break
                                    }
                                    return e.next = 3,
                                    this.send("zks_getMainContract", []);
                                case 3:
                                    this.contractAddresses.mainContract = e.sent;
                                case 4:
                                    return e.abrupt("return", this.contractAddresses.mainContract);
                                case 5:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getTestnetPaymasterAddress",
                value: function() {
                    var e = a(s().mark((function e() {
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.send("zks_getTestnetPaymaster", []);
                                case 2:
                                    return e.abrupt("return", e.sent);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getDefaultBridgeAddresses",
                value: function() {
                    var e = a(s().mark((function e() {
                        var t;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (this.contractAddresses.erc20BridgeL1) {
                                        e.next = 6;
                                        break
                                    }
                                    return e.next = 3,
                                    this.send("zks_getBridgeContracts", []);
                                case 3:
                                    t = e.sent,
                                    this.contractAddresses.erc20BridgeL1 = t.l1Erc20DefaultBridge,
                                    this.contractAddresses.erc20BridgeL2 = t.l2Erc20DefaultBridge;
                                case 6:
                                    return e.abrupt("return", {
                                        erc20L1: this.contractAddresses.erc20BridgeL1,
                                        erc20L2: this.contractAddresses.erc20BridgeL2
                                    });
                                case 7:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getConfirmedTokens",
                value: function() {
                    var e = a(s().mark((function e() {
                        var t, r, n, a = arguments;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return t = a.length > 0 && void 0 !== a[0] ? a[0] : 0,
                                    r = a.length > 1 && void 0 !== a[1] ? a[1] : 255,
                                    e.next = 4,
                                    this.send("zks_getConfirmedTokens", [t, r]);
                                case 4:
                                    return n = e.sent,
                                    e.abrupt("return", n.map((function(e) {
                                        return i({
                                            address: e.l2Address
                                        }, e)
                                    }
                                    )));
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getTokenPrice",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.send("zks_getTokenPrice", [t]);
                                case 2:
                                    return e.abrupt("return", e.sent);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getAllAccountBalances",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r, n;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.send("zks_getAllAccountBalances", [t]);
                                case 2:
                                    for (n in r = e.sent)
                                        r[n] = f.BigNumber.from(r[n]);
                                    return e.abrupt("return", r);
                                case 5:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "l1ChainId",
                value: function() {
                    var e = a(s().mark((function e() {
                        var t;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.send("zks_L1ChainId", []);
                                case 2:
                                    return t = e.sent,
                                    e.abrupt("return", f.BigNumber.from(t).toNumber());
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getL1BatchNumber",
                value: function() {
                    var e = a(s().mark((function e() {
                        var t;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.send("zks_L1BatchNumber", []);
                                case 2:
                                    return t = e.sent,
                                    e.abrupt("return", f.BigNumber.from(t).toNumber());
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getL1BatchDetails",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.send("zks_getL1BatchDetails", [t]);
                                case 2:
                                    return e.abrupt("return", e.sent);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getBlockDetails",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.send("zks_getBlockDetails", [t]);
                                case 2:
                                    return e.abrupt("return", e.sent);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getTransactionDetails",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.send("zks_getTransactionDetails", [t]);
                                case 2:
                                    return e.abrupt("return", e.sent);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getWithdrawTx",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r, i, a, o, c, u, l, p;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (null != (c = Object.assign({}, (n(t),
                                    t))).to || null != c.from) {
                                        e.next = 3;
                                        break
                                    }
                                    throw new Error("withdrawal target address is undefined");
                                case 3:
                                    if (null !== (r = c.to) && void 0 !== r || (c.to = c.from),
                                    null !== (i = c.overrides) && void 0 !== i || (c.overrides = {}),
                                    null !== (a = (o = c.overrides).from) && void 0 !== a || (o.from = c.from),
                                    !(0,
                                    y.isETH)(c.token)) {
                                        e.next = 13;
                                        break
                                    }
                                    if (c.overrides.value || (c.overrides.value = c.amount),
                                    f.BigNumber.from(c.overrides.value).eq(c.amount)) {
                                        e.next = 11;
                                        break
                                    }
                                    throw new Error("The tx.value is not equal to the value withdrawn");
                                case 11:
                                    return u = g.IEthTokenFactory.connect(y.L2_ETH_TOKEN_ADDRESS, this),
                                    e.abrupt("return", u.populateTransaction.withdraw(c.to, c.overrides));
                                case 13:
                                    if (null != c.bridgeAddress) {
                                        e.next = 18;
                                        break
                                    }
                                    return e.next = 16,
                                    this.getDefaultBridgeAddresses();
                                case 16:
                                    l = e.sent,
                                    c.bridgeAddress = l.erc20L2;
                                case 18:
                                    return p = g.IL2BridgeFactory.connect(c.bridgeAddress, this),
                                    e.abrupt("return", p.populateTransaction.withdraw(c.to, c.token, c.amount, c.overrides));
                                case 20:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "estimateGasWithdraw",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.getWithdrawTx(t);
                                case 2:
                                    return r = e.sent,
                                    e.next = 5,
                                    this.estimateGas(r);
                                case 5:
                                    return e.abrupt("return", e.sent);
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getTransferTx",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r, a, o, c, u;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (c = Object.assign({}, (n(t),
                                    t)),
                                    null !== (r = c.overrides) && void 0 !== r || (c.overrides = {}),
                                    null !== (a = (o = c.overrides).from) && void 0 !== a || (o.from = c.from),
                                    null != c.token && c.token != y.ETH_ADDRESS) {
                                        e.next = 16;
                                        break
                                    }
                                    return e.t0 = i,
                                    e.t1 = i,
                                    e.t2 = {},
                                    e.next = 9,
                                    f.ethers.utils.resolveProperties(c.overrides);
                                case 9:
                                    return e.t3 = e.sent,
                                    e.t4 = (0,
                                    e.t1)(e.t2, e.t3),
                                    e.t5 = {},
                                    e.t6 = {
                                        to: c.to,
                                        value: c.amount
                                    },
                                    e.abrupt("return", (0,
                                    e.t0)(e.t4, e.t5, e.t6));
                                case 16:
                                    return u = g.IERC20MetadataFactory.connect(c.token, this),
                                    e.next = 19,
                                    u.populateTransaction.transfer(c.to, c.amount, c.overrides);
                                case 19:
                                    return e.abrupt("return", e.sent);
                                case 20:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "estimateGasTransfer",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.getTransferTx(t);
                                case 2:
                                    return r = e.sent,
                                    e.next = 5,
                                    this.estimateGas(r);
                                case 5:
                                    return e.abrupt("return", e.sent);
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "newFilter",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    t;
                                case 2:
                                    return t = e.sent,
                                    e.next = 5,
                                    this.send("eth_newFilter", [this._prepareFilter(t)]);
                                case 5:
                                    return r = e.sent,
                                    e.abrupt("return", f.BigNumber.from(r));
                                case 7:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "newBlockFilter",
                value: function() {
                    var e = a(s().mark((function e() {
                        var t;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.send("eth_newBlockFilter", []);
                                case 2:
                                    return t = e.sent,
                                    e.abrupt("return", f.BigNumber.from(t));
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "newPendingTransactionsFilter",
                value: function() {
                    var e = a(s().mark((function e() {
                        var t;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.send("eth_newPendingTransactionFilter", []);
                                case 2:
                                    return t = e.sent,
                                    e.abrupt("return", f.BigNumber.from(t));
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getFilterChanges",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.send("eth_getFilterChanges", [t.toHexString()]);
                                case 2:
                                    return r = e.sent,
                                    e.abrupt("return", "string" === typeof r[0] ? r : this._parseLogs(r));
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getLogs",
                value: function() {
                    var e = a(s().mark((function e() {
                        var t, r, n = arguments;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return t = n.length > 0 && void 0 !== n[0] ? n[0] : {},
                                    e.next = 3,
                                    t;
                                case 3:
                                    return t = e.sent,
                                    e.next = 6,
                                    this.send("eth_getLogs", [this._prepareFilter(t)]);
                                case 6:
                                    return r = e.sent,
                                    e.abrupt("return", this._parseLogs(r));
                                case 8:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "_parseLogs",
                value: function(e) {
                    return d.arrayOf(this.formatter.filterLog.bind(this.formatter))(e)
                }
            }, {
                key: "_prepareFilter",
                value: function(e) {
                    return i(i({}, e), {}, {
                        fromBlock: null == e.fromBlock ? null : this.formatter.blockTag(e.fromBlock),
                        toBlock: null == e.fromBlock ? null : this.formatter.blockTag(e.toBlock)
                    })
                }
            }, {
                key: "_wrapTransaction",
                value: function(e, t) {
                    var n = this
                      , i = p(h(r.prototype), "_wrapTransaction", this).call(this, e, t);
                    return i.waitFinalize = a(s().mark((function e() {
                        var t, r;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    i.wait();
                                case 2:
                                    t = e.sent;
                                case 3:
                                    return e.next = 6,
                                    n.getBlock("finalized");
                                case 6:
                                    if (r = e.sent,
                                    !(t.blockNumber <= r.number)) {
                                        e.next = 13;
                                        break
                                    }
                                    return e.next = 10,
                                    n.getTransactionReceipt(t.transactionHash);
                                case 10:
                                    return e.abrupt("return", e.sent);
                                case 13:
                                    return e.next = 15,
                                    (0,
                                    y.sleep)(n.pollingInterval);
                                case 15:
                                    e.next = 3;
                                    break;
                                case 17:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    ))),
                    i
                }
            }, {
                key: "getTransactionStatus",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r, n;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    this.getTransaction(t);
                                case 2:
                                    if (null != (r = e.sent)) {
                                        e.next = 5;
                                        break
                                    }
                                    return e.abrupt("return", m.TransactionStatus.NotFound);
                                case 5:
                                    if (null != r.blockNumber) {
                                        e.next = 7;
                                        break
                                    }
                                    return e.abrupt("return", m.TransactionStatus.Processing);
                                case 7:
                                    return e.next = 9,
                                    this.getBlock("finalized");
                                case 9:
                                    if (n = e.sent,
                                    !(r.blockNumber <= n.number)) {
                                        e.next = 12;
                                        break
                                    }
                                    return e.abrupt("return", m.TransactionStatus.Finalized);
                                case 12:
                                    return e.abrupt("return", m.TransactionStatus.Committed);
                                case 13:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getTransaction",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var n;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    t;
                                case 2:
                                    return t = e.sent,
                                    e.next = 5,
                                    p(h(r.prototype), "getTransaction", this).call(this, t);
                                case 5:
                                    return n = e.sent,
                                    e.abrupt("return", n ? this._wrapTransaction(n, t) : null);
                                case 7:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "sendTransaction",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    p(h(r.prototype), "sendTransaction", this).call(this, t);
                                case 2:
                                    return e.abrupt("return", e.sent);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getL2TransactionFromPriorityOp",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r, n, i;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    t.wait();
                                case 2:
                                    return r = e.sent,
                                    e.t0 = y.getL2HashFromPriorityOp,
                                    e.t1 = r,
                                    e.next = 7,
                                    this.getMainContractAddress();
                                case 7:
                                    e.t2 = e.sent,
                                    n = (0,
                                    e.t0)(e.t1, e.t2),
                                    i = null;
                                case 10:
                                    return e.next = 12,
                                    this.getTransactionStatus(n);
                                case 12:
                                    return i = e.sent,
                                    e.next = 15,
                                    (0,
                                    y.sleep)(this.pollingInterval);
                                case 15:
                                    if (i == m.TransactionStatus.NotFound) {
                                        e.next = 10;
                                        break
                                    }
                                case 16:
                                    return e.next = 18,
                                    this.getTransaction(n);
                                case 18:
                                    return e.abrupt("return", e.sent);
                                case 19:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getPriorityOpResponse",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r, n = this;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return (r = i({}, t)).waitL1Commit = r.wait,
                                    r.wait = a(s().mark((function e() {
                                        var r;
                                        return s().wrap((function(e) {
                                            for (; ; )
                                                switch (e.prev = e.next) {
                                                case 0:
                                                    return e.next = 2,
                                                    n.getL2TransactionFromPriorityOp(t);
                                                case 2:
                                                    return r = e.sent,
                                                    e.next = 5,
                                                    r.wait();
                                                case 5:
                                                    return e.abrupt("return", e.sent);
                                                case 6:
                                                case "end":
                                                    return e.stop()
                                                }
                                        }
                                        ), e)
                                    }
                                    ))),
                                    r.waitFinalize = a(s().mark((function e() {
                                        var r;
                                        return s().wrap((function(e) {
                                            for (; ; )
                                                switch (e.prev = e.next) {
                                                case 0:
                                                    return e.next = 2,
                                                    n.getL2TransactionFromPriorityOp(t);
                                                case 2:
                                                    return r = e.sent,
                                                    e.next = 5,
                                                    r.waitFinalize();
                                                case 5:
                                                    return e.abrupt("return", e.sent);
                                                case 6:
                                                case "end":
                                                    return e.stop()
                                                }
                                        }
                                        ), e)
                                    }
                                    ))),
                                    e.abrupt("return", r);
                                case 5:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getContractAccountInfo",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r, n;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return r = new f.Contract(y.CONTRACT_DEPLOYER_ADDRESS,y.CONTRACT_DEPLOYER,this),
                                    e.next = 3,
                                    r.getAccountInfo(t);
                                case 3:
                                    return n = e.sent,
                                    e.abrupt("return", {
                                        supportedAAVersion: n.supportedAAVersion,
                                        nonceOrdering: n.nonceOrdering
                                    });
                                case 5:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "estimateL1ToL2Execute",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var r, n, i, a;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return null !== (r = t.gasPerPubdataByte) && void 0 !== r || (t.gasPerPubdataByte = y.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT),
                                    null !== (n = t.caller) && void 0 !== n || (t.caller = f.ethers.Wallet.createRandom().address),
                                    i = {
                                        gasPerPubdataByte: t.gasPerPubdataByte
                                    },
                                    t.factoryDeps && Object.assign(i, {
                                        factoryDeps: t.factoryDeps
                                    }),
                                    e.next = 6,
                                    this.estimateGasL1({
                                        from: t.caller,
                                        data: t.calldata,
                                        to: t.contractAddress,
                                        value: t.l2Value,
                                        customData: i
                                    });
                                case 6:
                                    return a = e.sent,
                                    e.abrupt("return", a);
                                case 8:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }], [{
                key: "getFormatter",
                value: function() {
                    if (null == k) {
                        var e = (k = new d).number.bind(k)
                          , t = k.boolean.bind(k)
                          , r = k.hash.bind(k)
                          , n = k.address.bind(k);
                        k.formats.receiptLog.l1BatchNumber = d.allowNull(e),
                        k.formats.l2Tol1Log = {
                            blockNumber: e,
                            blockHash: r,
                            l1BatchNumber: d.allowNull(e),
                            transactionIndex: e,
                            shardId: e,
                            isService: t,
                            sender: n,
                            key: r,
                            value: r,
                            transactionHash: r,
                            logIndex: e
                        },
                        k.formats.receipt.l1BatchNumber = d.allowNull(e),
                        k.formats.receipt.l1BatchTxIndex = d.allowNull(e),
                        k.formats.receipt.l2ToL1Logs = d.arrayOf((function(e) {
                            return d.check(k.formats.l2Tol1Log, e)
                        }
                        )),
                        k.formats.block.l1BatchNumber = d.allowNull(e),
                        k.formats.block.l1BatchTimestamp = d.allowNull(e),
                        k.formats.blockWithTransactions.l1BatchNumber = d.allowNull(e),
                        k.formats.blockWithTransactions.l1BatchTimestamp = d.allowNull(e),
                        k.formats.transaction.l1BatchNumber = d.allowNull(e),
                        k.formats.transaction.l1BatchTxIndex = d.allowNull(e),
                        k.formats.filterLog.l1BatchNumber = d.allowNull(e)
                    }
                    return k
                }
            }, {
                key: "hexlifyTransaction",
                value: function(e, t) {
                    var r, n = f.ethers.providers.JsonRpcProvider.hexlifyTransaction(e, i(i({}, t), {}, {
                        customData: !0,
                        from: !0
                    }));
                    return null == e.customData || (n.eip712Meta = {
                        gasPerPubdata: f.utils.hexValue(null !== (r = e.customData.gasPerPubdata) && void 0 !== r ? r : 0)
                    },
                    e.type = y.EIP712_TX_TYPE,
                    e.customData.factoryDeps && (n.eip712Meta.factoryDeps = e.customData.factoryDeps.map((function(e) {
                        return Array.from(f.utils.arrayify(e))
                    }
                    ))),
                    e.customData.paymasterParams && (n.eip712Meta.paymasterParams = {
                        paymaster: f.utils.hexlify(e.customData.paymasterParams.paymaster),
                        paymasterInput: Array.from(f.utils.arrayify(e.customData.paymasterParams.paymasterInput))
                    })),
                    n
                }
            }, {
                key: "getDefaultProvider",
                value: function() {
                    return new r({
                        NODE_ENV: "production",
                        PUBLIC_URL: "",
                        WDS_SOCKET_HOST: void 0,
                        WDS_SOCKET_PATH: void 0,
                        WDS_SOCKET_PORT: void 0,
                        FAST_REFRESH: !0
                    }.ZKSYNC_WEB3_API_URL || "http://localhost:3050")
                }
            }]),
            r
        }(f.ethers.providers.JsonRpcProvider);
        t.Provider = w;
        var x = function(e) {
            u(r, e);
            var t = l(r);
            function r(e, n) {
                var s;
                if (o(this, r),
                null == e)
                    throw new Error("missing provider");
                if (!e.request)
                    throw new Error("provider must implement eip-1193");
                var i = e.host || e.path || (e.isMetaMask ? "metamask" : "eip-1193:");
                return (s = t.call(this, i, n)).provider = e,
                s
            }
            return c(r, [{
                key: "send",
                value: function() {
                    var e = a(s().mark((function e(t, r) {
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return null !== r && void 0 !== r || (r = []),
                                    "eth_sign" == t && (this.provider.isMetaMask || this.provider.isStatus) && (t = "personal_sign",
                                    r = [r[1], r[0]]),
                                    e.next = 4,
                                    this.provider.request({
                                        method: t,
                                        params: r
                                    });
                                case 4:
                                    return e.abrupt("return", e.sent);
                                case 5:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t, r) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "getSigner",
                value: function(e) {
                    return b.Signer.from(p(h(r.prototype), "getSigner", this).call(this, e))
                }
            }, {
                key: "estimateGas",
                value: function() {
                    var e = a(s().mark((function e(t) {
                        var n, i, a;
                        return s().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    p(h(r.prototype), "estimateGas", this).call(this, t);
                                case 2:
                                    return n = e.sent,
                                    i = f.BigNumber.from(21e3),
                                    a = null != t.customData || t.type == y.EIP712_TX_TYPE,
                                    e.abrupt("return", n.gt(i) || a ? n : i);
                                case 6:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    )));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }]),
            r
        }(w);
        t.Web3Provider = x
    },
    51460: function(e, t, r) {
        r.d(t, {
            I: function() {
                return s
            }
        });
        var n = r(74175);
        function s() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = e.priority
              , r = e.stallTimeout
              , s = e.weight;
            return function(e) {
                return e.rpcUrls.default.http[0] ? {
                    chain: e,
                    provider: function() {
                        var i, a, o = new n.c(e.rpcUrls.default.http[0],{
                            chainId: e.id,
                            name: e.network,
                            ensAddress: null === (i = e.contracts) || void 0 === i || null === (a = i.ensRegistry) || void 0 === a ? void 0 : a.address
                        });
                        return Object.assign(o, {
                            priority: t,
                            stallTimeout: r,
                            weight: s
                        })
                    }
                } : null
            }
        }
    }
}]);
